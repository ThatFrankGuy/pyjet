/* Generated by Cython 0.25.2 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_25_2"
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x03030000 || (PY_MAJOR_VERSION == 2 && PY_VERSION_HEX >= 0x02070000)
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_FASTCALL
  #define METH_FASTCALL 0x80
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject **args,
                                              Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE___libpyjet
#define __PYX_HAVE_API___libpyjet
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include <math.h>
#include <vector>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <string>
#include <memory>
#include "core.h"
#include "pythread.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 1
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING "ascii"
#define __Pyx_PyObject_FromString __Pyx_PyStr_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyStr_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "pyjet/src/FastJet.pyx",
  "__init__.pxd",
  "pyjet/src/_libpyjet.pyx",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
};

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":725
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */

#line 725 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":726
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */

#line 726 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":727
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */

#line 727 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":728
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */

#line 728 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":732
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */

#line 732 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":733
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */

#line 733 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":734
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */

#line 734 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":735
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */

#line 735 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":739
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */

#line 739 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":740
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */

#line 740 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":749
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */

#line 749 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":750
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */

#line 750 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":751
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */

#line 751 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":753
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */

#line 753 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":754
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */

#line 754 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":755
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */

#line 755 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":757
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */

#line 757 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":758
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */

#line 758 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":760
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */

#line 760 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":761
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */

#line 761 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":762
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */

#line 762 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;

/* "_libpyjet.pyx":26
 * from libcpp.memory cimport shared_ptr
 * DTYPE = np.float64
 * ctypedef np.float64_t DTYPE_t             # <<<<<<<<<<<<<<
 * 
 * DTYPE_PTEPM = np.dtype([('pT', DTYPE), ('eta', DTYPE), ('phi', DTYPE), ('mass', DTYPE)])
 */

#line 26 "_libpyjet.pyx"
typedef __pyx_t_5numpy_float64_t __pyx_t_9_libpyjet_DTYPE_t;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/
struct __pyx_obj_9_libpyjet_PyClusterSequence;
struct __pyx_obj_9_libpyjet_PyPseudoJet;
struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":764
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */

#line 764 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":765
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */

#line 765 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":766
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */

#line 766 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":768
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */

#line 768 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
typedef npy_cdouble __pyx_t_5numpy_complex_t;

#line 768 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
struct __pyx_t_9_libpyjet_PseudoJetUserInfo;

#line 768 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
struct __pyx_opt_args_9_libpyjet_vector_to_array;
struct __pyx_t_9_libpyjet_PseudoJetUserInfo : public fastjet::PseudoJet::UserInfoBase
#line 768 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
 {

  /* "pyjet/src/FastJet.pyx":29
 * # This class allows us to attach arbitrary info to PseudoJets in python objects
 * # (e.g. a dict)
 * cdef cppclass PseudoJetUserInfo(UserInfoBase):             # <<<<<<<<<<<<<<
 *     PyObject* info
 * 
 */

#line 29 "pyjet/src/FastJet.pyx"
  PyObject *info;

#line 29 "pyjet/src/FastJet.pyx"
   __pyx_t_9_libpyjet_PseudoJetUserInfo(PyObject *);
  virtual 
#line 29 "pyjet/src/FastJet.pyx"
 ~__pyx_t_9_libpyjet_PseudoJetUserInfo(void);

#line 29 "pyjet/src/FastJet.pyx"
};

/* "pyjet/src/FastJet.pyx":135
 * 
 * 
 * cdef np.ndarray vector_to_array(vector[PseudoJet]& jets, ep=False):             # <<<<<<<<<<<<<<
 *     # convert vector of pseudojets into numpy array
 *     cdef np.ndarray np_jets
 */

#line 135 "pyjet/src/FastJet.pyx"
struct __pyx_opt_args_9_libpyjet_vector_to_array {

#line 135 "pyjet/src/FastJet.pyx"
  int __pyx_n;

#line 135 "pyjet/src/FastJet.pyx"
  PyObject *ep;

#line 135 "pyjet/src/FastJet.pyx"
};

/* "pyjet/src/FastJet.pyx":4
 * 
 * 
 * cdef class PyClusterSequence:             # <<<<<<<<<<<<<<
 *     """ Python wrapper class for fastjet::ClusterSequence
 *     """
 */

#line 4 "pyjet/src/FastJet.pyx"
struct __pyx_obj_9_libpyjet_PyClusterSequence {

#line 4 "pyjet/src/FastJet.pyx"
  PyObject_HEAD

#line 4 "pyjet/src/FastJet.pyx"
  struct __pyx_vtabstruct_9_libpyjet_PyClusterSequence *__pyx_vtab;

#line 4 "pyjet/src/FastJet.pyx"
  fastjet::ClusterSequence *sequence;

#line 4 "pyjet/src/FastJet.pyx"
};

#line 4 "pyjet/src/FastJet.pyx"


/* "pyjet/src/FastJet.pyx":40
 * 
 * 
 * cdef class PyPseudoJet:             # <<<<<<<<<<<<<<
 *     """ Python wrapper class for fastjet::PseudoJet
 *     """
 */

#line 40 "pyjet/src/FastJet.pyx"
struct __pyx_obj_9_libpyjet_PyPseudoJet {

#line 40 "pyjet/src/FastJet.pyx"
  PyObject_HEAD

#line 40 "pyjet/src/FastJet.pyx"
  struct __pyx_vtabstruct_9_libpyjet_PyPseudoJet *__pyx_vtab;

#line 40 "pyjet/src/FastJet.pyx"
  fastjet::PseudoJet jet;

#line 40 "pyjet/src/FastJet.pyx"
  std::vector<fastjet::PseudoJet>  constits;

#line 40 "pyjet/src/FastJet.pyx"
  __pyx_t_9_libpyjet_PseudoJetUserInfo *userinfo;

#line 40 "pyjet/src/FastJet.pyx"
};

#line 40 "pyjet/src/FastJet.pyx"


/* "pyjet/src/FastJet.pyx":83
 *         return self.constits.size()
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         cdef PseudoJet jet
 *         for jet in self.constits:
 */

#line 83 "pyjet/src/FastJet.pyx"
struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ {

#line 83 "pyjet/src/FastJet.pyx"
  PyObject_HEAD

#line 83 "pyjet/src/FastJet.pyx"
  fastjet::PseudoJet __pyx_v_jet;

#line 83 "pyjet/src/FastJet.pyx"
  struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self;

#line 83 "pyjet/src/FastJet.pyx"
  std::vector<fastjet::PseudoJet> ::iterator __pyx_t_0;

#line 83 "pyjet/src/FastJet.pyx"
  std::vector<fastjet::PseudoJet>  *__pyx_t_1;

#line 83 "pyjet/src/FastJet.pyx"
};

#line 83 "pyjet/src/FastJet.pyx"


#line 83 "pyjet/src/FastJet.pyx"


/* "pyjet/src/FastJet.pyx":4
 * 
 * 
 * cdef class PyClusterSequence:             # <<<<<<<<<<<<<<
 *     """ Python wrapper class for fastjet::ClusterSequence
 *     """
 */

#line 4 "pyjet/src/FastJet.pyx"


#line 4 "pyjet/src/FastJet.pyx"
struct __pyx_vtabstruct_9_libpyjet_PyClusterSequence {

#line 4 "pyjet/src/FastJet.pyx"
  struct __pyx_obj_9_libpyjet_PyClusterSequence *(*wrap)(fastjet::ClusterSequence *);

#line 4 "pyjet/src/FastJet.pyx"
};

#line 4 "pyjet/src/FastJet.pyx"
static struct __pyx_vtabstruct_9_libpyjet_PyClusterSequence *__pyx_vtabptr_9_libpyjet_PyClusterSequence;

#line 4 "pyjet/src/FastJet.pyx"
static CYTHON_INLINE struct __pyx_obj_9_libpyjet_PyClusterSequence *__pyx_f_9_libpyjet_17PyClusterSequence_wrap(fastjet::ClusterSequence *);

#line 4 "pyjet/src/FastJet.pyx"


/* "pyjet/src/FastJet.pyx":40
 * 
 * 
 * cdef class PyPseudoJet:             # <<<<<<<<<<<<<<
 *     """ Python wrapper class for fastjet::PseudoJet
 *     """
 */

#line 40 "pyjet/src/FastJet.pyx"


#line 40 "pyjet/src/FastJet.pyx"
struct __pyx_vtabstruct_9_libpyjet_PyPseudoJet {

#line 40 "pyjet/src/FastJet.pyx"
  struct __pyx_obj_9_libpyjet_PyPseudoJet *(*wrap)(fastjet::PseudoJet &);

#line 40 "pyjet/src/FastJet.pyx"
};

#line 40 "pyjet/src/FastJet.pyx"
static struct __pyx_vtabstruct_9_libpyjet_PyPseudoJet *__pyx_vtabptr_9_libpyjet_PyPseudoJet;

#line 40 "pyjet/src/FastJet.pyx"
static CYTHON_INLINE struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_f_9_libpyjet_11PyPseudoJet_wrap(fastjet::PseudoJet &);

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = PyThreadState_GET();
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* GetModuleGlobalName.proto */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* SliceObject.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* ArgTypeTest.proto */
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* None.proto */
#include <new>

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value);

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* CoroutineBase.proto */
typedef PyObject *(*__pyx_coroutine_body_t)(PyObject *, PyObject *);
typedef struct {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static int __Pyx_Coroutine_clear(PyObject *self);
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue);
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue) PyGen_FetchStopIterationValue(pvalue)
#endif

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Generator.proto */
#define __Pyx_Generator_USED
static PyTypeObject *__pyx_GeneratorType = 0;
#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)
#define __Pyx_Generator_New(body, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, closure, name, qualname, module_name)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(void);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* PyIdentifierFromString.proto */
#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

/* ModuleImport.proto */
static PyObject *__Pyx_ImportModule(const char *name);

/* TypeImport.proto */
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static CYTHON_INLINE struct __pyx_obj_9_libpyjet_PyClusterSequence *__pyx_f_9_libpyjet_17PyClusterSequence_wrap(fastjet::ClusterSequence *__pyx_v_sequence); /* proto*/
static CYTHON_INLINE struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_f_9_libpyjet_11PyPseudoJet_wrap(fastjet::PseudoJet &__pyx_v_jet); /* proto*/

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython.version' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.list' */

/* Module declarations from 'cpython.sequence' */

/* Module declarations from 'cpython.mapping' */

/* Module declarations from 'cpython.iterator' */

/* Module declarations from 'cpython.number' */

/* Module declarations from 'cpython.int' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.bool' */
static PyTypeObject *__pyx_ptype_7cpython_4bool_bool = 0;

/* Module declarations from 'cpython.long' */

/* Module declarations from 'cpython.float' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.complex' */
static PyTypeObject *__pyx_ptype_7cpython_7complex_complex = 0;

/* Module declarations from 'cpython.string' */

/* Module declarations from 'cpython.unicode' */

/* Module declarations from 'cpython.dict' */

/* Module declarations from 'cpython.instance' */

/* Module declarations from 'cpython.function' */

/* Module declarations from 'cpython.method' */

/* Module declarations from 'cpython.weakref' */

/* Module declarations from 'cpython.getargs' */

/* Module declarations from 'cpython.pythread' */

/* Module declarations from 'cpython.pystate' */

/* Module declarations from 'cpython.cobject' */

/* Module declarations from 'cpython.oldbuffer' */

/* Module declarations from 'cpython.set' */

/* Module declarations from 'cpython.bytes' */

/* Module declarations from 'cpython.pycapsule' */

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/
static CYTHON_INLINE int __pyx_f_5numpy_import_array(void); /*proto*/

/* Module declarations from 'cython' */

/* Module declarations from 'libc.math' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.memory' */

/* Module declarations from '_libpyjet' */
static PyTypeObject *__pyx_ptype_9_libpyjet_PyClusterSequence = 0;
static PyTypeObject *__pyx_ptype_9_libpyjet_PyPseudoJet = 0;
static PyTypeObject *__pyx_ptype_9_libpyjet___pyx_scope_struct____iter__ = 0;
static PyArrayObject *__pyx_f_9_libpyjet_vector_to_array(std::vector<fastjet::PseudoJet>  &, struct __pyx_opt_args_9_libpyjet_vector_to_array *__pyx_optional_args); /*proto*/
static PyObject *__pyx_f_9_libpyjet_vector_to_list(std::vector<fastjet::PseudoJet>  &); /*proto*/
static void __pyx_f_9_libpyjet_array_to_pseudojets(PyArrayObject *, std::vector<fastjet::PseudoJet>  &, bool); /*proto*/
#define __Pyx_MODULE_NAME "_libpyjet"
int __pyx_module_is_main__libpyjet = 0;

/* Implementation of '_libpyjet' */
static PyObject *__pyx_builtin_KeyError;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_ImportError;
static const char __pyx_k_E[] = "E";
static const char __pyx_k_R[] = "R";
static const char __pyx_k_p[] = "p";
static const char __pyx_k_ep[] = "ep";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_pT[] = "pT";
static const char __pyx_k_pt[] = "pt";
static const char __pyx_k_px[] = "px";
static const char __pyx_k_py[] = "py";
static const char __pyx_k_pz[] = "pz";
static const char __pyx_k_eta[] = "eta";
static const char __pyx_k_jet[] = "jet";
static const char __pyx_k_phi[] = "phi";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_info[] = "info";
static const char __pyx_k_iter[] = "__iter__";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mass[] = "mass";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_sort[] = "sort";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_DTYPE[] = "DTYPE";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_dtype[] = "dtype";
static const char __pyx_k_empty[] = "empty";
static const char __pyx_k_names[] = "names";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_ptmin[] = "ptmin";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_cluster[] = "cluster";
static const char __pyx_k_float64[] = "float64";
static const char __pyx_k_vectors[] = "vectors";
static const char __pyx_k_DTYPE_EP[] = "DTYPE_EP";
static const char __pyx_k_KeyError[] = "KeyError";
static const char __pyx_k_itemsize[] = "itemsize";
static const char __pyx_k_libpyjet[] = "_libpyjet";
static const char __pyx_k_sequence[] = "sequence";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_pseudojets[] = "pseudojets";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_DTYPE_PTEPM[] = "DTYPE_PTEPM";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_getattribute[] = "__getattribute__";
static const char __pyx_k_PyPseudoJet___iter[] = "PyPseudoJet.__iter__";
static const char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static const char __pyx_k_home_endw_workspace_pyjet_pyjet[] = "/home/endw/workspace/pyjet/pyjet/src/FastJet.pyx";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static const char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static const char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static const char __pyx_k_PyPseudoJet_pt_0_3f_eta_1_3f_phi[] = "PyPseudoJet(pt={0:.3f}, eta={1:.3f}, phi={2:.3f}, mass={3:.3f})";
static const char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_object_must_be_of_type_PyPseudoJ[] = "object must be of type PyPseudoJet";
static const char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_n_s_DTYPE;
static PyObject *__pyx_n_s_DTYPE_EP;
static PyObject *__pyx_n_s_DTYPE_PTEPM;
static PyObject *__pyx_n_s_E;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_n_s_KeyError;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_n_s_PyPseudoJet___iter;
static PyObject *__pyx_kp_s_PyPseudoJet_pt_0_3f_eta_1_3f_phi;
static PyObject *__pyx_n_s_R;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_cluster;
static PyObject *__pyx_n_s_dtype;
static PyObject *__pyx_n_s_empty;
static PyObject *__pyx_n_s_ep;
static PyObject *__pyx_n_s_eta;
static PyObject *__pyx_n_s_float64;
static PyObject *__pyx_n_s_format;
static PyObject *__pyx_n_s_getattribute;
static PyObject *__pyx_kp_s_home_endw_workspace_pyjet_pyjet;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_info;
static PyObject *__pyx_n_s_itemsize;
static PyObject *__pyx_n_s_iter;
static PyObject *__pyx_n_s_jet;
static PyObject *__pyx_n_s_libpyjet;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_mass;
static PyObject *__pyx_n_s_names;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_kp_s_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_s_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_kp_s_object_must_be_of_type_PyPseudoJ;
static PyObject *__pyx_n_s_p;
static PyObject *__pyx_n_s_pT;
static PyObject *__pyx_n_s_phi;
static PyObject *__pyx_n_s_pseudojets;
static PyObject *__pyx_n_s_pt;
static PyObject *__pyx_n_s_ptmin;
static PyObject *__pyx_n_s_px;
static PyObject *__pyx_n_s_py;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_pz;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_send;
static PyObject *__pyx_n_s_sequence;
static PyObject *__pyx_n_s_sort;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_throw;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_vectors;
static void __pyx_pf_9_libpyjet_17PyClusterSequence___dealloc__(struct __pyx_obj_9_libpyjet_PyClusterSequence *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_17PyClusterSequence_2inclusive_jets(struct __pyx_obj_9_libpyjet_PyClusterSequence *__pyx_v_self, double __pyx_v_ptmin, bool __pyx_v_sort); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_4info___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet___getattr__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self, PyObject *__pyx_v_attr); /* proto */
static int __pyx_pf_9_libpyjet_11PyPseudoJet_2__contains__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static Py_ssize_t __pyx_pf_9_libpyjet_11PyPseudoJet_4__len__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_6__iter__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_9constituents(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_11constituents_array(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self, bool __pyx_v_ep); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_2pt___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_3eta___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_3phi___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_4mass___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_1e___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_2et___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_2px___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_2py___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_2pz___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_13__repr__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9_libpyjet_cluster(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_vectors, float __pyx_v_R, int __pyx_v_p, bool __pyx_v_ep); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_9_libpyjet_PyClusterSequence(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9_libpyjet_PyPseudoJet(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9_libpyjet___pyx_scope_struct____iter__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_int_4;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_slice__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_codeobj__13;

/* "pyjet/src/FastJet.pyx":9
 *     cdef ClusterSequence* sequence
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.sequence
 * 
 */

#line 9 "pyjet/src/FastJet.pyx"


#line 9 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 9 "pyjet/src/FastJet.pyx"
static void __pyx_pw_9_libpyjet_17PyClusterSequence_1__dealloc__(PyObject *__pyx_v_self); /*proto*/

#line 9 "pyjet/src/FastJet.pyx"
static void __pyx_pw_9_libpyjet_17PyClusterSequence_1__dealloc__(PyObject *__pyx_v_self) {

#line 9 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 9 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);

#line 9 "pyjet/src/FastJet.pyx"
  __pyx_pf_9_libpyjet_17PyClusterSequence___dealloc__(((struct __pyx_obj_9_libpyjet_PyClusterSequence *)__pyx_v_self));

#line 9 "pyjet/src/FastJet.pyx"


#line 9 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 9 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 9 "pyjet/src/FastJet.pyx"
}

#line 9 "pyjet/src/FastJet.pyx"


#line 9 "pyjet/src/FastJet.pyx"
static void __pyx_pf_9_libpyjet_17PyClusterSequence___dealloc__(struct __pyx_obj_9_libpyjet_PyClusterSequence *__pyx_v_self) {

#line 9 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 9 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pyjet/src/FastJet.pyx":10
 * 
 *     def __dealloc__(self):
 *         del self.sequence             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */

#line 10 "pyjet/src/FastJet.pyx"
  delete __pyx_v_self->sequence;

  /* "pyjet/src/FastJet.pyx":9
 *     cdef ClusterSequence* sequence
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.sequence
 * 
 */

#line 9 "pyjet/src/FastJet.pyx"


#line 9 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 9 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 9 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":13
 * 
 *     @staticmethod
 *     cdef inline PyClusterSequence wrap(ClusterSequence* sequence):             # <<<<<<<<<<<<<<
 *         wrapped_sequence = PyClusterSequence()
 *         wrapped_sequence.sequence = sequence
 */

#line 13 "pyjet/src/FastJet.pyx"


#line 13 "pyjet/src/FastJet.pyx"
static CYTHON_INLINE struct __pyx_obj_9_libpyjet_PyClusterSequence *__pyx_f_9_libpyjet_17PyClusterSequence_wrap(fastjet::ClusterSequence *__pyx_v_sequence) {
  struct __pyx_obj_9_libpyjet_PyClusterSequence *__pyx_v_wrapped_sequence = NULL
#line 13 "pyjet/src/FastJet.pyx"
;

#line 13 "pyjet/src/FastJet.pyx"
  struct __pyx_obj_9_libpyjet_PyClusterSequence *__pyx_r = NULL;

#line 13 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 13 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 13 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("wrap", 0);

  /* "pyjet/src/FastJet.pyx":14
 *     @staticmethod
 *     cdef inline PyClusterSequence wrap(ClusterSequence* sequence):
 *         wrapped_sequence = PyClusterSequence()             # <<<<<<<<<<<<<<
 *         wrapped_sequence.sequence = sequence
 *         return wrapped_sequence
 */

#line 14 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9_libpyjet_PyClusterSequence), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 14, __pyx_L1_error)

#line 14 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 14 "pyjet/src/FastJet.pyx"
  __pyx_v_wrapped_sequence = ((struct __pyx_obj_9_libpyjet_PyClusterSequence *)__pyx_t_1);

#line 14 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

  /* "pyjet/src/FastJet.pyx":15
 *     cdef inline PyClusterSequence wrap(ClusterSequence* sequence):
 *         wrapped_sequence = PyClusterSequence()
 *         wrapped_sequence.sequence = sequence             # <<<<<<<<<<<<<<
 *         return wrapped_sequence
 * 
 */

#line 15 "pyjet/src/FastJet.pyx"
  __pyx_v_wrapped_sequence->sequence = __pyx_v_sequence;

  /* "pyjet/src/FastJet.pyx":16
 *         wrapped_sequence = PyClusterSequence()
 *         wrapped_sequence.sequence = sequence
 *         return wrapped_sequence             # <<<<<<<<<<<<<<
 * 
 *     def inclusive_jets(self, double ptmin=0.0, bool sort=True):
 */

#line 16 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(((PyObject *)__pyx_r));

#line 16 "pyjet/src/FastJet.pyx"
  __Pyx_INCREF(((PyObject *)__pyx_v_wrapped_sequence));

#line 16 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_v_wrapped_sequence;

#line 16 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":13
 * 
 *     @staticmethod
 *     cdef inline PyClusterSequence wrap(ClusterSequence* sequence):             # <<<<<<<<<<<<<<
 *         wrapped_sequence = PyClusterSequence()
 *         wrapped_sequence.sequence = sequence
 */

#line 13 "pyjet/src/FastJet.pyx"


#line 13 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 13 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 13 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 13 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyClusterSequence.wrap", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 13 "pyjet/src/FastJet.pyx"
  __pyx_r = 0;

#line 13 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 13 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF((PyObject *)__pyx_v_wrapped_sequence);

#line 13 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF((PyObject *)__pyx_r);

#line 13 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 13 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 13 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":18
 *         return wrapped_sequence
 * 
 *     def inclusive_jets(self, double ptmin=0.0, bool sort=True):             # <<<<<<<<<<<<<<
 *         """ return a vector of all jets (in the sense of the inclusive algorithm) with pt >= ptmin.
 *         """
 */

#line 18 "pyjet/src/FastJet.pyx"


#line 18 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 18 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_17PyClusterSequence_3inclusive_jets(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/

#line 18 "pyjet/src/FastJet.pyx"
static char __pyx_doc_9_libpyjet_17PyClusterSequence_2inclusive_jets[] = " return a vector of all jets (in the sense of the inclusive algorithm) with pt >= ptmin.\n        ";

#line 18 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_17PyClusterSequence_3inclusive_jets(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_ptmin
#line 18 "pyjet/src/FastJet.pyx"
;
  bool __pyx_v_sort
#line 18 "pyjet/src/FastJet.pyx"
;

#line 18 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("inclusive_jets (wrapper)", 0);

#line 18 "pyjet/src/FastJet.pyx"
  {

#line 18 "pyjet/src/FastJet.pyx"
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ptmin,&__pyx_n_s_sort,0};

#line 18 "pyjet/src/FastJet.pyx"
    PyObject* values[2] = {0,0};

#line 18 "pyjet/src/FastJet.pyx"
    if (unlikely(__pyx_kwds)) {

#line 18 "pyjet/src/FastJet.pyx"
      Py_ssize_t kw_args;

#line 18 "pyjet/src/FastJet.pyx"
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);

#line 18 "pyjet/src/FastJet.pyx"
      switch (pos_args) {
        case  2: 
#line 18 "pyjet/src/FastJet.pyx"
values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: 
#line 18 "pyjet/src/FastJet.pyx"
values[0] = PyTuple_GET_ITEM(__pyx_args, 0);

#line 18 "pyjet/src/FastJet.pyx"
        case  0: break;
        default: 
#line 18 "pyjet/src/FastJet.pyx"
goto __pyx_L5_argtuple_error;

#line 18 "pyjet/src/FastJet.pyx"
      }

#line 18 "pyjet/src/FastJet.pyx"
      kw_args = PyDict_Size(__pyx_kwds);

#line 18 "pyjet/src/FastJet.pyx"
      switch (pos_args) {

#line 18 "pyjet/src/FastJet.pyx"
        case  0:

#line 18 "pyjet/src/FastJet.pyx"
        if (kw_args > 0) {

#line 18 "pyjet/src/FastJet.pyx"
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ptmin);

#line 18 "pyjet/src/FastJet.pyx"
          if (value) { values[0] = value; kw_args--; }

#line 18 "pyjet/src/FastJet.pyx"
        }

#line 18 "pyjet/src/FastJet.pyx"
        case  1:

#line 18 "pyjet/src/FastJet.pyx"
        if (kw_args > 0) {

#line 18 "pyjet/src/FastJet.pyx"
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sort);

#line 18 "pyjet/src/FastJet.pyx"
          if (value) { values[1] = value; kw_args--; }

#line 18 "pyjet/src/FastJet.pyx"
        }

#line 18 "pyjet/src/FastJet.pyx"
      }

#line 18 "pyjet/src/FastJet.pyx"
      if (unlikely(kw_args > 0)) {

#line 18 "pyjet/src/FastJet.pyx"
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "inclusive_jets") < 0)) __PYX_ERR(0, 18, __pyx_L3_error)

#line 18 "pyjet/src/FastJet.pyx"
      }

#line 18 "pyjet/src/FastJet.pyx"
    } else {

#line 18 "pyjet/src/FastJet.pyx"
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: 
#line 18 "pyjet/src/FastJet.pyx"
values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: 
#line 18 "pyjet/src/FastJet.pyx"
values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: 
#line 18 "pyjet/src/FastJet.pyx"
break;
        default: 
#line 18 "pyjet/src/FastJet.pyx"
goto __pyx_L5_argtuple_error;

#line 18 "pyjet/src/FastJet.pyx"
      }

#line 18 "pyjet/src/FastJet.pyx"
    }

#line 18 "pyjet/src/FastJet.pyx"
    if (values[0]) {

#line 18 "pyjet/src/FastJet.pyx"
      __pyx_v_ptmin = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_ptmin == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 18, __pyx_L3_error)

#line 18 "pyjet/src/FastJet.pyx"
    } else {

#line 18 "pyjet/src/FastJet.pyx"
      __pyx_v_ptmin = ((double)0.0);

#line 18 "pyjet/src/FastJet.pyx"
    }

#line 18 "pyjet/src/FastJet.pyx"
    if (values[1]) {

#line 18 "pyjet/src/FastJet.pyx"
      __pyx_v_sort = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_sort == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 18, __pyx_L3_error)

#line 18 "pyjet/src/FastJet.pyx"
    } else {

#line 18 "pyjet/src/FastJet.pyx"
      __pyx_v_sort = ((bool)1);

#line 18 "pyjet/src/FastJet.pyx"
    }

#line 18 "pyjet/src/FastJet.pyx"
  }

#line 18 "pyjet/src/FastJet.pyx"
  goto __pyx_L4_argument_unpacking_done;

#line 18 "pyjet/src/FastJet.pyx"
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("inclusive_jets", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); 
#line 18 "pyjet/src/FastJet.pyx"
__PYX_ERR(0, 18, __pyx_L3_error)

#line 18 "pyjet/src/FastJet.pyx"
  __pyx_L3_error:;

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyClusterSequence.inclusive_jets", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 18 "pyjet/src/FastJet.pyx"
  return NULL;

#line 18 "pyjet/src/FastJet.pyx"
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = 
#line 18 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_17PyClusterSequence_2inclusive_jets(((struct __pyx_obj_9_libpyjet_PyClusterSequence *)__pyx_v_self), __pyx_v_ptmin, __pyx_v_sort);

#line 18 "pyjet/src/FastJet.pyx"


#line 18 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 18 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 18 "pyjet/src/FastJet.pyx"
}

#line 18 "pyjet/src/FastJet.pyx"


#line 18 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_17PyClusterSequence_2inclusive_jets(struct __pyx_obj_9_libpyjet_PyClusterSequence *__pyx_v_self, double __pyx_v_ptmin, bool __pyx_v_sort) {
  std::vector<fastjet::PseudoJet>  __pyx_v_jets
#line 18 "pyjet/src/FastJet.pyx"
;

#line 18 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 18 "pyjet/src/FastJet.pyx"
  int __pyx_t_1;

#line 18 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_2 = NULL;

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("inclusive_jets", 0);

  /* "pyjet/src/FastJet.pyx":21
 *         """ return a vector of all jets (in the sense of the inclusive algorithm) with pt >= ptmin.
 *         """
 *         cdef vector[PseudoJet] jets = self.sequence.inclusive_jets(ptmin)             # <<<<<<<<<<<<<<
 *         if sort:
 *             jets = sorted_by_pt(jets)
 */

#line 21 "pyjet/src/FastJet.pyx"
  __pyx_v_jets = __pyx_v_self->sequence->inclusive_jets(__pyx_v_ptmin);

  /* "pyjet/src/FastJet.pyx":22
 *         """
 *         cdef vector[PseudoJet] jets = self.sequence.inclusive_jets(ptmin)
 *         if sort:             # <<<<<<<<<<<<<<
 *             jets = sorted_by_pt(jets)
 *         return vector_to_list(jets)
 */

#line 22 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = (__pyx_v_sort != 0);

#line 22 "pyjet/src/FastJet.pyx"
  if (__pyx_t_1) {

    /* "pyjet/src/FastJet.pyx":23
 *         cdef vector[PseudoJet] jets = self.sequence.inclusive_jets(ptmin)
 *         if sort:
 *             jets = sorted_by_pt(jets)             # <<<<<<<<<<<<<<
 *         return vector_to_list(jets)
 * 
 */

#line 23 "pyjet/src/FastJet.pyx"
    __pyx_v_jets = fastjet::sorted_by_pt(__pyx_v_jets);

    /* "pyjet/src/FastJet.pyx":22
 *         """
 *         cdef vector[PseudoJet] jets = self.sequence.inclusive_jets(ptmin)
 *         if sort:             # <<<<<<<<<<<<<<
 *             jets = sorted_by_pt(jets)
 *         return vector_to_list(jets)
 */

#line 22 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":24
 *         if sort:
 *             jets = sorted_by_pt(jets)
 *         return vector_to_list(jets)             # <<<<<<<<<<<<<<
 * 
 * 
 */

#line 24 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 24 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = __pyx_f_9_libpyjet_vector_to_list(__pyx_v_jets); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 24, __pyx_L1_error)

#line 24 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_2);

#line 24 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_2;

#line 24 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = 0;

#line 24 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":18
 *         return wrapped_sequence
 * 
 *     def inclusive_jets(self, double ptmin=0.0, bool sort=True):             # <<<<<<<<<<<<<<
 *         """ return a vector of all jets (in the sense of the inclusive algorithm) with pt >= ptmin.
 *         """
 */

#line 18 "pyjet/src/FastJet.pyx"


#line 18 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 18 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_2);

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyClusterSequence.inclusive_jets", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 18 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 18 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 18 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 18 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 18 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":32
 *     PyObject* info
 * 
 *     __init__(PyObject* info):             # <<<<<<<<<<<<<<
 *         this.info = info
 *         Py_XINCREF(this.info)
 */

#line 32 "pyjet/src/FastJet.pyx"


#line 32 "pyjet/src/FastJet.pyx"
 __pyx_t_9_libpyjet_PseudoJetUserInfo::__pyx_t_9_libpyjet_PseudoJetUserInfo(PyObject *__pyx_v_info) {

#line 32 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 32 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("<init>", 0);

  /* "pyjet/src/FastJet.pyx":33
 * 
 *     __init__(PyObject* info):
 *         this.info = info             # <<<<<<<<<<<<<<
 *         Py_XINCREF(this.info)
 * 
 */

#line 33 "pyjet/src/FastJet.pyx"
  this->info = __pyx_v_info;

  /* "pyjet/src/FastJet.pyx":34
 *     __init__(PyObject* info):
 *         this.info = info
 *         Py_XINCREF(this.info)             # <<<<<<<<<<<<<<
 * 
 *     __dealloc__():
 */

#line 34 "pyjet/src/FastJet.pyx"
  Py_XINCREF(this->info);

  /* "pyjet/src/FastJet.pyx":32
 *     PyObject* info
 * 
 *     __init__(PyObject* info):             # <<<<<<<<<<<<<<
 *         this.info = info
 *         Py_XINCREF(this.info)
 */

#line 32 "pyjet/src/FastJet.pyx"


#line 32 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 32 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 32 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":36
 *         Py_XINCREF(this.info)
 * 
 *     __dealloc__():             # <<<<<<<<<<<<<<
 *         Py_XDECREF(this.info)
 * 
 */

#line 36 "pyjet/src/FastJet.pyx"


#line 36 "pyjet/src/FastJet.pyx"
 __pyx_t_9_libpyjet_PseudoJetUserInfo::~__pyx_t_9_libpyjet_PseudoJetUserInfo(void) {

#line 36 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 36 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("<del>", 0);

  /* "pyjet/src/FastJet.pyx":37
 * 
 *     __dealloc__():
 *         Py_XDECREF(this.info)             # <<<<<<<<<<<<<<
 * 
 * 
 */

#line 37 "pyjet/src/FastJet.pyx"
  Py_XDECREF(this->info);

  /* "pyjet/src/FastJet.pyx":36
 *         Py_XINCREF(this.info)
 * 
 *     __dealloc__():             # <<<<<<<<<<<<<<
 *         Py_XDECREF(this.info)
 * 
 */

#line 36 "pyjet/src/FastJet.pyx"


#line 36 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 36 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 36 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":48
 * 
 *     @staticmethod
 *     cdef inline PyPseudoJet wrap(PseudoJet& jet):             # <<<<<<<<<<<<<<
 *         wrapped_jet = PyPseudoJet()
 *         wrapped_jet.jet = jet
 */

#line 48 "pyjet/src/FastJet.pyx"


#line 48 "pyjet/src/FastJet.pyx"
static CYTHON_INLINE struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_f_9_libpyjet_11PyPseudoJet_wrap(fastjet::PseudoJet &__pyx_v_jet) {
  struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_wrapped_jet = NULL
#line 48 "pyjet/src/FastJet.pyx"
;

#line 48 "pyjet/src/FastJet.pyx"
  struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_r = NULL;

#line 48 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 48 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 48 "pyjet/src/FastJet.pyx"
  int __pyx_t_2;

#line 48 "pyjet/src/FastJet.pyx"
  int __pyx_t_3;

#line 48 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("wrap", 0);

  /* "pyjet/src/FastJet.pyx":49
 *     @staticmethod
 *     cdef inline PyPseudoJet wrap(PseudoJet& jet):
 *         wrapped_jet = PyPseudoJet()             # <<<<<<<<<<<<<<
 *         wrapped_jet.jet = jet
 *         if jet.has_valid_cluster_sequence() and jet.has_constituents():
 */

#line 49 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9_libpyjet_PyPseudoJet), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 49, __pyx_L1_error)

#line 49 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 49 "pyjet/src/FastJet.pyx"
  __pyx_v_wrapped_jet = ((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_t_1);

#line 49 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

  /* "pyjet/src/FastJet.pyx":50
 *     cdef inline PyPseudoJet wrap(PseudoJet& jet):
 *         wrapped_jet = PyPseudoJet()
 *         wrapped_jet.jet = jet             # <<<<<<<<<<<<<<
 *         if jet.has_valid_cluster_sequence() and jet.has_constituents():
 *             wrapped_jet.constits = jet.constituents()
 */

#line 50 "pyjet/src/FastJet.pyx"
  __pyx_v_wrapped_jet->jet = __pyx_v_jet;

  /* "pyjet/src/FastJet.pyx":51
 *         wrapped_jet = PyPseudoJet()
 *         wrapped_jet.jet = jet
 *         if jet.has_valid_cluster_sequence() and jet.has_constituents():             # <<<<<<<<<<<<<<
 *             wrapped_jet.constits = jet.constituents()
 *         if jet.has_user_info():
 */

#line 51 "pyjet/src/FastJet.pyx"
  __pyx_t_3 = (__pyx_v_jet.has_valid_cluster_sequence() != 0);

#line 51 "pyjet/src/FastJet.pyx"
  if (__pyx_t_3) {

#line 51 "pyjet/src/FastJet.pyx"
  } else {

#line 51 "pyjet/src/FastJet.pyx"
    __pyx_t_2 = __pyx_t_3;

#line 51 "pyjet/src/FastJet.pyx"
    goto __pyx_L4_bool_binop_done;

#line 51 "pyjet/src/FastJet.pyx"
  }

#line 51 "pyjet/src/FastJet.pyx"
  __pyx_t_3 = (__pyx_v_jet.has_constituents() != 0);

#line 51 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = __pyx_t_3;

#line 51 "pyjet/src/FastJet.pyx"
  __pyx_L4_bool_binop_done:;

#line 51 "pyjet/src/FastJet.pyx"
  if (__pyx_t_2) {

    /* "pyjet/src/FastJet.pyx":52
 *         wrapped_jet.jet = jet
 *         if jet.has_valid_cluster_sequence() and jet.has_constituents():
 *             wrapped_jet.constits = jet.constituents()             # <<<<<<<<<<<<<<
 *         if jet.has_user_info():
 *             wrapped_jet.userinfo = <PseudoJetUserInfo*> jet.user_info_ptr()
 */

#line 52 "pyjet/src/FastJet.pyx"
    __pyx_v_wrapped_jet->constits = __pyx_v_jet.constituents();

    /* "pyjet/src/FastJet.pyx":51
 *         wrapped_jet = PyPseudoJet()
 *         wrapped_jet.jet = jet
 *         if jet.has_valid_cluster_sequence() and jet.has_constituents():             # <<<<<<<<<<<<<<
 *             wrapped_jet.constits = jet.constituents()
 *         if jet.has_user_info():
 */

#line 51 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":53
 *         if jet.has_valid_cluster_sequence() and jet.has_constituents():
 *             wrapped_jet.constits = jet.constituents()
 *         if jet.has_user_info():             # <<<<<<<<<<<<<<
 *             wrapped_jet.userinfo = <PseudoJetUserInfo*> jet.user_info_ptr()
 *         else:
 */

#line 53 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = (__pyx_v_jet.has_user_info() != 0);

#line 53 "pyjet/src/FastJet.pyx"
  if (__pyx_t_2) {

    /* "pyjet/src/FastJet.pyx":54
 *             wrapped_jet.constits = jet.constituents()
 *         if jet.has_user_info():
 *             wrapped_jet.userinfo = <PseudoJetUserInfo*> jet.user_info_ptr()             # <<<<<<<<<<<<<<
 *         else:
 *             wrapped_jet.userinfo = NULL
 */

#line 54 "pyjet/src/FastJet.pyx"
    __pyx_v_wrapped_jet->userinfo = ((__pyx_t_9_libpyjet_PseudoJetUserInfo *)__pyx_v_jet.user_info_ptr());

    /* "pyjet/src/FastJet.pyx":53
 *         if jet.has_valid_cluster_sequence() and jet.has_constituents():
 *             wrapped_jet.constits = jet.constituents()
 *         if jet.has_user_info():             # <<<<<<<<<<<<<<
 *             wrapped_jet.userinfo = <PseudoJetUserInfo*> jet.user_info_ptr()
 *         else:
 */

#line 53 "pyjet/src/FastJet.pyx"
    goto __pyx_L6;

#line 53 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":56
 *             wrapped_jet.userinfo = <PseudoJetUserInfo*> jet.user_info_ptr()
 *         else:
 *             wrapped_jet.userinfo = NULL             # <<<<<<<<<<<<<<
 *         return wrapped_jet
 * 
 */

#line 56 "pyjet/src/FastJet.pyx"
  /*else*/ {

#line 56 "pyjet/src/FastJet.pyx"
    __pyx_v_wrapped_jet->userinfo = NULL;

#line 56 "pyjet/src/FastJet.pyx"
  }

#line 56 "pyjet/src/FastJet.pyx"
  __pyx_L6:;

  /* "pyjet/src/FastJet.pyx":57
 *         else:
 *             wrapped_jet.userinfo = NULL
 *         return wrapped_jet             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

#line 57 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(((PyObject *)__pyx_r));

#line 57 "pyjet/src/FastJet.pyx"
  __Pyx_INCREF(((PyObject *)__pyx_v_wrapped_jet));

#line 57 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_v_wrapped_jet;

#line 57 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":48
 * 
 *     @staticmethod
 *     cdef inline PyPseudoJet wrap(PseudoJet& jet):             # <<<<<<<<<<<<<<
 *         wrapped_jet = PyPseudoJet()
 *         wrapped_jet.jet = jet
 */

#line 48 "pyjet/src/FastJet.pyx"


#line 48 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 48 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 48 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 48 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.wrap", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 48 "pyjet/src/FastJet.pyx"
  __pyx_r = 0;

#line 48 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 48 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF((PyObject *)__pyx_v_wrapped_jet);

#line 48 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF((PyObject *)__pyx_r);

#line 48 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 48 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 48 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":60
 * 
 *     @property
 *     def info(self):             # <<<<<<<<<<<<<<
 *         if self.userinfo != NULL:
 *             return <object> self.userinfo.info
 */

#line 60 "pyjet/src/FastJet.pyx"


#line 60 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 60 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_4info_1__get__(PyObject *__pyx_v_self); /*proto*/

#line 60 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_4info_1__get__(PyObject *__pyx_v_self) {

#line 60 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 60 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 60 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = 
#line 60 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_4info___get__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 60 "pyjet/src/FastJet.pyx"


#line 60 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 60 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 60 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 60 "pyjet/src/FastJet.pyx"
}

#line 60 "pyjet/src/FastJet.pyx"


#line 60 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_4info___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 60 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 60 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 60 "pyjet/src/FastJet.pyx"
  int __pyx_t_1;

#line 60 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pyjet/src/FastJet.pyx":61
 *     @property
 *     def info(self):
 *         if self.userinfo != NULL:             # <<<<<<<<<<<<<<
 *             return <object> self.userinfo.info
 *         return None
 */

#line 61 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = ((__pyx_v_self->userinfo != NULL) != 0);

#line 61 "pyjet/src/FastJet.pyx"
  if (__pyx_t_1) {

    /* "pyjet/src/FastJet.pyx":62
 *     def info(self):
 *         if self.userinfo != NULL:
 *             return <object> self.userinfo.info             # <<<<<<<<<<<<<<
 *         return None
 * 
 */

#line 62 "pyjet/src/FastJet.pyx"
    __Pyx_XDECREF(__pyx_r);

#line 62 "pyjet/src/FastJet.pyx"
    __Pyx_INCREF(((PyObject *)__pyx_v_self->userinfo->info));

#line 62 "pyjet/src/FastJet.pyx"
    __pyx_r = ((PyObject *)__pyx_v_self->userinfo->info);

#line 62 "pyjet/src/FastJet.pyx"
    goto __pyx_L0;

    /* "pyjet/src/FastJet.pyx":61
 *     @property
 *     def info(self):
 *         if self.userinfo != NULL:             # <<<<<<<<<<<<<<
 *             return <object> self.userinfo.info
 *         return None
 */

#line 61 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":63
 *         if self.userinfo != NULL:
 *             return <object> self.userinfo.info
 *         return None             # <<<<<<<<<<<<<<
 * 
 *     def __getattr__(self, attr):
 */

#line 63 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 63 "pyjet/src/FastJet.pyx"
  __Pyx_INCREF(Py_None);

#line 63 "pyjet/src/FastJet.pyx"
  __pyx_r = Py_None;

#line 63 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":60
 * 
 *     @property
 *     def info(self):             # <<<<<<<<<<<<<<
 *         if self.userinfo != NULL:
 *             return <object> self.userinfo.info
 */

#line 60 "pyjet/src/FastJet.pyx"


#line 60 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 60 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 60 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 60 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 60 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 60 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":65
 *         return None
 * 
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         userinfo_dict = self.info
 *         if userinfo_dict:
 */

#line 65 "pyjet/src/FastJet.pyx"


#line 65 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 65 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_1__getattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr); /*proto*/

#line 65 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_1__getattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr) {

#line 65 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__getattr__ (wrapper)", 0);
  __pyx_r = 
#line 65 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet___getattr__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self), ((PyObject *)__pyx_v_attr));

#line 65 "pyjet/src/FastJet.pyx"


#line 65 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 65 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 65 "pyjet/src/FastJet.pyx"
}

#line 65 "pyjet/src/FastJet.pyx"


#line 65 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet___getattr__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self, PyObject *__pyx_v_attr) {
  PyObject *__pyx_v_userinfo_dict = NULL
#line 65 "pyjet/src/FastJet.pyx"
;

#line 65 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 65 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 65 "pyjet/src/FastJet.pyx"
  int __pyx_t_2;

#line 65 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_3 = NULL;

#line 65 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_4 = NULL;

#line 65 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_5 = NULL;

#line 65 "pyjet/src/FastJet.pyx"
  int __pyx_t_6;

#line 65 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_7 = NULL;

#line 65 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_8 = NULL;

#line 65 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_9 = NULL;

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__getattr__", 0);

  /* "pyjet/src/FastJet.pyx":66
 * 
 *     def __getattr__(self, attr):
 *         userinfo_dict = self.info             # <<<<<<<<<<<<<<
 *         if userinfo_dict:
 *             try:
 */

#line 66 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_info); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 66, __pyx_L1_error)

#line 66 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 66 "pyjet/src/FastJet.pyx"
  __pyx_v_userinfo_dict = __pyx_t_1;

#line 66 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

  /* "pyjet/src/FastJet.pyx":67
 *     def __getattr__(self, attr):
 *         userinfo_dict = self.info
 *         if userinfo_dict:             # <<<<<<<<<<<<<<
 *             try:
 *                 return userinfo_dict[attr]
 */

#line 67 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_userinfo_dict); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 67, __pyx_L1_error)

#line 67 "pyjet/src/FastJet.pyx"
  if (__pyx_t_2) {

    /* "pyjet/src/FastJet.pyx":68
 *         userinfo_dict = self.info
 *         if userinfo_dict:
 *             try:             # <<<<<<<<<<<<<<
 *                 return userinfo_dict[attr]
 *             except KeyError:
 */

#line 68 "pyjet/src/FastJet.pyx"
    {

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_PyThreadState_declare

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_PyThreadState_assign

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGOTREF(__pyx_t_3);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGOTREF(__pyx_t_4);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGOTREF(__pyx_t_5);

#line 68 "pyjet/src/FastJet.pyx"
      /*try:*/ {

        /* "pyjet/src/FastJet.pyx":69
 *         if userinfo_dict:
 *             try:
 *                 return userinfo_dict[attr]             # <<<<<<<<<<<<<<
 *             except KeyError:
 *                 pass
 */

#line 69 "pyjet/src/FastJet.pyx"
        __Pyx_XDECREF(__pyx_r);

#line 69 "pyjet/src/FastJet.pyx"
        __pyx_t_1 = PyObject_GetItem(__pyx_v_userinfo_dict, __pyx_v_attr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 69, __pyx_L4_error)

#line 69 "pyjet/src/FastJet.pyx"
        __Pyx_GOTREF(__pyx_t_1);

#line 69 "pyjet/src/FastJet.pyx"
        __pyx_r = __pyx_t_1;

#line 69 "pyjet/src/FastJet.pyx"
        __pyx_t_1 = 0;

#line 69 "pyjet/src/FastJet.pyx"
        goto __pyx_L8_try_return;

        /* "pyjet/src/FastJet.pyx":68
 *         userinfo_dict = self.info
 *         if userinfo_dict:
 *             try:             # <<<<<<<<<<<<<<
 *                 return userinfo_dict[attr]
 *             except KeyError:
 */

#line 68 "pyjet/src/FastJet.pyx"
      }

#line 68 "pyjet/src/FastJet.pyx"
      __pyx_L4_error:;

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_PyThreadState_assign

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "pyjet/src/FastJet.pyx":70
 *             try:
 *                 return userinfo_dict[attr]
 *             except KeyError:             # <<<<<<<<<<<<<<
 *                 pass
 *         return self.__getattribute__(attr)
 */

#line 70 "pyjet/src/FastJet.pyx"
      __pyx_t_6 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);

#line 70 "pyjet/src/FastJet.pyx"
      if (__pyx_t_6) {

#line 70 "pyjet/src/FastJet.pyx"
        __Pyx_ErrRestore(0,0,0);

#line 70 "pyjet/src/FastJet.pyx"
        goto __pyx_L5_exception_handled;

#line 70 "pyjet/src/FastJet.pyx"
      }

#line 70 "pyjet/src/FastJet.pyx"
      goto __pyx_L6_except_error;

#line 70 "pyjet/src/FastJet.pyx"
      __pyx_L6_except_error:;

      /* "pyjet/src/FastJet.pyx":68
 *         userinfo_dict = self.info
 *         if userinfo_dict:
 *             try:             # <<<<<<<<<<<<<<
 *                 return userinfo_dict[attr]
 *             except KeyError:
 */

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_PyThreadState_assign

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGIVEREF(__pyx_t_3);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGIVEREF(__pyx_t_4);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGIVEREF(__pyx_t_5);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);

#line 68 "pyjet/src/FastJet.pyx"
      goto __pyx_L1_error;

#line 68 "pyjet/src/FastJet.pyx"
      __pyx_L8_try_return:;

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_PyThreadState_assign

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGIVEREF(__pyx_t_3);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGIVEREF(__pyx_t_4);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGIVEREF(__pyx_t_5);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);

#line 68 "pyjet/src/FastJet.pyx"
      goto __pyx_L0;

#line 68 "pyjet/src/FastJet.pyx"
      __pyx_L5_exception_handled:;

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_PyThreadState_assign

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGIVEREF(__pyx_t_3);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGIVEREF(__pyx_t_4);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_XGIVEREF(__pyx_t_5);

#line 68 "pyjet/src/FastJet.pyx"
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);

#line 68 "pyjet/src/FastJet.pyx"
    }

    /* "pyjet/src/FastJet.pyx":67
 *     def __getattr__(self, attr):
 *         userinfo_dict = self.info
 *         if userinfo_dict:             # <<<<<<<<<<<<<<
 *             try:
 *                 return userinfo_dict[attr]
 */

#line 67 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":72
 *             except KeyError:
 *                 pass
 *         return self.__getattribute__(attr)             # <<<<<<<<<<<<<<
 * 
 *     def __contains__(self, other):
 */

#line 72 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 72 "pyjet/src/FastJet.pyx"
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getattribute); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 72, __pyx_L1_error)

#line 72 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_7);

#line 72 "pyjet/src/FastJet.pyx"
  __pyx_t_8 = NULL;

#line 72 "pyjet/src/FastJet.pyx"
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {

#line 72 "pyjet/src/FastJet.pyx"
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);

#line 72 "pyjet/src/FastJet.pyx"
    if (likely(__pyx_t_8)) {

#line 72 "pyjet/src/FastJet.pyx"
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_INCREF(__pyx_t_8);

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_INCREF(function);

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_DECREF_SET(__pyx_t_7, function);

#line 72 "pyjet/src/FastJet.pyx"
    }

#line 72 "pyjet/src/FastJet.pyx"
  }

#line 72 "pyjet/src/FastJet.pyx"
  if (!__pyx_t_8) {

#line 72 "pyjet/src/FastJet.pyx"
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_attr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)

#line 72 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_1);

#line 72 "pyjet/src/FastJet.pyx"
  } else {

#line 72 "pyjet/src/FastJet.pyx"
    #if CYTHON_FAST_PYCALL

#line 72 "pyjet/src/FastJet.pyx"
    if (PyFunction_Check(__pyx_t_7)) {

#line 72 "pyjet/src/FastJet.pyx"
      PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_v_attr};

#line 72 "pyjet/src/FastJet.pyx"
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_GOTREF(__pyx_t_1);

#line 72 "pyjet/src/FastJet.pyx"
    } else

#line 72 "pyjet/src/FastJet.pyx"
    #endif

#line 72 "pyjet/src/FastJet.pyx"
    #if CYTHON_FAST_PYCCALL

#line 72 "pyjet/src/FastJet.pyx"
    if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {

#line 72 "pyjet/src/FastJet.pyx"
      PyObject *__pyx_temp[2] = {__pyx_t_8, __pyx_v_attr};

#line 72 "pyjet/src/FastJet.pyx"
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_GOTREF(__pyx_t_1);

#line 72 "pyjet/src/FastJet.pyx"
    } else

#line 72 "pyjet/src/FastJet.pyx"
    #endif

#line 72 "pyjet/src/FastJet.pyx"
    {

#line 72 "pyjet/src/FastJet.pyx"
      __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 72, __pyx_L1_error)

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_GOTREF(__pyx_t_9);

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_INCREF(__pyx_v_attr);

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_GIVEREF(__pyx_v_attr);

#line 72 "pyjet/src/FastJet.pyx"
      PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_v_attr);

#line 72 "pyjet/src/FastJet.pyx"
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_GOTREF(__pyx_t_1);

#line 72 "pyjet/src/FastJet.pyx"
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

#line 72 "pyjet/src/FastJet.pyx"
    }

#line 72 "pyjet/src/FastJet.pyx"
  }

#line 72 "pyjet/src/FastJet.pyx"
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

#line 72 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 72 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 72 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":65
 *         return None
 * 
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         userinfo_dict = self.info
 *         if userinfo_dict:
 */

#line 65 "pyjet/src/FastJet.pyx"


#line 65 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 65 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_7);

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_8);

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_9);

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.__getattr__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 65 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 65 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_v_userinfo_dict);

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 65 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 65 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 65 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":74
 *         return self.__getattribute__(attr)
 * 
 *     def __contains__(self, other):             # <<<<<<<<<<<<<<
 *         cdef PseudoJet* jet = <PseudoJet*> PyCObject_AsVoidPtr(other.jet)
 *         if jet == NULL:
 */

#line 74 "pyjet/src/FastJet.pyx"


#line 74 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 74 "pyjet/src/FastJet.pyx"
static int __pyx_pw_9_libpyjet_11PyPseudoJet_3__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/

#line 74 "pyjet/src/FastJet.pyx"
static int __pyx_pw_9_libpyjet_11PyPseudoJet_3__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {

#line 74 "pyjet/src/FastJet.pyx"
  int __pyx_r;

#line 74 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 74 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__contains__ (wrapper)", 0);
  __pyx_r = 
#line 74 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_2__contains__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self), ((PyObject *)__pyx_v_other));

#line 74 "pyjet/src/FastJet.pyx"


#line 74 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 74 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 74 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 74 "pyjet/src/FastJet.pyx"
}

#line 74 "pyjet/src/FastJet.pyx"


#line 74 "pyjet/src/FastJet.pyx"
static int __pyx_pf_9_libpyjet_11PyPseudoJet_2__contains__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self, PyObject *__pyx_v_other) {
  fastjet::PseudoJet *__pyx_v_jet
#line 74 "pyjet/src/FastJet.pyx"
;

#line 74 "pyjet/src/FastJet.pyx"
  int __pyx_r;

#line 74 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 74 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 74 "pyjet/src/FastJet.pyx"
  void *__pyx_t_2;

#line 74 "pyjet/src/FastJet.pyx"
  int __pyx_t_3;

#line 74 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__contains__", 0);

  /* "pyjet/src/FastJet.pyx":75
 * 
 *     def __contains__(self, other):
 *         cdef PseudoJet* jet = <PseudoJet*> PyCObject_AsVoidPtr(other.jet)             # <<<<<<<<<<<<<<
 *         if jet == NULL:
 *             raise TypeError("object must be of type PyPseudoJet")
 */

#line 75 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_jet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 75, __pyx_L1_error)

#line 75 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 75 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = PyCObject_AsVoidPtr(__pyx_t_1); if (unlikely(__pyx_t_2 == NULL && PyErr_Occurred())) __PYX_ERR(0, 75, __pyx_L1_error)

#line 75 "pyjet/src/FastJet.pyx"
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

#line 75 "pyjet/src/FastJet.pyx"
  __pyx_v_jet = ((fastjet::PseudoJet *)__pyx_t_2);

  /* "pyjet/src/FastJet.pyx":76
 *     def __contains__(self, other):
 *         cdef PseudoJet* jet = <PseudoJet*> PyCObject_AsVoidPtr(other.jet)
 *         if jet == NULL:             # <<<<<<<<<<<<<<
 *             raise TypeError("object must be of type PyPseudoJet")
 *         return self.jet.contains(deref(jet))
 */

#line 76 "pyjet/src/FastJet.pyx"
  __pyx_t_3 = ((__pyx_v_jet == NULL) != 0);

#line 76 "pyjet/src/FastJet.pyx"
  if (__pyx_t_3) {

    /* "pyjet/src/FastJet.pyx":77
 *         cdef PseudoJet* jet = <PseudoJet*> PyCObject_AsVoidPtr(other.jet)
 *         if jet == NULL:
 *             raise TypeError("object must be of type PyPseudoJet")             # <<<<<<<<<<<<<<
 *         return self.jet.contains(deref(jet))
 * 
 */

#line 77 "pyjet/src/FastJet.pyx"
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 77, __pyx_L1_error)

#line 77 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_1);

#line 77 "pyjet/src/FastJet.pyx"
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);

#line 77 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

#line 77 "pyjet/src/FastJet.pyx"
    __PYX_ERR(0, 77, __pyx_L1_error)

    /* "pyjet/src/FastJet.pyx":76
 *     def __contains__(self, other):
 *         cdef PseudoJet* jet = <PseudoJet*> PyCObject_AsVoidPtr(other.jet)
 *         if jet == NULL:             # <<<<<<<<<<<<<<
 *             raise TypeError("object must be of type PyPseudoJet")
 *         return self.jet.contains(deref(jet))
 */

#line 76 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":78
 *         if jet == NULL:
 *             raise TypeError("object must be of type PyPseudoJet")
 *         return self.jet.contains(deref(jet))             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */

#line 78 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_v_self->jet.contains((*__pyx_v_jet));

#line 78 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":74
 *         return self.__getattribute__(attr)
 * 
 *     def __contains__(self, other):             # <<<<<<<<<<<<<<
 *         cdef PseudoJet* jet = <PseudoJet*> PyCObject_AsVoidPtr(other.jet)
 *         if jet == NULL:
 */

#line 74 "pyjet/src/FastJet.pyx"


#line 74 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 74 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 74 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 74 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.__contains__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 74 "pyjet/src/FastJet.pyx"
  __pyx_r = -1;

#line 74 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 74 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 74 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 74 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":80
 *         return self.jet.contains(deref(jet))
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.constits.size()
 * 
 */

#line 80 "pyjet/src/FastJet.pyx"


#line 80 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 80 "pyjet/src/FastJet.pyx"
static Py_ssize_t __pyx_pw_9_libpyjet_11PyPseudoJet_5__len__(PyObject *__pyx_v_self); /*proto*/

#line 80 "pyjet/src/FastJet.pyx"
static Py_ssize_t __pyx_pw_9_libpyjet_11PyPseudoJet_5__len__(PyObject *__pyx_v_self) {

#line 80 "pyjet/src/FastJet.pyx"
  Py_ssize_t __pyx_r;

#line 80 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 80 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = 
#line 80 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_4__len__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 80 "pyjet/src/FastJet.pyx"


#line 80 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 80 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 80 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 80 "pyjet/src/FastJet.pyx"
}

#line 80 "pyjet/src/FastJet.pyx"


#line 80 "pyjet/src/FastJet.pyx"
static Py_ssize_t __pyx_pf_9_libpyjet_11PyPseudoJet_4__len__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 80 "pyjet/src/FastJet.pyx"
  Py_ssize_t __pyx_r;

#line 80 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 80 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "pyjet/src/FastJet.pyx":81
 * 
 *     def __len__(self):
 *         return self.constits.size()             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */

#line 81 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_v_self->constits.size();

#line 81 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":80
 *         return self.jet.contains(deref(jet))
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.constits.size()
 * 
 */

#line 80 "pyjet/src/FastJet.pyx"


#line 80 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 80 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 80 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 80 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 80 "pyjet/src/FastJet.pyx"
}

#line 80 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_gb_9_libpyjet_11PyPseudoJet_8generator(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "pyjet/src/FastJet.pyx":83
 *         return self.constits.size()
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         cdef PseudoJet jet
 *         for jet in self.constits:
 */

#line 83 "pyjet/src/FastJet.pyx"


#line 83 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 83 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_7__iter__(PyObject *__pyx_v_self); /*proto*/

#line 83 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_7__iter__(PyObject *__pyx_v_self) {

#line 83 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = 
#line 83 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_6__iter__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 83 "pyjet/src/FastJet.pyx"


#line 83 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 83 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 83 "pyjet/src/FastJet.pyx"
}

#line 83 "pyjet/src/FastJet.pyx"


#line 83 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_6__iter__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {
  struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *__pyx_cur_scope
#line 83 "pyjet/src/FastJet.pyx"
;

#line 83 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__iter__", 0);

#line 83 "pyjet/src/FastJet.pyx"
  __pyx_cur_scope = (struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *)__pyx_tp_new_9_libpyjet___pyx_scope_struct____iter__(__pyx_ptype_9_libpyjet___pyx_scope_struct____iter__, __pyx_empty_tuple, NULL);

#line 83 "pyjet/src/FastJet.pyx"
  if (unlikely(!__pyx_cur_scope)) {

#line 83 "pyjet/src/FastJet.pyx"
    __pyx_cur_scope = ((struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *)Py_None);

#line 83 "pyjet/src/FastJet.pyx"
    __Pyx_INCREF(Py_None);

#line 83 "pyjet/src/FastJet.pyx"
    __PYX_ERR(0, 83, __pyx_L1_error)

#line 83 "pyjet/src/FastJet.pyx"
  } else {

#line 83 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_cur_scope);

#line 83 "pyjet/src/FastJet.pyx"
  }

#line 83 "pyjet/src/FastJet.pyx"
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);

#line 83 "pyjet/src/FastJet.pyx"
  {

#line 83 "pyjet/src/FastJet.pyx"
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_9_libpyjet_11PyPseudoJet_8generator, (PyObject *) __pyx_cur_scope, __pyx_n_s_iter, __pyx_n_s_PyPseudoJet___iter, __pyx_n_s_libpyjet); if (unlikely(!gen)) __PYX_ERR(0, 83, __pyx_L1_error)

#line 83 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_cur_scope);

#line 83 "pyjet/src/FastJet.pyx"
    __Pyx_RefNannyFinishContext();

#line 83 "pyjet/src/FastJet.pyx"
    return (PyObject *) gen;

#line 83 "pyjet/src/FastJet.pyx"
  }

#line 83 "pyjet/src/FastJet.pyx"


#line 83 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 83 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 83 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 83 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 83 "pyjet/src/FastJet.pyx"
}

#line 83 "pyjet/src/FastJet.pyx"


#line 83 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_gb_9_libpyjet_11PyPseudoJet_8generator(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{

#line 83 "pyjet/src/FastJet.pyx"
  struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *__pyx_cur_scope = ((struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *)__pyx_generator->closure);

#line 83 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 83 "pyjet/src/FastJet.pyx"
  std::vector<fastjet::PseudoJet> ::iterator __pyx_t_1;

#line 83 "pyjet/src/FastJet.pyx"
  std::vector<fastjet::PseudoJet>  *__pyx_t_2;

#line 83 "pyjet/src/FastJet.pyx"
  fastjet::PseudoJet __pyx_t_3;

#line 83 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_4 = NULL;

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("None", 0);

#line 83 "pyjet/src/FastJet.pyx"
  switch (__pyx_generator->resume_label) {

#line 83 "pyjet/src/FastJet.pyx"
    case 0: goto __pyx_L3_first_run;

#line 83 "pyjet/src/FastJet.pyx"
    case 1: goto __pyx_L6_resume_from_yield;

#line 83 "pyjet/src/FastJet.pyx"
    default: /* CPython raises the right error here */

#line 83 "pyjet/src/FastJet.pyx"
    __Pyx_RefNannyFinishContext();

#line 83 "pyjet/src/FastJet.pyx"
    return NULL;

#line 83 "pyjet/src/FastJet.pyx"
  }

#line 83 "pyjet/src/FastJet.pyx"
  __pyx_L3_first_run:;

#line 83 "pyjet/src/FastJet.pyx"
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 83, __pyx_L1_error)

  /* "pyjet/src/FastJet.pyx":85
 *     def __iter__(self):
 *         cdef PseudoJet jet
 *         for jet in self.constits:             # <<<<<<<<<<<<<<
 *             yield PyPseudoJet.wrap(jet)
 * 
 */

#line 85 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = &__pyx_cur_scope->__pyx_v_self->constits;

#line 85 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = __pyx_t_2->begin();

#line 85 "pyjet/src/FastJet.pyx"
  for (;;) {

#line 85 "pyjet/src/FastJet.pyx"
    if (!(__pyx_t_1 != __pyx_t_2->end())) break;

#line 85 "pyjet/src/FastJet.pyx"
    __pyx_t_3 = *__pyx_t_1;

#line 85 "pyjet/src/FastJet.pyx"
    ++__pyx_t_1;

#line 85 "pyjet/src/FastJet.pyx"
    __pyx_cur_scope->__pyx_v_jet = __pyx_t_3;

    /* "pyjet/src/FastJet.pyx":86
 *         cdef PseudoJet jet
 *         for jet in self.constits:
 *             yield PyPseudoJet.wrap(jet)             # <<<<<<<<<<<<<<
 * 
 *     def constituents(self):
 */

#line 86 "pyjet/src/FastJet.pyx"
    __pyx_t_4 = ((PyObject *)__pyx_f_9_libpyjet_11PyPseudoJet_wrap(__pyx_cur_scope->__pyx_v_jet)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 86, __pyx_L1_error)

#line 86 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_4);

#line 86 "pyjet/src/FastJet.pyx"
    __pyx_r = __pyx_t_4;

#line 86 "pyjet/src/FastJet.pyx"
    __pyx_t_4 = 0;

#line 86 "pyjet/src/FastJet.pyx"
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;

#line 86 "pyjet/src/FastJet.pyx"
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;

#line 86 "pyjet/src/FastJet.pyx"
    __Pyx_XGIVEREF(__pyx_r);

#line 86 "pyjet/src/FastJet.pyx"
    __Pyx_RefNannyFinishContext();

#line 86 "pyjet/src/FastJet.pyx"
    /* return from generator, yielding value */

#line 86 "pyjet/src/FastJet.pyx"
    __pyx_generator->resume_label = 1;

#line 86 "pyjet/src/FastJet.pyx"
    return __pyx_r;

#line 86 "pyjet/src/FastJet.pyx"
    __pyx_L6_resume_from_yield:;

#line 86 "pyjet/src/FastJet.pyx"
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;

#line 86 "pyjet/src/FastJet.pyx"
    __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;

#line 86 "pyjet/src/FastJet.pyx"
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 86, __pyx_L1_error)

    /* "pyjet/src/FastJet.pyx":85
 *     def __iter__(self):
 *         cdef PseudoJet jet
 *         for jet in self.constits:             # <<<<<<<<<<<<<<
 *             yield PyPseudoJet.wrap(jet)
 * 
 */

#line 85 "pyjet/src/FastJet.pyx"
  }

#line 85 "pyjet/src/FastJet.pyx"
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* "pyjet/src/FastJet.pyx":83
 *         return self.constits.size()
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         cdef PseudoJet jet
 *         for jet in self.constits:
 */

#line 83 "pyjet/src/FastJet.pyx"


#line 83 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 83 "pyjet/src/FastJet.pyx"
  PyErr_SetNone(PyExc_StopIteration);

#line 83 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

#line 83 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_4);

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 83 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;

#line 83 "pyjet/src/FastJet.pyx"
  __pyx_generator->resume_label = -1;

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);

#line 83 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 83 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 83 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":88
 *             yield PyPseudoJet.wrap(jet)
 * 
 *     def constituents(self):             # <<<<<<<<<<<<<<
 *         return list(self)
 * 
 */

#line 88 "pyjet/src/FastJet.pyx"


#line 88 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 88 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_10constituents(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/

#line 88 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_10constituents(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {

#line 88 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 88 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 88 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("constituents (wrapper)", 0);
  __pyx_r = 
#line 88 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_9constituents(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 88 "pyjet/src/FastJet.pyx"


#line 88 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 88 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 88 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 88 "pyjet/src/FastJet.pyx"
}

#line 88 "pyjet/src/FastJet.pyx"


#line 88 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_9constituents(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 88 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 88 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 88 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 88 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("constituents", 0);

  /* "pyjet/src/FastJet.pyx":89
 * 
 *     def constituents(self):
 *         return list(self)             # <<<<<<<<<<<<<<
 * 
 *     def constituents_array(self, bool ep=False):
 */

#line 89 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 89 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PySequence_List(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 89, __pyx_L1_error)

#line 89 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 89 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 89 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 89 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":88
 *             yield PyPseudoJet.wrap(jet)
 * 
 *     def constituents(self):             # <<<<<<<<<<<<<<
 *         return list(self)
 * 
 */

#line 88 "pyjet/src/FastJet.pyx"


#line 88 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 88 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 88 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 88 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.constituents", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 88 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 88 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 88 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 88 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 88 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 88 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":91
 *         return list(self)
 * 
 *     def constituents_array(self, bool ep=False):             # <<<<<<<<<<<<<<
 *         return vector_to_array(self.constits, ep)
 * 
 */

#line 91 "pyjet/src/FastJet.pyx"


#line 91 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 91 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_12constituents_array(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/

#line 91 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_12constituents_array(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  bool __pyx_v_ep
#line 91 "pyjet/src/FastJet.pyx"
;

#line 91 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("constituents_array (wrapper)", 0);

#line 91 "pyjet/src/FastJet.pyx"
  {

#line 91 "pyjet/src/FastJet.pyx"
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ep,0};

#line 91 "pyjet/src/FastJet.pyx"
    PyObject* values[1] = {0};

#line 91 "pyjet/src/FastJet.pyx"
    if (unlikely(__pyx_kwds)) {

#line 91 "pyjet/src/FastJet.pyx"
      Py_ssize_t kw_args;

#line 91 "pyjet/src/FastJet.pyx"
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);

#line 91 "pyjet/src/FastJet.pyx"
      switch (pos_args) {
        case  1: 
#line 91 "pyjet/src/FastJet.pyx"
values[0] = PyTuple_GET_ITEM(__pyx_args, 0);

#line 91 "pyjet/src/FastJet.pyx"
        case  0: break;
        default: 
#line 91 "pyjet/src/FastJet.pyx"
goto __pyx_L5_argtuple_error;

#line 91 "pyjet/src/FastJet.pyx"
      }

#line 91 "pyjet/src/FastJet.pyx"
      kw_args = PyDict_Size(__pyx_kwds);

#line 91 "pyjet/src/FastJet.pyx"
      switch (pos_args) {

#line 91 "pyjet/src/FastJet.pyx"
        case  0:

#line 91 "pyjet/src/FastJet.pyx"
        if (kw_args > 0) {

#line 91 "pyjet/src/FastJet.pyx"
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ep);

#line 91 "pyjet/src/FastJet.pyx"
          if (value) { values[0] = value; kw_args--; }

#line 91 "pyjet/src/FastJet.pyx"
        }

#line 91 "pyjet/src/FastJet.pyx"
      }

#line 91 "pyjet/src/FastJet.pyx"
      if (unlikely(kw_args > 0)) {

#line 91 "pyjet/src/FastJet.pyx"
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "constituents_array") < 0)) __PYX_ERR(0, 91, __pyx_L3_error)

#line 91 "pyjet/src/FastJet.pyx"
      }

#line 91 "pyjet/src/FastJet.pyx"
    } else {

#line 91 "pyjet/src/FastJet.pyx"
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: 
#line 91 "pyjet/src/FastJet.pyx"
values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: 
#line 91 "pyjet/src/FastJet.pyx"
break;
        default: 
#line 91 "pyjet/src/FastJet.pyx"
goto __pyx_L5_argtuple_error;

#line 91 "pyjet/src/FastJet.pyx"
      }

#line 91 "pyjet/src/FastJet.pyx"
    }

#line 91 "pyjet/src/FastJet.pyx"
    if (values[0]) {

#line 91 "pyjet/src/FastJet.pyx"
      __pyx_v_ep = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_ep == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 91, __pyx_L3_error)

#line 91 "pyjet/src/FastJet.pyx"
    } else {

#line 91 "pyjet/src/FastJet.pyx"
      __pyx_v_ep = ((bool)0);

#line 91 "pyjet/src/FastJet.pyx"
    }

#line 91 "pyjet/src/FastJet.pyx"
  }

#line 91 "pyjet/src/FastJet.pyx"
  goto __pyx_L4_argument_unpacking_done;

#line 91 "pyjet/src/FastJet.pyx"
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("constituents_array", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); 
#line 91 "pyjet/src/FastJet.pyx"
__PYX_ERR(0, 91, __pyx_L3_error)

#line 91 "pyjet/src/FastJet.pyx"
  __pyx_L3_error:;

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.constituents_array", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 91 "pyjet/src/FastJet.pyx"
  return NULL;

#line 91 "pyjet/src/FastJet.pyx"
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = 
#line 91 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_11constituents_array(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self), __pyx_v_ep);

#line 91 "pyjet/src/FastJet.pyx"


#line 91 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 91 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 91 "pyjet/src/FastJet.pyx"
}

#line 91 "pyjet/src/FastJet.pyx"


#line 91 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_11constituents_array(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self, bool __pyx_v_ep) {

#line 91 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 91 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 91 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_2 = NULL;

#line 91 "pyjet/src/FastJet.pyx"
  struct __pyx_opt_args_9_libpyjet_vector_to_array __pyx_t_3;

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("constituents_array", 0);

  /* "pyjet/src/FastJet.pyx":92
 * 
 *     def constituents_array(self, bool ep=False):
 *         return vector_to_array(self.constits, ep)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

#line 92 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 92 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_ep); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 92, __pyx_L1_error)

#line 92 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 92 "pyjet/src/FastJet.pyx"
  __pyx_t_3.__pyx_n = 1;

#line 92 "pyjet/src/FastJet.pyx"
  __pyx_t_3.ep = __pyx_t_1;

#line 92 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = ((PyObject *)__pyx_f_9_libpyjet_vector_to_array(__pyx_v_self->constits, &__pyx_t_3)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 92, __pyx_L1_error)

#line 92 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_2);

#line 92 "pyjet/src/FastJet.pyx"
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

#line 92 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_2;

#line 92 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = 0;

#line 92 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":91
 *         return list(self)
 * 
 *     def constituents_array(self, bool ep=False):             # <<<<<<<<<<<<<<
 *         return vector_to_array(self.constits, ep)
 * 
 */

#line 91 "pyjet/src/FastJet.pyx"


#line 91 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 91 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_2);

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.constituents_array", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 91 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 91 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 91 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 91 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 91 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":95
 * 
 *     @property
 *     def pt(self):             # <<<<<<<<<<<<<<
 *         return self.jet.perp()
 * 
 */

#line 95 "pyjet/src/FastJet.pyx"


#line 95 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 95 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_2pt_1__get__(PyObject *__pyx_v_self); /*proto*/

#line 95 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_2pt_1__get__(PyObject *__pyx_v_self) {

#line 95 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 95 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 95 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = 
#line 95 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_2pt___get__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 95 "pyjet/src/FastJet.pyx"


#line 95 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 95 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 95 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 95 "pyjet/src/FastJet.pyx"
}

#line 95 "pyjet/src/FastJet.pyx"


#line 95 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_2pt___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 95 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 95 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 95 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 95 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pyjet/src/FastJet.pyx":96
 *     @property
 *     def pt(self):
 *         return self.jet.perp()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

#line 96 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 96 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jet.perp()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 96, __pyx_L1_error)

#line 96 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 96 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 96 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 96 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":95
 * 
 *     @property
 *     def pt(self):             # <<<<<<<<<<<<<<
 *         return self.jet.perp()
 * 
 */

#line 95 "pyjet/src/FastJet.pyx"


#line 95 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 95 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 95 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 95 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 95 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 95 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 95 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 95 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 95 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 95 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":99
 * 
 *     @property
 *     def eta(self):             # <<<<<<<<<<<<<<
 *         return self.jet.pseudorapidity()
 * 
 */

#line 99 "pyjet/src/FastJet.pyx"


#line 99 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 99 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_3eta_1__get__(PyObject *__pyx_v_self); /*proto*/

#line 99 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_3eta_1__get__(PyObject *__pyx_v_self) {

#line 99 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 99 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 99 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = 
#line 99 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_3eta___get__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 99 "pyjet/src/FastJet.pyx"


#line 99 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 99 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 99 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 99 "pyjet/src/FastJet.pyx"
}

#line 99 "pyjet/src/FastJet.pyx"


#line 99 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_3eta___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 99 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 99 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 99 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 99 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pyjet/src/FastJet.pyx":100
 *     @property
 *     def eta(self):
 *         return self.jet.pseudorapidity()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

#line 100 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 100 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jet.pseudorapidity()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 100, __pyx_L1_error)

#line 100 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 100 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 100 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 100 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":99
 * 
 *     @property
 *     def eta(self):             # <<<<<<<<<<<<<<
 *         return self.jet.pseudorapidity()
 * 
 */

#line 99 "pyjet/src/FastJet.pyx"


#line 99 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 99 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 99 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 99 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 99 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 99 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 99 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 99 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 99 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 99 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":103
 * 
 *     @property
 *     def phi(self):             # <<<<<<<<<<<<<<
 *         return self.jet.phi_std()
 * 
 */

#line 103 "pyjet/src/FastJet.pyx"


#line 103 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 103 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_3phi_1__get__(PyObject *__pyx_v_self); /*proto*/

#line 103 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_3phi_1__get__(PyObject *__pyx_v_self) {

#line 103 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 103 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 103 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = 
#line 103 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_3phi___get__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 103 "pyjet/src/FastJet.pyx"


#line 103 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 103 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 103 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 103 "pyjet/src/FastJet.pyx"
}

#line 103 "pyjet/src/FastJet.pyx"


#line 103 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_3phi___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 103 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 103 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 103 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 103 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pyjet/src/FastJet.pyx":104
 *     @property
 *     def phi(self):
 *         return self.jet.phi_std()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

#line 104 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 104 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jet.phi_std()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 104, __pyx_L1_error)

#line 104 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 104 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 104 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 104 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":103
 * 
 *     @property
 *     def phi(self):             # <<<<<<<<<<<<<<
 *         return self.jet.phi_std()
 * 
 */

#line 103 "pyjet/src/FastJet.pyx"


#line 103 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 103 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 103 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 103 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 103 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 103 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 103 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 103 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 103 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 103 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":107
 * 
 *     @property
 *     def mass(self):             # <<<<<<<<<<<<<<
 *         return self.jet.m()
 * 
 */

#line 107 "pyjet/src/FastJet.pyx"


#line 107 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 107 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_4mass_1__get__(PyObject *__pyx_v_self); /*proto*/

#line 107 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_4mass_1__get__(PyObject *__pyx_v_self) {

#line 107 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 107 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 107 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = 
#line 107 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_4mass___get__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 107 "pyjet/src/FastJet.pyx"


#line 107 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 107 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 107 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 107 "pyjet/src/FastJet.pyx"
}

#line 107 "pyjet/src/FastJet.pyx"


#line 107 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_4mass___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 107 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 107 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 107 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 107 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pyjet/src/FastJet.pyx":108
 *     @property
 *     def mass(self):
 *         return self.jet.m()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

#line 108 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 108 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jet.m()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 108, __pyx_L1_error)

#line 108 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 108 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 108 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 108 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":107
 * 
 *     @property
 *     def mass(self):             # <<<<<<<<<<<<<<
 *         return self.jet.m()
 * 
 */

#line 107 "pyjet/src/FastJet.pyx"


#line 107 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 107 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 107 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 107 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.mass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 107 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 107 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 107 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 107 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 107 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 107 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":111
 * 
 *     @property
 *     def e(self):             # <<<<<<<<<<<<<<
 *         return self.jet.e()
 * 
 */

#line 111 "pyjet/src/FastJet.pyx"


#line 111 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 111 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_1e_1__get__(PyObject *__pyx_v_self); /*proto*/

#line 111 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_1e_1__get__(PyObject *__pyx_v_self) {

#line 111 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 111 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 111 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = 
#line 111 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_1e___get__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 111 "pyjet/src/FastJet.pyx"


#line 111 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 111 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 111 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 111 "pyjet/src/FastJet.pyx"
}

#line 111 "pyjet/src/FastJet.pyx"


#line 111 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_1e___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 111 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 111 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 111 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 111 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pyjet/src/FastJet.pyx":112
 *     @property
 *     def e(self):
 *         return self.jet.e()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

#line 112 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 112 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jet.e()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)

#line 112 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 112 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 112 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 112 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":111
 * 
 *     @property
 *     def e(self):             # <<<<<<<<<<<<<<
 *         return self.jet.e()
 * 
 */

#line 111 "pyjet/src/FastJet.pyx"


#line 111 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 111 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 111 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 111 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.e.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 111 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 111 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 111 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 111 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 111 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 111 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":115
 * 
 *     @property
 *     def et(self):             # <<<<<<<<<<<<<<
 *         return self.jet.Et()
 * 
 */

#line 115 "pyjet/src/FastJet.pyx"


#line 115 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 115 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_2et_1__get__(PyObject *__pyx_v_self); /*proto*/

#line 115 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_2et_1__get__(PyObject *__pyx_v_self) {

#line 115 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 115 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 115 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = 
#line 115 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_2et___get__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 115 "pyjet/src/FastJet.pyx"


#line 115 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 115 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 115 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 115 "pyjet/src/FastJet.pyx"
}

#line 115 "pyjet/src/FastJet.pyx"


#line 115 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_2et___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 115 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 115 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 115 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 115 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pyjet/src/FastJet.pyx":116
 *     @property
 *     def et(self):
 *         return self.jet.Et()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

#line 116 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 116 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jet.Et()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 116, __pyx_L1_error)

#line 116 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 116 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 116 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 116 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":115
 * 
 *     @property
 *     def et(self):             # <<<<<<<<<<<<<<
 *         return self.jet.Et()
 * 
 */

#line 115 "pyjet/src/FastJet.pyx"


#line 115 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 115 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 115 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 115 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.et.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 115 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 115 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 115 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 115 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 115 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 115 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":119
 * 
 *     @property
 *     def px(self):             # <<<<<<<<<<<<<<
 *         return self.jet.px()
 * 
 */

#line 119 "pyjet/src/FastJet.pyx"


#line 119 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 119 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_2px_1__get__(PyObject *__pyx_v_self); /*proto*/

#line 119 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_2px_1__get__(PyObject *__pyx_v_self) {

#line 119 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 119 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 119 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = 
#line 119 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_2px___get__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 119 "pyjet/src/FastJet.pyx"


#line 119 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 119 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 119 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 119 "pyjet/src/FastJet.pyx"
}

#line 119 "pyjet/src/FastJet.pyx"


#line 119 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_2px___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 119 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 119 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 119 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 119 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pyjet/src/FastJet.pyx":120
 *     @property
 *     def px(self):
 *         return self.jet.px()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

#line 120 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 120 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jet.px()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 120, __pyx_L1_error)

#line 120 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 120 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 120 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 120 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":119
 * 
 *     @property
 *     def px(self):             # <<<<<<<<<<<<<<
 *         return self.jet.px()
 * 
 */

#line 119 "pyjet/src/FastJet.pyx"


#line 119 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 119 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 119 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 119 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.px.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 119 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 119 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 119 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 119 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 119 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 119 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":123
 * 
 *     @property
 *     def py(self):             # <<<<<<<<<<<<<<
 *         return self.jet.py()
 * 
 */

#line 123 "pyjet/src/FastJet.pyx"


#line 123 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 123 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_2py_1__get__(PyObject *__pyx_v_self); /*proto*/

#line 123 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_2py_1__get__(PyObject *__pyx_v_self) {

#line 123 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 123 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 123 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = 
#line 123 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_2py___get__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 123 "pyjet/src/FastJet.pyx"


#line 123 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 123 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 123 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 123 "pyjet/src/FastJet.pyx"
}

#line 123 "pyjet/src/FastJet.pyx"


#line 123 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_2py___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 123 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 123 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 123 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 123 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pyjet/src/FastJet.pyx":124
 *     @property
 *     def py(self):
 *         return self.jet.py()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */

#line 124 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 124 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jet.py()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 124, __pyx_L1_error)

#line 124 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 124 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 124 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 124 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":123
 * 
 *     @property
 *     def py(self):             # <<<<<<<<<<<<<<
 *         return self.jet.py()
 * 
 */

#line 123 "pyjet/src/FastJet.pyx"


#line 123 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 123 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 123 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 123 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.py.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 123 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 123 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 123 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 123 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 123 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 123 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":127
 * 
 *     @property
 *     def pz(self):             # <<<<<<<<<<<<<<
 *         return self.jet.pz()
 * 
 */

#line 127 "pyjet/src/FastJet.pyx"


#line 127 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 127 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_2pz_1__get__(PyObject *__pyx_v_self); /*proto*/

#line 127 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_2pz_1__get__(PyObject *__pyx_v_self) {

#line 127 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 127 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 127 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = 
#line 127 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_2pz___get__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 127 "pyjet/src/FastJet.pyx"


#line 127 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 127 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 127 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 127 "pyjet/src/FastJet.pyx"
}

#line 127 "pyjet/src/FastJet.pyx"


#line 127 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_2pz___get__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 127 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 127 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 127 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 127 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "pyjet/src/FastJet.pyx":128
 *     @property
 *     def pz(self):
 *         return self.jet.pz()             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */

#line 128 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 128 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jet.pz()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 128, __pyx_L1_error)

#line 128 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 128 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 128 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 128 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":127
 * 
 *     @property
 *     def pz(self):             # <<<<<<<<<<<<<<
 *         return self.jet.pz()
 * 
 */

#line 127 "pyjet/src/FastJet.pyx"


#line 127 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 127 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 127 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 127 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.pz.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 127 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 127 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 127 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 127 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 127 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 127 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":130
 *         return self.jet.pz()
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "PyPseudoJet(pt={0:.3f}, eta={1:.3f}, phi={2:.3f}, mass={3:.3f})".format(
 *             self.pt, self.eta, self.phi, self.mass)
 */

#line 130 "pyjet/src/FastJet.pyx"


#line 130 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 130 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_14__repr__(PyObject *__pyx_v_self); /*proto*/

#line 130 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_11PyPseudoJet_14__repr__(PyObject *__pyx_v_self) {

#line 130 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = 
#line 130 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_11PyPseudoJet_13__repr__(((struct __pyx_obj_9_libpyjet_PyPseudoJet *)__pyx_v_self));

#line 130 "pyjet/src/FastJet.pyx"


#line 130 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 130 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 130 "pyjet/src/FastJet.pyx"
}

#line 130 "pyjet/src/FastJet.pyx"


#line 130 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_11PyPseudoJet_13__repr__(struct __pyx_obj_9_libpyjet_PyPseudoJet *__pyx_v_self) {

#line 130 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 130 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 130 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_2 = NULL;

#line 130 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_3 = NULL;

#line 130 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_4 = NULL;

#line 130 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_5 = NULL;

#line 130 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_6 = NULL;

#line 130 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_7 = NULL;

#line 130 "pyjet/src/FastJet.pyx"
  int __pyx_t_8;

#line 130 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_9 = NULL;

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "pyjet/src/FastJet.pyx":131
 * 
 *     def __repr__(self):
 *         return "PyPseudoJet(pt={0:.3f}, eta={1:.3f}, phi={2:.3f}, mass={3:.3f})".format(             # <<<<<<<<<<<<<<
 *             self.pt, self.eta, self.phi, self.mass)
 * 
 */

#line 131 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 131 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_PyPseudoJet_pt_0_3f_eta_1_3f_phi, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 131, __pyx_L1_error)

#line 131 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_2);

  /* "pyjet/src/FastJet.pyx":132
 *     def __repr__(self):
 *         return "PyPseudoJet(pt={0:.3f}, eta={1:.3f}, phi={2:.3f}, mass={3:.3f})".format(
 *             self.pt, self.eta, self.phi, self.mass)             # <<<<<<<<<<<<<<
 * 
 * 
 */

#line 132 "pyjet/src/FastJet.pyx"
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 132, __pyx_L1_error)

#line 132 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 132 "pyjet/src/FastJet.pyx"
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_eta); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 132, __pyx_L1_error)

#line 132 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_4);

#line 132 "pyjet/src/FastJet.pyx"
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_phi); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 132, __pyx_L1_error)

#line 132 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_5);

#line 132 "pyjet/src/FastJet.pyx"
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_mass); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 132, __pyx_L1_error)

#line 132 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_6);

#line 132 "pyjet/src/FastJet.pyx"
  __pyx_t_7 = NULL;

#line 132 "pyjet/src/FastJet.pyx"
  __pyx_t_8 = 0;

#line 132 "pyjet/src/FastJet.pyx"
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {

#line 132 "pyjet/src/FastJet.pyx"
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);

#line 132 "pyjet/src/FastJet.pyx"
    if (likely(__pyx_t_7)) {

#line 132 "pyjet/src/FastJet.pyx"
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);

#line 132 "pyjet/src/FastJet.pyx"
      __Pyx_INCREF(__pyx_t_7);

#line 132 "pyjet/src/FastJet.pyx"
      __Pyx_INCREF(function);

#line 132 "pyjet/src/FastJet.pyx"
      __Pyx_DECREF_SET(__pyx_t_2, function);

#line 132 "pyjet/src/FastJet.pyx"
      __pyx_t_8 = 1;

#line 132 "pyjet/src/FastJet.pyx"
    }

#line 132 "pyjet/src/FastJet.pyx"
  }

#line 132 "pyjet/src/FastJet.pyx"
  #if CYTHON_FAST_PYCALL

#line 132 "pyjet/src/FastJet.pyx"
  if (PyFunction_Check(__pyx_t_2)) {

#line 132 "pyjet/src/FastJet.pyx"
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};

#line 132 "pyjet/src/FastJet.pyx"
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 131, __pyx_L1_error)

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_1);

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

#line 132 "pyjet/src/FastJet.pyx"
  } else

#line 132 "pyjet/src/FastJet.pyx"
  #endif

#line 132 "pyjet/src/FastJet.pyx"
  #if CYTHON_FAST_PYCCALL

#line 132 "pyjet/src/FastJet.pyx"
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {

#line 132 "pyjet/src/FastJet.pyx"
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};

#line 132 "pyjet/src/FastJet.pyx"
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 131, __pyx_L1_error)

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_1);

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

#line 132 "pyjet/src/FastJet.pyx"
  } else

#line 132 "pyjet/src/FastJet.pyx"
  #endif

#line 132 "pyjet/src/FastJet.pyx"
  {

#line 132 "pyjet/src/FastJet.pyx"
    __pyx_t_9 = PyTuple_New(4+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 131, __pyx_L1_error)

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_9);

#line 132 "pyjet/src/FastJet.pyx"
    if (__pyx_t_7) {

#line 132 "pyjet/src/FastJet.pyx"
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;

#line 132 "pyjet/src/FastJet.pyx"
    }

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_GIVEREF(__pyx_t_3);

#line 132 "pyjet/src/FastJet.pyx"
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_GIVEREF(__pyx_t_4);

#line 132 "pyjet/src/FastJet.pyx"
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_GIVEREF(__pyx_t_5);

#line 132 "pyjet/src/FastJet.pyx"
    PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_GIVEREF(__pyx_t_6);

#line 132 "pyjet/src/FastJet.pyx"
    PyTuple_SET_ITEM(__pyx_t_9, 3+__pyx_t_8, __pyx_t_6);

#line 132 "pyjet/src/FastJet.pyx"
    __pyx_t_3 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __pyx_t_4 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __pyx_t_5 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __pyx_t_6 = 0;

#line 132 "pyjet/src/FastJet.pyx"
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 131, __pyx_L1_error)

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_1);

#line 132 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

#line 132 "pyjet/src/FastJet.pyx"
  }

#line 132 "pyjet/src/FastJet.pyx"
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

#line 132 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 132 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 132 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":130
 *         return self.jet.pz()
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "PyPseudoJet(pt={0:.3f}, eta={1:.3f}, phi={2:.3f}, mass={3:.3f})".format(
 *             self.pt, self.eta, self.phi, self.mass)
 */

#line 130 "pyjet/src/FastJet.pyx"


#line 130 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 130 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_2);

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_3);

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_4);

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_5);

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_6);

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_7);

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_9);

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.PyPseudoJet.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 130 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 130 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 130 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 130 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 130 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":135
 * 
 * 
 * cdef np.ndarray vector_to_array(vector[PseudoJet]& jets, ep=False):             # <<<<<<<<<<<<<<
 *     # convert vector of pseudojets into numpy array
 *     cdef np.ndarray np_jets
 */

#line 135 "pyjet/src/FastJet.pyx"


#line 135 "pyjet/src/FastJet.pyx"
static PyArrayObject *__pyx_f_9_libpyjet_vector_to_array(std::vector<fastjet::PseudoJet>  &__pyx_v_jets, struct __pyx_opt_args_9_libpyjet_vector_to_array *__pyx_optional_args) {

#line 135 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_v_ep = ((PyObject *)Py_False);
  PyArrayObject *__pyx_v_np_jets = 0
#line 135 "pyjet/src/FastJet.pyx"
;
  __pyx_t_9_libpyjet_DTYPE_t *__pyx_v_data
#line 135 "pyjet/src/FastJet.pyx"
;
  fastjet::PseudoJet __pyx_v_jet
#line 135 "pyjet/src/FastJet.pyx"
;
  unsigned int __pyx_v_ijet
#line 135 "pyjet/src/FastJet.pyx"
;

#line 135 "pyjet/src/FastJet.pyx"
  PyArrayObject *__pyx_r = NULL;

#line 135 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 135 "pyjet/src/FastJet.pyx"
  int __pyx_t_1;

#line 135 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_2 = NULL;

#line 135 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_3 = NULL;

#line 135 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_4 = NULL;

#line 135 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_5 = NULL;

#line 135 "pyjet/src/FastJet.pyx"
  size_t __pyx_t_6;

#line 135 "pyjet/src/FastJet.pyx"
  unsigned int __pyx_t_7;

#line 135 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("vector_to_array", 0);

#line 135 "pyjet/src/FastJet.pyx"
  if (__pyx_optional_args) {

#line 135 "pyjet/src/FastJet.pyx"
    if (__pyx_optional_args->__pyx_n > 0) {

#line 135 "pyjet/src/FastJet.pyx"
      __pyx_v_ep = __pyx_optional_args->ep;

#line 135 "pyjet/src/FastJet.pyx"
    }

#line 135 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":138
 *     # convert vector of pseudojets into numpy array
 *     cdef np.ndarray np_jets
 *     if ep:             # <<<<<<<<<<<<<<
 *         np_jets = np.empty(jets.size(), dtype=DTYPE_EP)
 *     else:
 */

#line 138 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_ep); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 138, __pyx_L1_error)

#line 138 "pyjet/src/FastJet.pyx"
  if (__pyx_t_1) {

    /* "pyjet/src/FastJet.pyx":139
 *     cdef np.ndarray np_jets
 *     if ep:
 *         np_jets = np.empty(jets.size(), dtype=DTYPE_EP)             # <<<<<<<<<<<<<<
 *     else:
 *         np_jets = np.empty(jets.size(), dtype=DTYPE_PTEPM)
 */

#line 139 "pyjet/src/FastJet.pyx"
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 139, __pyx_L1_error)

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_2);

#line 139 "pyjet/src/FastJet.pyx"
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_empty); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 139, __pyx_L1_error)

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_3);

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

#line 139 "pyjet/src/FastJet.pyx"
    __pyx_t_2 = __Pyx_PyInt_FromSize_t(__pyx_v_jets.size()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 139, __pyx_L1_error)

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_2);

#line 139 "pyjet/src/FastJet.pyx"
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 139, __pyx_L1_error)

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_4);

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_GIVEREF(__pyx_t_2);

#line 139 "pyjet/src/FastJet.pyx"
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);

#line 139 "pyjet/src/FastJet.pyx"
    __pyx_t_2 = 0;

#line 139 "pyjet/src/FastJet.pyx"
    __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 139, __pyx_L1_error)

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_2);

#line 139 "pyjet/src/FastJet.pyx"
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_DTYPE_EP); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 139, __pyx_L1_error)

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_5);

#line 139 "pyjet/src/FastJet.pyx"
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, __pyx_t_5) < 0) __PYX_ERR(0, 139, __pyx_L1_error)

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

#line 139 "pyjet/src/FastJet.pyx"
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 139, __pyx_L1_error)

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_5);

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 139 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

#line 139 "pyjet/src/FastJet.pyx"
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 139, __pyx_L1_error)

#line 139 "pyjet/src/FastJet.pyx"
    __pyx_v_np_jets = ((PyArrayObject *)__pyx_t_5);

#line 139 "pyjet/src/FastJet.pyx"
    __pyx_t_5 = 0;

    /* "pyjet/src/FastJet.pyx":138
 *     # convert vector of pseudojets into numpy array
 *     cdef np.ndarray np_jets
 *     if ep:             # <<<<<<<<<<<<<<
 *         np_jets = np.empty(jets.size(), dtype=DTYPE_EP)
 *     else:
 */

#line 138 "pyjet/src/FastJet.pyx"
    goto __pyx_L3;

#line 138 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":141
 *         np_jets = np.empty(jets.size(), dtype=DTYPE_EP)
 *     else:
 *         np_jets = np.empty(jets.size(), dtype=DTYPE_PTEPM)             # <<<<<<<<<<<<<<
 *     cdef DTYPE_t* data = <DTYPE_t *> np_jets.data
 *     cdef PseudoJet jet
 */

#line 141 "pyjet/src/FastJet.pyx"
  /*else*/ {

#line 141 "pyjet/src/FastJet.pyx"
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 141, __pyx_L1_error)

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_5);

#line 141 "pyjet/src/FastJet.pyx"
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_empty); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 141, __pyx_L1_error)

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_2);

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

#line 141 "pyjet/src/FastJet.pyx"
    __pyx_t_5 = __Pyx_PyInt_FromSize_t(__pyx_v_jets.size()); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 141, __pyx_L1_error)

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_5);

#line 141 "pyjet/src/FastJet.pyx"
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 141, __pyx_L1_error)

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_4);

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_GIVEREF(__pyx_t_5);

#line 141 "pyjet/src/FastJet.pyx"
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);

#line 141 "pyjet/src/FastJet.pyx"
    __pyx_t_5 = 0;

#line 141 "pyjet/src/FastJet.pyx"
    __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 141, __pyx_L1_error)

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_5);

#line 141 "pyjet/src/FastJet.pyx"
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_DTYPE_PTEPM); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 141, __pyx_L1_error)

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_3);

#line 141 "pyjet/src/FastJet.pyx"
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_dtype, __pyx_t_3) < 0) __PYX_ERR(0, 141, __pyx_L1_error)

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 141 "pyjet/src/FastJet.pyx"
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 141, __pyx_L1_error)

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_3);

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 141 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

#line 141 "pyjet/src/FastJet.pyx"
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 141, __pyx_L1_error)

#line 141 "pyjet/src/FastJet.pyx"
    __pyx_v_np_jets = ((PyArrayObject *)__pyx_t_3);

#line 141 "pyjet/src/FastJet.pyx"
    __pyx_t_3 = 0;

#line 141 "pyjet/src/FastJet.pyx"
  }

#line 141 "pyjet/src/FastJet.pyx"
  __pyx_L3:;

  /* "pyjet/src/FastJet.pyx":142
 *     else:
 *         np_jets = np.empty(jets.size(), dtype=DTYPE_PTEPM)
 *     cdef DTYPE_t* data = <DTYPE_t *> np_jets.data             # <<<<<<<<<<<<<<
 *     cdef PseudoJet jet
 *     cdef unsigned int ijet
 */

#line 142 "pyjet/src/FastJet.pyx"
  __pyx_v_data = ((__pyx_t_9_libpyjet_DTYPE_t *)__pyx_v_np_jets->data);

  /* "pyjet/src/FastJet.pyx":145
 *     cdef PseudoJet jet
 *     cdef unsigned int ijet
 *     if ep:             # <<<<<<<<<<<<<<
 *         for ijet in range(jets.size()):
 *             jet = jets[ijet]
 */

#line 145 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_ep); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 145, __pyx_L1_error)

#line 145 "pyjet/src/FastJet.pyx"
  if (__pyx_t_1) {

    /* "pyjet/src/FastJet.pyx":146
 *     cdef unsigned int ijet
 *     if ep:
 *         for ijet in range(jets.size()):             # <<<<<<<<<<<<<<
 *             jet = jets[ijet]
 *             data[ijet * 4 + 0] = jet.e()
 */

#line 146 "pyjet/src/FastJet.pyx"
    __pyx_t_6 = __pyx_v_jets.size();

#line 146 "pyjet/src/FastJet.pyx"
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {

#line 146 "pyjet/src/FastJet.pyx"
      __pyx_v_ijet = __pyx_t_7;

      /* "pyjet/src/FastJet.pyx":147
 *     if ep:
 *         for ijet in range(jets.size()):
 *             jet = jets[ijet]             # <<<<<<<<<<<<<<
 *             data[ijet * 4 + 0] = jet.e()
 *             data[ijet * 4 + 1] = jet.px()
 */

#line 147 "pyjet/src/FastJet.pyx"
      __pyx_v_jet = (__pyx_v_jets[__pyx_v_ijet]);

      /* "pyjet/src/FastJet.pyx":148
 *         for ijet in range(jets.size()):
 *             jet = jets[ijet]
 *             data[ijet * 4 + 0] = jet.e()             # <<<<<<<<<<<<<<
 *             data[ijet * 4 + 1] = jet.px()
 *             data[ijet * 4 + 2] = jet.py()
 */

#line 148 "pyjet/src/FastJet.pyx"
      (__pyx_v_data[((__pyx_v_ijet * 4) + 0)]) = __pyx_v_jet.e();

      /* "pyjet/src/FastJet.pyx":149
 *             jet = jets[ijet]
 *             data[ijet * 4 + 0] = jet.e()
 *             data[ijet * 4 + 1] = jet.px()             # <<<<<<<<<<<<<<
 *             data[ijet * 4 + 2] = jet.py()
 *             data[ijet * 4 + 3] = jet.pz()
 */

#line 149 "pyjet/src/FastJet.pyx"
      (__pyx_v_data[((__pyx_v_ijet * 4) + 1)]) = __pyx_v_jet.px();

      /* "pyjet/src/FastJet.pyx":150
 *             data[ijet * 4 + 0] = jet.e()
 *             data[ijet * 4 + 1] = jet.px()
 *             data[ijet * 4 + 2] = jet.py()             # <<<<<<<<<<<<<<
 *             data[ijet * 4 + 3] = jet.pz()
 *     else:
 */

#line 150 "pyjet/src/FastJet.pyx"
      (__pyx_v_data[((__pyx_v_ijet * 4) + 2)]) = __pyx_v_jet.py();

      /* "pyjet/src/FastJet.pyx":151
 *             data[ijet * 4 + 1] = jet.px()
 *             data[ijet * 4 + 2] = jet.py()
 *             data[ijet * 4 + 3] = jet.pz()             # <<<<<<<<<<<<<<
 *     else:
 *         for ijet in range(jets.size()):
 */

#line 151 "pyjet/src/FastJet.pyx"
      (__pyx_v_data[((__pyx_v_ijet * 4) + 3)]) = __pyx_v_jet.pz();

#line 151 "pyjet/src/FastJet.pyx"
    }

    /* "pyjet/src/FastJet.pyx":145
 *     cdef PseudoJet jet
 *     cdef unsigned int ijet
 *     if ep:             # <<<<<<<<<<<<<<
 *         for ijet in range(jets.size()):
 *             jet = jets[ijet]
 */

#line 145 "pyjet/src/FastJet.pyx"
    goto __pyx_L4;

#line 145 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":153
 *             data[ijet * 4 + 3] = jet.pz()
 *     else:
 *         for ijet in range(jets.size()):             # <<<<<<<<<<<<<<
 *             jet = jets[ijet]
 *             data[ijet * 4 + 0] = jet.perp()
 */

#line 153 "pyjet/src/FastJet.pyx"
  /*else*/ {

#line 153 "pyjet/src/FastJet.pyx"
    __pyx_t_6 = __pyx_v_jets.size();

#line 153 "pyjet/src/FastJet.pyx"
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {

#line 153 "pyjet/src/FastJet.pyx"
      __pyx_v_ijet = __pyx_t_7;

      /* "pyjet/src/FastJet.pyx":154
 *     else:
 *         for ijet in range(jets.size()):
 *             jet = jets[ijet]             # <<<<<<<<<<<<<<
 *             data[ijet * 4 + 0] = jet.perp()
 *             data[ijet * 4 + 1] = jet.pseudorapidity()
 */

#line 154 "pyjet/src/FastJet.pyx"
      __pyx_v_jet = (__pyx_v_jets[__pyx_v_ijet]);

      /* "pyjet/src/FastJet.pyx":155
 *         for ijet in range(jets.size()):
 *             jet = jets[ijet]
 *             data[ijet * 4 + 0] = jet.perp()             # <<<<<<<<<<<<<<
 *             data[ijet * 4 + 1] = jet.pseudorapidity()
 *             data[ijet * 4 + 2] = jet.phi_std()
 */

#line 155 "pyjet/src/FastJet.pyx"
      (__pyx_v_data[((__pyx_v_ijet * 4) + 0)]) = __pyx_v_jet.perp();

      /* "pyjet/src/FastJet.pyx":156
 *             jet = jets[ijet]
 *             data[ijet * 4 + 0] = jet.perp()
 *             data[ijet * 4 + 1] = jet.pseudorapidity()             # <<<<<<<<<<<<<<
 *             data[ijet * 4 + 2] = jet.phi_std()
 *             data[ijet * 4 + 3] = jet.m()
 */

#line 156 "pyjet/src/FastJet.pyx"
      (__pyx_v_data[((__pyx_v_ijet * 4) + 1)]) = __pyx_v_jet.pseudorapidity();

      /* "pyjet/src/FastJet.pyx":157
 *             data[ijet * 4 + 0] = jet.perp()
 *             data[ijet * 4 + 1] = jet.pseudorapidity()
 *             data[ijet * 4 + 2] = jet.phi_std()             # <<<<<<<<<<<<<<
 *             data[ijet * 4 + 3] = jet.m()
 *     return np_jets
 */

#line 157 "pyjet/src/FastJet.pyx"
      (__pyx_v_data[((__pyx_v_ijet * 4) + 2)]) = __pyx_v_jet.phi_std();

      /* "pyjet/src/FastJet.pyx":158
 *             data[ijet * 4 + 1] = jet.pseudorapidity()
 *             data[ijet * 4 + 2] = jet.phi_std()
 *             data[ijet * 4 + 3] = jet.m()             # <<<<<<<<<<<<<<
 *     return np_jets
 * 
 */

#line 158 "pyjet/src/FastJet.pyx"
      (__pyx_v_data[((__pyx_v_ijet * 4) + 3)]) = __pyx_v_jet.m();

#line 158 "pyjet/src/FastJet.pyx"
    }

#line 158 "pyjet/src/FastJet.pyx"
  }

#line 158 "pyjet/src/FastJet.pyx"
  __pyx_L4:;

  /* "pyjet/src/FastJet.pyx":159
 *             data[ijet * 4 + 2] = jet.phi_std()
 *             data[ijet * 4 + 3] = jet.m()
 *     return np_jets             # <<<<<<<<<<<<<<
 * 
 * 
 */

#line 159 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(((PyObject *)__pyx_r));

#line 159 "pyjet/src/FastJet.pyx"
  __Pyx_INCREF(((PyObject *)__pyx_v_np_jets));

#line 159 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_v_np_jets;

#line 159 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":135
 * 
 * 
 * cdef np.ndarray vector_to_array(vector[PseudoJet]& jets, ep=False):             # <<<<<<<<<<<<<<
 *     # convert vector of pseudojets into numpy array
 *     cdef np.ndarray np_jets
 */

#line 135 "pyjet/src/FastJet.pyx"


#line 135 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 135 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 135 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_2);

#line 135 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_3);

#line 135 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_4);

#line 135 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_5);

#line 135 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.vector_to_array", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 135 "pyjet/src/FastJet.pyx"
  __pyx_r = 0;

#line 135 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 135 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF((PyObject *)__pyx_v_np_jets);

#line 135 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF((PyObject *)__pyx_r);

#line 135 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 135 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 135 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":162
 * 
 * 
 * cdef object vector_to_list(vector[PseudoJet]& jets):             # <<<<<<<<<<<<<<
 *     py_jets = []
 *     for jet in jets:
 */

#line 162 "pyjet/src/FastJet.pyx"


#line 162 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_f_9_libpyjet_vector_to_list(std::vector<fastjet::PseudoJet>  &__pyx_v_jets) {
  PyObject *__pyx_v_py_jets = NULL
#line 162 "pyjet/src/FastJet.pyx"
;
  fastjet::PseudoJet __pyx_v_jet
#line 162 "pyjet/src/FastJet.pyx"
;

#line 162 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 162 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 162 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 162 "pyjet/src/FastJet.pyx"
  std::vector<fastjet::PseudoJet> ::iterator __pyx_t_2;

#line 162 "pyjet/src/FastJet.pyx"
  fastjet::PseudoJet __pyx_t_3;

#line 162 "pyjet/src/FastJet.pyx"
  int __pyx_t_4;

#line 162 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("vector_to_list", 0);

  /* "pyjet/src/FastJet.pyx":163
 * 
 * cdef object vector_to_list(vector[PseudoJet]& jets):
 *     py_jets = []             # <<<<<<<<<<<<<<
 *     for jet in jets:
 *         py_jets.append(PyPseudoJet.wrap(jet))
 */

#line 163 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 163, __pyx_L1_error)

#line 163 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 163 "pyjet/src/FastJet.pyx"
  __pyx_v_py_jets = ((PyObject*)__pyx_t_1);

#line 163 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

  /* "pyjet/src/FastJet.pyx":164
 * cdef object vector_to_list(vector[PseudoJet]& jets):
 *     py_jets = []
 *     for jet in jets:             # <<<<<<<<<<<<<<
 *         py_jets.append(PyPseudoJet.wrap(jet))
 *     return py_jets
 */

#line 164 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = __pyx_v_jets.begin();

#line 164 "pyjet/src/FastJet.pyx"
  for (;;) {

#line 164 "pyjet/src/FastJet.pyx"
    if (!(__pyx_t_2 != __pyx_v_jets.end())) break;

#line 164 "pyjet/src/FastJet.pyx"
    __pyx_t_3 = *__pyx_t_2;

#line 164 "pyjet/src/FastJet.pyx"
    ++__pyx_t_2;

#line 164 "pyjet/src/FastJet.pyx"
    __pyx_v_jet = __pyx_t_3;

    /* "pyjet/src/FastJet.pyx":165
 *     py_jets = []
 *     for jet in jets:
 *         py_jets.append(PyPseudoJet.wrap(jet))             # <<<<<<<<<<<<<<
 *     return py_jets
 * 
 */

#line 165 "pyjet/src/FastJet.pyx"
    __pyx_t_1 = ((PyObject *)__pyx_f_9_libpyjet_11PyPseudoJet_wrap(__pyx_v_jet)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 165, __pyx_L1_error)

#line 165 "pyjet/src/FastJet.pyx"
    __Pyx_GOTREF(__pyx_t_1);

#line 165 "pyjet/src/FastJet.pyx"
    __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_py_jets, __pyx_t_1); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(0, 165, __pyx_L1_error)

#line 165 "pyjet/src/FastJet.pyx"
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "pyjet/src/FastJet.pyx":164
 * cdef object vector_to_list(vector[PseudoJet]& jets):
 *     py_jets = []
 *     for jet in jets:             # <<<<<<<<<<<<<<
 *         py_jets.append(PyPseudoJet.wrap(jet))
 *     return py_jets
 */

#line 164 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":166
 *     for jet in jets:
 *         py_jets.append(PyPseudoJet.wrap(jet))
 *     return py_jets             # <<<<<<<<<<<<<<
 * 
 * 
 */

#line 166 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 166 "pyjet/src/FastJet.pyx"
  __Pyx_INCREF(__pyx_v_py_jets);

#line 166 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_v_py_jets;

#line 166 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":162
 * 
 * 
 * cdef object vector_to_list(vector[PseudoJet]& jets):             # <<<<<<<<<<<<<<
 *     py_jets = []
 *     for jet in jets:
 */

#line 162 "pyjet/src/FastJet.pyx"


#line 162 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 162 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 162 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 162 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.vector_to_list", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 162 "pyjet/src/FastJet.pyx"
  __pyx_r = 0;

#line 162 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 162 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_v_py_jets);

#line 162 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 162 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 162 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 162 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":169
 * 
 * 
 * cdef void array_to_pseudojets(np.ndarray vectors, vector[PseudoJet]& output, bool ep):             # <<<<<<<<<<<<<<
 *     """
 *     The dtype ``vectors`` array can be either::
 */

#line 169 "pyjet/src/FastJet.pyx"


#line 169 "pyjet/src/FastJet.pyx"
static void __pyx_f_9_libpyjet_array_to_pseudojets(PyArrayObject *__pyx_v_vectors, std::vector<fastjet::PseudoJet>  &__pyx_v_output, bool __pyx_v_ep) {
  char *__pyx_v_array
#line 169 "pyjet/src/FastJet.pyx"
;
  __pyx_t_9_libpyjet_DTYPE_t *__pyx_v_fourvect
#line 169 "pyjet/src/FastJet.pyx"
;
  __pyx_t_9_libpyjet_DTYPE_t __pyx_v_E
#line 169 "pyjet/src/FastJet.pyx"
;
  __pyx_t_9_libpyjet_DTYPE_t __pyx_v_px
#line 169 "pyjet/src/FastJet.pyx"
;
  __pyx_t_9_libpyjet_DTYPE_t __pyx_v_py
#line 169 "pyjet/src/FastJet.pyx"
;
  __pyx_t_9_libpyjet_DTYPE_t __pyx_v_pz
#line 169 "pyjet/src/FastJet.pyx"
;
  fastjet::PseudoJet __pyx_v_pseudojet
#line 169 "pyjet/src/FastJet.pyx"
;
  PyObject *__pyx_v_fields = NULL
#line 169 "pyjet/src/FastJet.pyx"
;
  unsigned int __pyx_v_num_fields
#line 169 "pyjet/src/FastJet.pyx"
;
  unsigned int __pyx_v_size
#line 169 "pyjet/src/FastJet.pyx"
;
  unsigned int __pyx_v_i
#line 169 "pyjet/src/FastJet.pyx"
;
  unsigned int __pyx_v_rowbytes
#line 169 "pyjet/src/FastJet.pyx"
;
  bool __pyx_v_handle_userinfo
#line 169 "pyjet/src/FastJet.pyx"
;
  __pyx_t_9_libpyjet_PseudoJetUserInfo *__pyx_v_userinfo
#line 169 "pyjet/src/FastJet.pyx"
;
  PyObject *__pyx_v_userinfo_dict = NULL
#line 169 "pyjet/src/FastJet.pyx"
;
  PyObject *__pyx_v_field = NULL
#line 169 "pyjet/src/FastJet.pyx"
;

#line 169 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 169 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 169 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_2 = NULL;

#line 169 "pyjet/src/FastJet.pyx"
  Py_ssize_t __pyx_t_3;

#line 169 "pyjet/src/FastJet.pyx"
  unsigned int __pyx_t_4;

#line 169 "pyjet/src/FastJet.pyx"
  unsigned int __pyx_t_5;

#line 169 "pyjet/src/FastJet.pyx"
  int __pyx_t_6;

#line 169 "pyjet/src/FastJet.pyx"
  PyObject *(*__pyx_t_7)(PyObject *);

#line 169 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_8 = NULL;

#line 169 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("array_to_pseudojets", 0);

  /* "pyjet/src/FastJet.pyx":180
 * 
 *     """
 *     cdef char* array = <char*> vectors.data             # <<<<<<<<<<<<<<
 *     cdef DTYPE_t* fourvect
 *     cdef DTYPE_t E, px, py, pz
 */

#line 180 "pyjet/src/FastJet.pyx"
  __pyx_v_array = ((char *)__pyx_v_vectors->data);

  /* "pyjet/src/FastJet.pyx":184
 *     cdef DTYPE_t E, px, py, pz
 *     cdef PseudoJet pseudojet
 *     fields = vectors.dtype.names             # <<<<<<<<<<<<<<
 *     cdef unsigned int num_fields = len(fields)
 *     cdef unsigned int size = vectors.shape[0], i
 */

#line 184 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vectors), __pyx_n_s_dtype); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 184, __pyx_L1_error)

#line 184 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 184 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_names); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error)

#line 184 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_2);

#line 184 "pyjet/src/FastJet.pyx"
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

#line 184 "pyjet/src/FastJet.pyx"
  __pyx_v_fields = __pyx_t_2;

#line 184 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = 0;

  /* "pyjet/src/FastJet.pyx":185
 *     cdef PseudoJet pseudojet
 *     fields = vectors.dtype.names
 *     cdef unsigned int num_fields = len(fields)             # <<<<<<<<<<<<<<
 *     cdef unsigned int size = vectors.shape[0], i
 *     cdef unsigned int rowbytes = vectors.itemsize
 */

#line 185 "pyjet/src/FastJet.pyx"
  __pyx_t_3 = PyObject_Length(__pyx_v_fields); if (unlikely(__pyx_t_3 == -1)) __PYX_ERR(0, 185, __pyx_L1_error)

#line 185 "pyjet/src/FastJet.pyx"
  __pyx_v_num_fields = __pyx_t_3;

  /* "pyjet/src/FastJet.pyx":186
 *     fields = vectors.dtype.names
 *     cdef unsigned int num_fields = len(fields)
 *     cdef unsigned int size = vectors.shape[0], i             # <<<<<<<<<<<<<<
 *     cdef unsigned int rowbytes = vectors.itemsize
 *     cdef bool handle_userinfo = num_fields > 4
 */

#line 186 "pyjet/src/FastJet.pyx"
  __pyx_v_size = (__pyx_v_vectors->dimensions[0]);

  /* "pyjet/src/FastJet.pyx":187
 *     cdef unsigned int num_fields = len(fields)
 *     cdef unsigned int size = vectors.shape[0], i
 *     cdef unsigned int rowbytes = vectors.itemsize             # <<<<<<<<<<<<<<
 *     cdef bool handle_userinfo = num_fields > 4
 *     cdef PseudoJetUserInfo* userinfo
 */

#line 187 "pyjet/src/FastJet.pyx"
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vectors), __pyx_n_s_itemsize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 187, __pyx_L1_error)

#line 187 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_2);

#line 187 "pyjet/src/FastJet.pyx"
  __pyx_t_4 = __Pyx_PyInt_As_unsigned_int(__pyx_t_2); if (unlikely((__pyx_t_4 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 187, __pyx_L1_error)

#line 187 "pyjet/src/FastJet.pyx"
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

#line 187 "pyjet/src/FastJet.pyx"
  __pyx_v_rowbytes = __pyx_t_4;

  /* "pyjet/src/FastJet.pyx":188
 *     cdef unsigned int size = vectors.shape[0], i
 *     cdef unsigned int rowbytes = vectors.itemsize
 *     cdef bool handle_userinfo = num_fields > 4             # <<<<<<<<<<<<<<
 *     cdef PseudoJetUserInfo* userinfo
 *     output.clear()
 */

#line 188 "pyjet/src/FastJet.pyx"
  __pyx_v_handle_userinfo = (__pyx_v_num_fields > 4);

  /* "pyjet/src/FastJet.pyx":190
 *     cdef bool handle_userinfo = num_fields > 4
 *     cdef PseudoJetUserInfo* userinfo
 *     output.clear()             # <<<<<<<<<<<<<<
 *     for i in range(size):
 *         # shift
 */

#line 190 "pyjet/src/FastJet.pyx"
  __pyx_v_output.clear();

  /* "pyjet/src/FastJet.pyx":191
 *     cdef PseudoJetUserInfo* userinfo
 *     output.clear()
 *     for i in range(size):             # <<<<<<<<<<<<<<
 *         # shift
 *         fourvect = <DTYPE_t*> &array[i * rowbytes]
 */

#line 191 "pyjet/src/FastJet.pyx"
  __pyx_t_4 = __pyx_v_size;

#line 191 "pyjet/src/FastJet.pyx"
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {

#line 191 "pyjet/src/FastJet.pyx"
    __pyx_v_i = __pyx_t_5;

    /* "pyjet/src/FastJet.pyx":193
 *     for i in range(size):
 *         # shift
 *         fourvect = <DTYPE_t*> &array[i * rowbytes]             # <<<<<<<<<<<<<<
 *         # Note the constructor argument order is px, py, pz, E
 *         if ep:
 */

#line 193 "pyjet/src/FastJet.pyx"
    __pyx_v_fourvect = ((__pyx_t_9_libpyjet_DTYPE_t *)(&(__pyx_v_array[(__pyx_v_i * __pyx_v_rowbytes)])));

    /* "pyjet/src/FastJet.pyx":195
 *         fourvect = <DTYPE_t*> &array[i * rowbytes]
 *         # Note the constructor argument order is px, py, pz, E
 *         if ep:             # <<<<<<<<<<<<<<
 *             pseudojet = PseudoJet(fourvect[1], fourvect[2], fourvect[3], fourvect[0])
 *         else:
 */

#line 195 "pyjet/src/FastJet.pyx"
    __pyx_t_6 = (__pyx_v_ep != 0);

#line 195 "pyjet/src/FastJet.pyx"
    if (__pyx_t_6) {

      /* "pyjet/src/FastJet.pyx":196
 *         # Note the constructor argument order is px, py, pz, E
 *         if ep:
 *             pseudojet = PseudoJet(fourvect[1], fourvect[2], fourvect[3], fourvect[0])             # <<<<<<<<<<<<<<
 *         else:
 *             px = fourvect[0] * cos(fourvect[2]) # pt cos(phi)
 */

#line 196 "pyjet/src/FastJet.pyx"
      __pyx_v_pseudojet = fastjet::PseudoJet((__pyx_v_fourvect[1]), (__pyx_v_fourvect[2]), (__pyx_v_fourvect[3]), (__pyx_v_fourvect[0]));

      /* "pyjet/src/FastJet.pyx":195
 *         fourvect = <DTYPE_t*> &array[i * rowbytes]
 *         # Note the constructor argument order is px, py, pz, E
 *         if ep:             # <<<<<<<<<<<<<<
 *             pseudojet = PseudoJet(fourvect[1], fourvect[2], fourvect[3], fourvect[0])
 *         else:
 */

#line 195 "pyjet/src/FastJet.pyx"
      goto __pyx_L5;

#line 195 "pyjet/src/FastJet.pyx"
    }

    /* "pyjet/src/FastJet.pyx":198
 *             pseudojet = PseudoJet(fourvect[1], fourvect[2], fourvect[3], fourvect[0])
 *         else:
 *             px = fourvect[0] * cos(fourvect[2]) # pt cos(phi)             # <<<<<<<<<<<<<<
 *             py = fourvect[0] * sin(fourvect[2]) # pt sin(phi)
 *             pz = fourvect[0] * sinh(fourvect[1]) # pt sinh(eta)
 */

#line 198 "pyjet/src/FastJet.pyx"
    /*else*/ {

#line 198 "pyjet/src/FastJet.pyx"
      __pyx_v_px = ((__pyx_v_fourvect[0]) * cos((__pyx_v_fourvect[2])));

      /* "pyjet/src/FastJet.pyx":199
 *         else:
 *             px = fourvect[0] * cos(fourvect[2]) # pt cos(phi)
 *             py = fourvect[0] * sin(fourvect[2]) # pt sin(phi)             # <<<<<<<<<<<<<<
 *             pz = fourvect[0] * sinh(fourvect[1]) # pt sinh(eta)
 *             E = sqrt(px*px + py*py + pz*pz + fourvect[3] * fourvect[3])
 */

#line 199 "pyjet/src/FastJet.pyx"
      __pyx_v_py = ((__pyx_v_fourvect[0]) * sin((__pyx_v_fourvect[2])));

      /* "pyjet/src/FastJet.pyx":200
 *             px = fourvect[0] * cos(fourvect[2]) # pt cos(phi)
 *             py = fourvect[0] * sin(fourvect[2]) # pt sin(phi)
 *             pz = fourvect[0] * sinh(fourvect[1]) # pt sinh(eta)             # <<<<<<<<<<<<<<
 *             E = sqrt(px*px + py*py + pz*pz + fourvect[3] * fourvect[3])
 *             pseudojet = PseudoJet(px, py, pz, E)
 */

#line 200 "pyjet/src/FastJet.pyx"
      __pyx_v_pz = ((__pyx_v_fourvect[0]) * sinh((__pyx_v_fourvect[1])));

      /* "pyjet/src/FastJet.pyx":201
 *             py = fourvect[0] * sin(fourvect[2]) # pt sin(phi)
 *             pz = fourvect[0] * sinh(fourvect[1]) # pt sinh(eta)
 *             E = sqrt(px*px + py*py + pz*pz + fourvect[3] * fourvect[3])             # <<<<<<<<<<<<<<
 *             pseudojet = PseudoJet(px, py, pz, E)
 *         if handle_userinfo:
 */

#line 201 "pyjet/src/FastJet.pyx"
      __pyx_v_E = sqrt(((((__pyx_v_px * __pyx_v_px) + (__pyx_v_py * __pyx_v_py)) + (__pyx_v_pz * __pyx_v_pz)) + ((__pyx_v_fourvect[3]) * (__pyx_v_fourvect[3]))));

      /* "pyjet/src/FastJet.pyx":202
 *             pz = fourvect[0] * sinh(fourvect[1]) # pt sinh(eta)
 *             E = sqrt(px*px + py*py + pz*pz + fourvect[3] * fourvect[3])
 *             pseudojet = PseudoJet(px, py, pz, E)             # <<<<<<<<<<<<<<
 *         if handle_userinfo:
 *             userinfo_dict = {}
 */

#line 202 "pyjet/src/FastJet.pyx"
      __pyx_v_pseudojet = fastjet::PseudoJet(__pyx_v_px, __pyx_v_py, __pyx_v_pz, __pyx_v_E);

#line 202 "pyjet/src/FastJet.pyx"
    }

#line 202 "pyjet/src/FastJet.pyx"
    __pyx_L5:;

    /* "pyjet/src/FastJet.pyx":203
 *             E = sqrt(px*px + py*py + pz*pz + fourvect[3] * fourvect[3])
 *             pseudojet = PseudoJet(px, py, pz, E)
 *         if handle_userinfo:             # <<<<<<<<<<<<<<
 *             userinfo_dict = {}
 *             for field in fields[4:]:
 */

#line 203 "pyjet/src/FastJet.pyx"
    __pyx_t_6 = (__pyx_v_handle_userinfo != 0);

#line 203 "pyjet/src/FastJet.pyx"
    if (__pyx_t_6) {

      /* "pyjet/src/FastJet.pyx":204
 *             pseudojet = PseudoJet(px, py, pz, E)
 *         if handle_userinfo:
 *             userinfo_dict = {}             # <<<<<<<<<<<<<<
 *             for field in fields[4:]:
 *                 userinfo_dict[field] = vectors[field][i]
 */

#line 204 "pyjet/src/FastJet.pyx"
      __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 204, __pyx_L1_error)

#line 204 "pyjet/src/FastJet.pyx"
      __Pyx_GOTREF(__pyx_t_2);

#line 204 "pyjet/src/FastJet.pyx"
      __Pyx_XDECREF_SET(__pyx_v_userinfo_dict, ((PyObject*)__pyx_t_2));

#line 204 "pyjet/src/FastJet.pyx"
      __pyx_t_2 = 0;

      /* "pyjet/src/FastJet.pyx":205
 *         if handle_userinfo:
 *             userinfo_dict = {}
 *             for field in fields[4:]:             # <<<<<<<<<<<<<<
 *                 userinfo_dict[field] = vectors[field][i]
 *             userinfo = new PseudoJetUserInfo(<PyObject*> userinfo_dict)
 */

#line 205 "pyjet/src/FastJet.pyx"
      __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_fields, 4, 0, NULL, NULL, &__pyx_slice__2, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 205, __pyx_L1_error)

#line 205 "pyjet/src/FastJet.pyx"
      __Pyx_GOTREF(__pyx_t_2);

#line 205 "pyjet/src/FastJet.pyx"
      if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {

#line 205 "pyjet/src/FastJet.pyx"
        __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;

#line 205 "pyjet/src/FastJet.pyx"
        __pyx_t_7 = NULL;

#line 205 "pyjet/src/FastJet.pyx"
      } else {
        __pyx_t_3 = -1; 
#line 205 "pyjet/src/FastJet.pyx"
__pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 205, __pyx_L1_error)

#line 205 "pyjet/src/FastJet.pyx"
        __Pyx_GOTREF(__pyx_t_1);

#line 205 "pyjet/src/FastJet.pyx"
        __pyx_t_7 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 205, __pyx_L1_error)

#line 205 "pyjet/src/FastJet.pyx"
      }

#line 205 "pyjet/src/FastJet.pyx"
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

#line 205 "pyjet/src/FastJet.pyx"
      for (;;) {

#line 205 "pyjet/src/FastJet.pyx"
        if (likely(!__pyx_t_7)) {

#line 205 "pyjet/src/FastJet.pyx"
          if (likely(PyList_CheckExact(__pyx_t_1))) {

#line 205 "pyjet/src/FastJet.pyx"
            if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;

#line 205 "pyjet/src/FastJet.pyx"
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS

#line 205 "pyjet/src/FastJet.pyx"
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 205, __pyx_L1_error)

#line 205 "pyjet/src/FastJet.pyx"
            #else

#line 205 "pyjet/src/FastJet.pyx"
            __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 205, __pyx_L1_error)

#line 205 "pyjet/src/FastJet.pyx"
            __Pyx_GOTREF(__pyx_t_2);

#line 205 "pyjet/src/FastJet.pyx"
            #endif

#line 205 "pyjet/src/FastJet.pyx"
          } else {

#line 205 "pyjet/src/FastJet.pyx"
            if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;

#line 205 "pyjet/src/FastJet.pyx"
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS

#line 205 "pyjet/src/FastJet.pyx"
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 205, __pyx_L1_error)

#line 205 "pyjet/src/FastJet.pyx"
            #else

#line 205 "pyjet/src/FastJet.pyx"
            __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 205, __pyx_L1_error)

#line 205 "pyjet/src/FastJet.pyx"
            __Pyx_GOTREF(__pyx_t_2);

#line 205 "pyjet/src/FastJet.pyx"
            #endif

#line 205 "pyjet/src/FastJet.pyx"
          }
        } else 
#line 205 "pyjet/src/FastJet.pyx"
{

#line 205 "pyjet/src/FastJet.pyx"
          __pyx_t_2 = __pyx_t_7(__pyx_t_1);

#line 205 "pyjet/src/FastJet.pyx"
          if (unlikely(!__pyx_t_2)) {

#line 205 "pyjet/src/FastJet.pyx"
            PyObject* exc_type = PyErr_Occurred();

#line 205 "pyjet/src/FastJet.pyx"
            if (exc_type) {

#line 205 "pyjet/src/FastJet.pyx"
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();

#line 205 "pyjet/src/FastJet.pyx"
              else __PYX_ERR(0, 205, __pyx_L1_error)

#line 205 "pyjet/src/FastJet.pyx"
            }

#line 205 "pyjet/src/FastJet.pyx"
            break;

#line 205 "pyjet/src/FastJet.pyx"
          }

#line 205 "pyjet/src/FastJet.pyx"
          __Pyx_GOTREF(__pyx_t_2);

#line 205 "pyjet/src/FastJet.pyx"
        }

#line 205 "pyjet/src/FastJet.pyx"
        __Pyx_XDECREF_SET(__pyx_v_field, __pyx_t_2);

#line 205 "pyjet/src/FastJet.pyx"
        __pyx_t_2 = 0;

        /* "pyjet/src/FastJet.pyx":206
 *             userinfo_dict = {}
 *             for field in fields[4:]:
 *                 userinfo_dict[field] = vectors[field][i]             # <<<<<<<<<<<<<<
 *             userinfo = new PseudoJetUserInfo(<PyObject*> userinfo_dict)
 *             pseudojet.set_user_info(userinfo)
 */

#line 206 "pyjet/src/FastJet.pyx"
        __pyx_t_2 = PyObject_GetItem(((PyObject *)__pyx_v_vectors), __pyx_v_field); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 206, __pyx_L1_error)

#line 206 "pyjet/src/FastJet.pyx"
        __Pyx_GOTREF(__pyx_t_2);

#line 206 "pyjet/src/FastJet.pyx"
        __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_2, __pyx_v_i, unsigned int, 0, __Pyx_PyInt_From_unsigned_int, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 206, __pyx_L1_error)

#line 206 "pyjet/src/FastJet.pyx"
        __Pyx_GOTREF(__pyx_t_8);

#line 206 "pyjet/src/FastJet.pyx"
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

#line 206 "pyjet/src/FastJet.pyx"
        if (unlikely(PyDict_SetItem(__pyx_v_userinfo_dict, __pyx_v_field, __pyx_t_8) < 0)) __PYX_ERR(0, 206, __pyx_L1_error)

#line 206 "pyjet/src/FastJet.pyx"
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "pyjet/src/FastJet.pyx":205
 *         if handle_userinfo:
 *             userinfo_dict = {}
 *             for field in fields[4:]:             # <<<<<<<<<<<<<<
 *                 userinfo_dict[field] = vectors[field][i]
 *             userinfo = new PseudoJetUserInfo(<PyObject*> userinfo_dict)
 */

#line 205 "pyjet/src/FastJet.pyx"
      }

#line 205 "pyjet/src/FastJet.pyx"
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "pyjet/src/FastJet.pyx":207
 *             for field in fields[4:]:
 *                 userinfo_dict[field] = vectors[field][i]
 *             userinfo = new PseudoJetUserInfo(<PyObject*> userinfo_dict)             # <<<<<<<<<<<<<<
 *             pseudojet.set_user_info(userinfo)
 *         output.push_back(pseudojet)
 */

#line 207 "pyjet/src/FastJet.pyx"
      __pyx_v_userinfo = new __pyx_t_9_libpyjet_PseudoJetUserInfo(((PyObject *)__pyx_v_userinfo_dict));

      /* "pyjet/src/FastJet.pyx":208
 *                 userinfo_dict[field] = vectors[field][i]
 *             userinfo = new PseudoJetUserInfo(<PyObject*> userinfo_dict)
 *             pseudojet.set_user_info(userinfo)             # <<<<<<<<<<<<<<
 *         output.push_back(pseudojet)
 * 
 */

#line 208 "pyjet/src/FastJet.pyx"
      __pyx_v_pseudojet.set_user_info(__pyx_v_userinfo);

      /* "pyjet/src/FastJet.pyx":203
 *             E = sqrt(px*px + py*py + pz*pz + fourvect[3] * fourvect[3])
 *             pseudojet = PseudoJet(px, py, pz, E)
 *         if handle_userinfo:             # <<<<<<<<<<<<<<
 *             userinfo_dict = {}
 *             for field in fields[4:]:
 */

#line 203 "pyjet/src/FastJet.pyx"
    }

    /* "pyjet/src/FastJet.pyx":209
 *             userinfo = new PseudoJetUserInfo(<PyObject*> userinfo_dict)
 *             pseudojet.set_user_info(userinfo)
 *         output.push_back(pseudojet)             # <<<<<<<<<<<<<<
 * 
 * 
 */

#line 209 "pyjet/src/FastJet.pyx"
    try {

#line 209 "pyjet/src/FastJet.pyx"
      __pyx_v_output.push_back(__pyx_v_pseudojet);

#line 209 "pyjet/src/FastJet.pyx"
    } catch(...) {

#line 209 "pyjet/src/FastJet.pyx"
      __Pyx_CppExn2PyErr();

#line 209 "pyjet/src/FastJet.pyx"
      __PYX_ERR(0, 209, __pyx_L1_error)

#line 209 "pyjet/src/FastJet.pyx"
    }

#line 209 "pyjet/src/FastJet.pyx"
  }

  /* "pyjet/src/FastJet.pyx":169
 * 
 * 
 * cdef void array_to_pseudojets(np.ndarray vectors, vector[PseudoJet]& output, bool ep):             # <<<<<<<<<<<<<<
 *     """
 *     The dtype ``vectors`` array can be either::
 */

#line 169 "pyjet/src/FastJet.pyx"


#line 169 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 169 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

#line 169 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 169 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 169 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_2);

#line 169 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_8);

#line 169 "pyjet/src/FastJet.pyx"
  __Pyx_WriteUnraisable("_libpyjet.array_to_pseudojets", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);

#line 169 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 169 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_v_fields);

#line 169 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_v_userinfo_dict);

#line 169 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_v_field);

#line 169 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 169 "pyjet/src/FastJet.pyx"
}

/* "pyjet/src/FastJet.pyx":214
 * @cython.boundscheck(False)
 * @cython.wraparound(False)
 * def cluster(np.ndarray vectors, float R, int p, bool ep=False):             # <<<<<<<<<<<<<<
 *     """
 *     Perform jet clustering on a numpy array of 4-vectors in (pT, eta, phi,
 */

#line 214 "pyjet/src/FastJet.pyx"


#line 214 "pyjet/src/FastJet.pyx"
/* Python wrapper */

#line 214 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_1cluster(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/

#line 214 "pyjet/src/FastJet.pyx"
static char __pyx_doc_9_libpyjet_cluster[] = "\n    Perform jet clustering on a numpy array of 4-vectors in (pT, eta, phi,\n    mass) representation, otherwise (E, px, py, pz) representation if ep=True\n\n    Parameters\n    ----------\n\n    vectors: np.ndarray\n        Array of 4-vectors as (pT, eta, phi, mass) or (E, px, py, pz) if ep=True\n    R : float\n        Clustering size parameter\n    p : int\n        Generalized kT clustering parameter (p=1 for kT, p=-1 for anti-kT, p=0 for C/A)\n\n    Returns\n    -------\n\n    sequence : PyClusterSequence\n        A wrapped ClusterSequence.\n\n    ";
static PyMethodDef __pyx_mdef_9_libpyjet_1cluster = 
#line 214 "pyjet/src/FastJet.pyx"
{"cluster", (PyCFunction)__pyx_pw_9_libpyjet_1cluster, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9_libpyjet_cluster};

#line 214 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pw_9_libpyjet_1cluster(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_vectors = 0
#line 214 "pyjet/src/FastJet.pyx"
;
  float __pyx_v_R
#line 214 "pyjet/src/FastJet.pyx"
;
  int __pyx_v_p
#line 214 "pyjet/src/FastJet.pyx"
;
  bool __pyx_v_ep
#line 214 "pyjet/src/FastJet.pyx"
;

#line 214 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = 0;

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("cluster (wrapper)", 0);

#line 214 "pyjet/src/FastJet.pyx"
  {

#line 214 "pyjet/src/FastJet.pyx"
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_vectors,&__pyx_n_s_R,&__pyx_n_s_p,&__pyx_n_s_ep,0};

#line 214 "pyjet/src/FastJet.pyx"
    PyObject* values[4] = {0,0,0,0};

#line 214 "pyjet/src/FastJet.pyx"
    if (unlikely(__pyx_kwds)) {

#line 214 "pyjet/src/FastJet.pyx"
      Py_ssize_t kw_args;

#line 214 "pyjet/src/FastJet.pyx"
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);

#line 214 "pyjet/src/FastJet.pyx"
      switch (pos_args) {
        case  4: 
#line 214 "pyjet/src/FastJet.pyx"
values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: 
#line 214 "pyjet/src/FastJet.pyx"
values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: 
#line 214 "pyjet/src/FastJet.pyx"
values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: 
#line 214 "pyjet/src/FastJet.pyx"
values[0] = PyTuple_GET_ITEM(__pyx_args, 0);

#line 214 "pyjet/src/FastJet.pyx"
        case  0: break;
        default: 
#line 214 "pyjet/src/FastJet.pyx"
goto __pyx_L5_argtuple_error;

#line 214 "pyjet/src/FastJet.pyx"
      }

#line 214 "pyjet/src/FastJet.pyx"
      kw_args = PyDict_Size(__pyx_kwds);

#line 214 "pyjet/src/FastJet.pyx"
      switch (pos_args) {

#line 214 "pyjet/src/FastJet.pyx"
        case  0:

#line 214 "pyjet/src/FastJet.pyx"
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vectors)) != 0)) kw_args--;
        else 
#line 214 "pyjet/src/FastJet.pyx"
goto __pyx_L5_argtuple_error;

#line 214 "pyjet/src/FastJet.pyx"
        case  1:

#line 214 "pyjet/src/FastJet.pyx"
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_R)) != 0)) kw_args--;

#line 214 "pyjet/src/FastJet.pyx"
        else {
          __Pyx_RaiseArgtupleInvalid("cluster", 0, 3, 4, 1); 
#line 214 "pyjet/src/FastJet.pyx"
__PYX_ERR(0, 214, __pyx_L3_error)

#line 214 "pyjet/src/FastJet.pyx"
        }

#line 214 "pyjet/src/FastJet.pyx"
        case  2:

#line 214 "pyjet/src/FastJet.pyx"
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;

#line 214 "pyjet/src/FastJet.pyx"
        else {
          __Pyx_RaiseArgtupleInvalid("cluster", 0, 3, 4, 2); 
#line 214 "pyjet/src/FastJet.pyx"
__PYX_ERR(0, 214, __pyx_L3_error)

#line 214 "pyjet/src/FastJet.pyx"
        }

#line 214 "pyjet/src/FastJet.pyx"
        case  3:

#line 214 "pyjet/src/FastJet.pyx"
        if (kw_args > 0) {

#line 214 "pyjet/src/FastJet.pyx"
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ep);

#line 214 "pyjet/src/FastJet.pyx"
          if (value) { values[3] = value; kw_args--; }

#line 214 "pyjet/src/FastJet.pyx"
        }

#line 214 "pyjet/src/FastJet.pyx"
      }

#line 214 "pyjet/src/FastJet.pyx"
      if (unlikely(kw_args > 0)) {

#line 214 "pyjet/src/FastJet.pyx"
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cluster") < 0)) __PYX_ERR(0, 214, __pyx_L3_error)

#line 214 "pyjet/src/FastJet.pyx"
      }

#line 214 "pyjet/src/FastJet.pyx"
    } else {

#line 214 "pyjet/src/FastJet.pyx"
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: 
#line 214 "pyjet/src/FastJet.pyx"
values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: 
#line 214 "pyjet/src/FastJet.pyx"
values[2] = PyTuple_GET_ITEM(__pyx_args, 2);

#line 214 "pyjet/src/FastJet.pyx"
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);

#line 214 "pyjet/src/FastJet.pyx"
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);

#line 214 "pyjet/src/FastJet.pyx"
        break;
        default: 
#line 214 "pyjet/src/FastJet.pyx"
goto __pyx_L5_argtuple_error;

#line 214 "pyjet/src/FastJet.pyx"
      }

#line 214 "pyjet/src/FastJet.pyx"
    }

#line 214 "pyjet/src/FastJet.pyx"
    __pyx_v_vectors = ((PyArrayObject *)values[0]);

#line 214 "pyjet/src/FastJet.pyx"
    __pyx_v_R = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_R == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 214, __pyx_L3_error)

#line 214 "pyjet/src/FastJet.pyx"
    __pyx_v_p = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_p == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 214, __pyx_L3_error)

#line 214 "pyjet/src/FastJet.pyx"
    if (values[3]) {

#line 214 "pyjet/src/FastJet.pyx"
      __pyx_v_ep = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_ep == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 214, __pyx_L3_error)

#line 214 "pyjet/src/FastJet.pyx"
    } else {

#line 214 "pyjet/src/FastJet.pyx"
      __pyx_v_ep = ((bool)0);

#line 214 "pyjet/src/FastJet.pyx"
    }

#line 214 "pyjet/src/FastJet.pyx"
  }

#line 214 "pyjet/src/FastJet.pyx"
  goto __pyx_L4_argument_unpacking_done;

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cluster", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); 
#line 214 "pyjet/src/FastJet.pyx"
__PYX_ERR(0, 214, __pyx_L3_error)

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_L3_error:;

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.cluster", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 214 "pyjet/src/FastJet.pyx"
  return NULL;

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_L4_argument_unpacking_done:;

#line 214 "pyjet/src/FastJet.pyx"
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vectors), __pyx_ptype_5numpy_ndarray, 1, "vectors", 0))) __PYX_ERR(0, 214, __pyx_L1_error)
  __pyx_r = 
#line 214 "pyjet/src/FastJet.pyx"
__pyx_pf_9_libpyjet_cluster(__pyx_self, __pyx_v_vectors, __pyx_v_R, __pyx_v_p, __pyx_v_ep);

#line 214 "pyjet/src/FastJet.pyx"


#line 214 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 214 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 214 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 214 "pyjet/src/FastJet.pyx"
}

#line 214 "pyjet/src/FastJet.pyx"


#line 214 "pyjet/src/FastJet.pyx"
static PyObject *__pyx_pf_9_libpyjet_cluster(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_vectors, float __pyx_v_R, int __pyx_v_p, bool __pyx_v_ep) {
  std::vector<fastjet::PseudoJet>  __pyx_v_pseudojets
#line 214 "pyjet/src/FastJet.pyx"
;
  fastjet::ClusterSequence *__pyx_v_sequence
#line 214 "pyjet/src/FastJet.pyx"
;

#line 214 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_r = NULL;

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyDeclarations

#line 214 "pyjet/src/FastJet.pyx"
  PyObject *__pyx_t_1 = NULL;

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannySetupContext("cluster", 0);

  /* "pyjet/src/FastJet.pyx":240
 * 
 *     # convert numpy array into vector of pseudojets
 *     array_to_pseudojets(vectors, pseudojets, ep)             # <<<<<<<<<<<<<<
 * 
 *     # cluster and return PyClusterSequence
 */

#line 240 "pyjet/src/FastJet.pyx"
  __pyx_f_9_libpyjet_array_to_pseudojets(__pyx_v_vectors, __pyx_v_pseudojets, __pyx_v_ep);

  /* "pyjet/src/FastJet.pyx":243
 * 
 *     # cluster and return PyClusterSequence
 *     sequence = cluster_genkt(pseudojets, R, p)             # <<<<<<<<<<<<<<
 *     return PyClusterSequence.wrap(sequence)
 */

#line 243 "pyjet/src/FastJet.pyx"
  __pyx_v_sequence = cluster_genkt(__pyx_v_pseudojets, __pyx_v_R, __pyx_v_p);

  /* "pyjet/src/FastJet.pyx":244
 *     # cluster and return PyClusterSequence
 *     sequence = cluster_genkt(pseudojets, R, p)
 *     return PyClusterSequence.wrap(sequence)             # <<<<<<<<<<<<<<
 */

#line 244 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_r);

#line 244 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = ((PyObject *)__pyx_f_9_libpyjet_17PyClusterSequence_wrap(__pyx_v_sequence)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 244, __pyx_L1_error)

#line 244 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 244 "pyjet/src/FastJet.pyx"
  __pyx_r = __pyx_t_1;

#line 244 "pyjet/src/FastJet.pyx"
  __pyx_t_1 = 0;

#line 244 "pyjet/src/FastJet.pyx"
  goto __pyx_L0;

  /* "pyjet/src/FastJet.pyx":214
 * @cython.boundscheck(False)
 * @cython.wraparound(False)
 * def cluster(np.ndarray vectors, float R, int p, bool ep=False):             # <<<<<<<<<<<<<<
 *     """
 *     Perform jet clustering on a numpy array of 4-vectors in (pT, eta, phi,
 */

#line 214 "pyjet/src/FastJet.pyx"


#line 214 "pyjet/src/FastJet.pyx"
  /* function exit code */

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_XDECREF(__pyx_t_1);

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_AddTraceback("_libpyjet.cluster", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_r = NULL;

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_L0:;

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_XGIVEREF(__pyx_r);

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 214 "pyjet/src/FastJet.pyx"
  return __pyx_r;

#line 214 "pyjet/src/FastJet.pyx"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
/* Python wrapper */

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_r;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = 
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
__pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  int __pyx_v_i
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  int __pyx_v_ndim
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  int __pyx_v_endian_detector
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  int __pyx_v_little_endian
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  int __pyx_v_t
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  char *__pyx_v_f
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  PyArray_Descr *__pyx_v_descr = 0
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  int __pyx_v_offset
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  int __pyx_v_hasfields
#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_r;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_1;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_2;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_3 = NULL;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_4;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_5;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_6 = NULL;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  char *__pyx_t_7;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("__getbuffer__", 0);

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_v_info != NULL) {

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GIVEREF(__pyx_v_info->obj);

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":203
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */

#line 203 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);

#line 203 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_1) {

#line 203 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_r = 0;

#line 203 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L0;

#line 203 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":206
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */

#line 206 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_endian_detector = 1;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":207
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */

#line 207 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":209
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */

#line 209 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */

#line 211 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);

#line 211 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_1) {

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":212
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */

#line 212 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_copy_shape = 1;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */

#line 211 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L4;

#line 211 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":214
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */

#line 214 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /*else*/ {

#line 214 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_copy_shape = 0;

#line 214 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 214 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L4:;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */

#line 216 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);

#line 216 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_2) {

#line 216 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  } else {

#line 216 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_1 = __pyx_t_2;

#line 216 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L6_bool_binop_done;

#line 216 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":217
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */

#line 217 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);

#line 217 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = __pyx_t_2;

#line 217 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L6_bool_binop_done:;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */

#line 216 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_1) {

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */

#line 218 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 218, __pyx_L1_error)

#line 218 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GOTREF(__pyx_t_3);

#line 218 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);

#line 218 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 218 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __PYX_ERR(1, 218, __pyx_L1_error)

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */

#line 216 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */

#line 220 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);

#line 220 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_2) {

#line 220 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  } else {

#line 220 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_1 = __pyx_t_2;

#line 220 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L9_bool_binop_done;

#line 220 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":221
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */

#line 221 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);

#line 221 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = __pyx_t_2;

#line 221 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L9_bool_binop_done:;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */

#line 220 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_1) {

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */

#line 222 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 222, __pyx_L1_error)

#line 222 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GOTREF(__pyx_t_3);

#line 222 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);

#line 222 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 222 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __PYX_ERR(1, 222, __pyx_L1_error)

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */

#line 220 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":224
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */

#line 224 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":225
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */

#line 225 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */

#line 226 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = (__pyx_v_copy_shape != 0);

#line 226 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_1) {

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":229
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */

#line 229 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":230
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */

#line 230 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":231
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */

#line 231 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_4 = __pyx_v_ndim;

#line 231 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {

#line 231 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_i = __pyx_t_5;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":232
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */

#line 232 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":233
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */

#line 233 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);

#line 233 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */

#line 226 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L11;

#line 226 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":235
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */

#line 235 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /*else*/ {

#line 235 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":236
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */

#line 236 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));

#line 236 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 236 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L11:;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":237
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */

#line 237 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_info->suboffsets = NULL;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":238
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */

#line 238 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":239
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */

#line 239 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":242
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef int offset
 */

#line 242 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_f = NULL;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":243
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef int offset
 * 
 */

#line 243 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);

#line 243 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_INCREF(__pyx_t_3);

#line 243 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);

#line 243 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_3 = 0;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":246
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */

#line 246 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_2) {

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  } else {

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_1 = __pyx_t_2;

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L15_bool_binop_done;

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_2 = ((!(__pyx_v_copy_shape != 0)) != 0);

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = __pyx_t_2;

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L15_bool_binop_done:;

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_1) {

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":250
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */

#line 250 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_INCREF(Py_None);

#line 250 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GIVEREF(Py_None);

#line 250 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GOTREF(__pyx_v_info->obj);

#line 250 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_DECREF(__pyx_v_info->obj);

#line 250 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_info->obj = Py_None;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L14;

#line 248 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":253
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */

#line 253 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /*else*/ {

#line 253 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_INCREF(((PyObject *)__pyx_v_self));

#line 253 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));

#line 253 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GOTREF(__pyx_v_info->obj);

#line 253 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_DECREF(__pyx_v_info->obj);

#line 253 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);

#line 253 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 253 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L14:;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */

#line 255 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);

#line 255 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_1) {

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":256
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */

#line 256 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_4 = __pyx_v_descr->type_num;

#line 256 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_t = __pyx_t_4;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (!__pyx_t_2) {

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      goto __pyx_L20_next_or;

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    } else {

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_2 = (__pyx_v_little_endian != 0);

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (!__pyx_t_2) {

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    } else {

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_1 = __pyx_t_2;

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      goto __pyx_L19_bool_binop_done;

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L20_next_or:;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":258
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */

#line 258 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);

#line 258 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_t_2) {

#line 258 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    } else {

#line 258 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_1 = __pyx_t_2;

#line 258 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      goto __pyx_L19_bool_binop_done;

#line 258 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 258 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);

#line 258 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_1 = __pyx_t_2;

#line 258 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L19_bool_binop_done:;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_t_1) {

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */

#line 259 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 259, __pyx_L1_error)

#line 259 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 259 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);

#line 259 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 259 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __PYX_ERR(1, 259, __pyx_L1_error)

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */

#line 257 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":260
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */

#line 260 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    switch (__pyx_v_t) {

#line 260 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_BYTE:

#line 260 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"b");

#line 260 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":261
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */

#line 261 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_UBYTE:

#line 261 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"B");

#line 261 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":262
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */

#line 262 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_SHORT:

#line 262 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"h");

#line 262 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":263
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */

#line 263 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_USHORT:

#line 263 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"H");

#line 263 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":264
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */

#line 264 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_INT:

#line 264 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"i");

#line 264 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":265
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */

#line 265 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_UINT:

#line 265 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"I");

#line 265 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":266
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */

#line 266 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_LONG:

#line 266 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"l");

#line 266 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":267
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */

#line 267 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_ULONG:

#line 267 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"L");

#line 267 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":268
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */

#line 268 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_LONGLONG:

#line 268 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"q");

#line 268 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":269
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */

#line 269 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_ULONGLONG:

#line 269 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"Q");

#line 269 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":270
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */

#line 270 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_FLOAT:

#line 270 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"f");

#line 270 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":271
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */

#line 271 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_DOUBLE:

#line 271 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"d");

#line 271 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":272
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */

#line 272 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_LONGDOUBLE:

#line 272 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"g");

#line 272 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":273
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */

#line 273 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_CFLOAT:

#line 273 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"Zf");

#line 273 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */

#line 274 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_CDOUBLE:

#line 274 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"Zd");

#line 274 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":275
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */

#line 275 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_CLONGDOUBLE:

#line 275 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"Zg");

#line 275 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":276
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */

#line 276 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      case NPY_OBJECT:

#line 276 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = ((char *)"O");

#line 276 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

#line 276 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      default:

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":278
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 278, __pyx_L1_error)

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 278, __pyx_L1_error)

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_6);

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 278, __pyx_L1_error)

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GIVEREF(__pyx_t_6);

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = 0;

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 278, __pyx_L1_error)

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_6);

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __PYX_ERR(1, 278, __pyx_L1_error)

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      break;

#line 278 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":279
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */

#line 279 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_info->format = __pyx_v_f;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":280
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */

#line 280 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_r = 0;

#line 280 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L0;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */

#line 255 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":282
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */

#line 282 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /*else*/ {

#line 282 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_info->format = ((char *)malloc(0xFF));

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":283
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */

#line 283 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    (__pyx_v_info->format[0]) = '^';

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":284
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */

#line 284 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_offset = 0;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":285
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */

#line 285 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == NULL)) __PYX_ERR(1, 285, __pyx_L1_error)

#line 285 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_f = __pyx_t_7;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":288
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */

#line 288 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    (__pyx_v_f[0]) = '\x00';

#line 288 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = 0;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_3);

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_6);

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = -1;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GOTREF(__pyx_v_info->obj);

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L2;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GOTREF(Py_None);

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L2:;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 197 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
/* Python wrapper */

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_1;

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */

#line 291 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);

#line 291 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_1) {

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":292
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */

#line 292 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    free(__pyx_v_info->format);

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */

#line 291 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */

#line 293 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);

#line 293 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_1) {

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":294
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */

#line 294 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    free(__pyx_v_info->strides);

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */

#line 293 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 290 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_r = NULL;

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_1 = NULL;

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":771
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */

#line 771 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_r);

#line 771 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 771, __pyx_L1_error)

#line 771 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_t_1);

#line 771 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = __pyx_t_1;

#line 771 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = 0;

#line 771 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_1);

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = 0;

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XGIVEREF(__pyx_r);

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 770 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_r = NULL;

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_1 = NULL;

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":774
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */

#line 774 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_r);

#line 774 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 774, __pyx_L1_error)

#line 774 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_t_1);

#line 774 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = __pyx_t_1;

#line 774 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = 0;

#line 774 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_1);

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = 0;

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XGIVEREF(__pyx_r);

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 773 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_r = NULL;

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_1 = NULL;

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":777
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */

#line 777 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_r);

#line 777 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 777, __pyx_L1_error)

#line 777 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_t_1);

#line 777 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = __pyx_t_1;

#line 777 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = 0;

#line 777 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_1);

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = 0;

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XGIVEREF(__pyx_r);

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 776 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_r = NULL;

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_1 = NULL;

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":780
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */

#line 780 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_r);

#line 780 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 780, __pyx_L1_error)

#line 780 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_t_1);

#line 780 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = __pyx_t_1;

#line 780 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = 0;

#line 780 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_1);

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = 0;

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XGIVEREF(__pyx_r);

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 779 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_r = NULL;

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_1 = NULL;

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":783
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */

#line 783 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_r);

#line 783 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 783, __pyx_L1_error)

#line 783 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_t_1);

#line 783 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = __pyx_t_1;

#line 783 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = 0;

#line 783 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_1);

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = 0;

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XGIVEREF(__pyx_r);

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 782 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0
#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  int __pyx_v_endian_detector
#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  int __pyx_v_little_endian
#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  PyObject *__pyx_v_fields = 0
#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  PyObject *__pyx_v_childname = NULL
#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  PyObject *__pyx_v_new_offset = NULL
#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;
  PyObject *__pyx_v_t = NULL
#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  char *__pyx_r;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_1 = NULL;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  Py_ssize_t __pyx_t_2;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_3 = NULL;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_4 = NULL;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_5;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_6;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_7;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  long __pyx_t_8;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  char *__pyx_t_9;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":790
 * 
 *     cdef dtype child
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */

#line 790 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_endian_detector = 1;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":791
 *     cdef dtype child
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */

#line 791 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (unlikely(__pyx_v_descr->names == Py_None)) {

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __PYX_ERR(1, 794, __pyx_L1_error)

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  for (;;) {

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 794, __pyx_L1_error)

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    #else

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 794, __pyx_L1_error)

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GOTREF(__pyx_t_3);

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    #endif

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_3 = 0;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":795
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */

#line 795 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (unlikely(__pyx_v_descr->fields == Py_None)) {

#line 795 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");

#line 795 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __PYX_ERR(1, 795, __pyx_L1_error)

#line 795 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 795 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 795, __pyx_L1_error)

#line 795 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GOTREF(__pyx_t_3);

#line 795 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(1, 795, __pyx_L1_error)

#line 795 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));

#line 795 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_3 = 0;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":796
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (likely(__pyx_v_fields != Py_None)) {

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      PyObject* sequence = __pyx_v_fields;

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      #if !CYTHON_COMPILING_IN_PYPY

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      Py_ssize_t size = Py_SIZE(sequence);

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      #else

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      Py_ssize_t size = PySequence_Size(sequence);

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      #endif

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (unlikely(size != 2)) {

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __PYX_ERR(1, 796, __pyx_L1_error)

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_INCREF(__pyx_t_3);

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_INCREF(__pyx_t_4);

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      #else

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 796, __pyx_L1_error)

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 796, __pyx_L1_error)

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      #endif

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    } else {

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(1, 796, __pyx_L1_error)

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) __PYX_ERR(1, 796, __pyx_L1_error)

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_3 = 0;

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);

#line 796 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_4 = 0;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */

#line 798 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 798, __pyx_L1_error)

#line 798 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GOTREF(__pyx_t_4);

#line 798 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 798, __pyx_L1_error)

#line 798 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_GOTREF(__pyx_t_3);

#line 798 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 798 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 798, __pyx_L1_error)

#line 798 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 798 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);

#line 798 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_t_6) {

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */

#line 799 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 799, __pyx_L1_error)

#line 799 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 799 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);

#line 799 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 799 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __PYX_ERR(1, 799, __pyx_L1_error)

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */

#line 798 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (!__pyx_t_7) {

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      goto __pyx_L8_next_or;

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    } else {

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_7 = (__pyx_v_little_endian != 0);

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (!__pyx_t_7) {

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    } else {

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __pyx_t_7;

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      goto __pyx_L7_bool_binop_done;

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L8_next_or:;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":802
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */

#line 802 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);

#line 802 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_t_7) {

#line 802 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    } else {

#line 802 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __pyx_t_7;

#line 802 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      goto __pyx_L7_bool_binop_done;

#line 802 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 802 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);

#line 802 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_6 = __pyx_t_7;

#line 802 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L7_bool_binop_done:;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_t_6) {

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */

#line 803 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 803, __pyx_L1_error)

#line 803 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 803 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);

#line 803 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 803 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __PYX_ERR(1, 803, __pyx_L1_error)

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */

#line 801 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":813
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */

#line 813 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    while (1) {

#line 813 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 813, __pyx_L1_error)

#line 813 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 813 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 813, __pyx_L1_error)

#line 813 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 813 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 813, __pyx_L1_error)

#line 813 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 813 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (!__pyx_t_6) break;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":814
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */

#line 814 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      (__pyx_v_f[0]) = 0x78;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":815
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */

#line 815 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":816
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */

#line 816 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_8 = 0;

#line 816 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);

#line 816 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":818
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */

#line 818 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_8 = 0;

#line 818 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */

#line 820 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);

#line 820 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_t_6) {

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":821
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */

#line 821 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 821, __pyx_L1_error)

#line 821 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 821 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);

#line 821 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = 0;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */

#line 822 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);

#line 822 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

        /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */

#line 823 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 823, __pyx_L1_error)

#line 823 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __Pyx_GOTREF(__pyx_t_4);

#line 823 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);

#line 823 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 823 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __PYX_ERR(1, 823, __pyx_L1_error)

        /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */

#line 822 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":826
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */

#line 826 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 826, __pyx_L1_error)

#line 826 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 826 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 826, __pyx_L1_error)

#line 826 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 826 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 826, __pyx_L1_error)

#line 826 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 826 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 826 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 98;

#line 826 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 826 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":827
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */

#line 827 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 827, __pyx_L1_error)

#line 827 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 827 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 827, __pyx_L1_error)

#line 827 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 827 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 827, __pyx_L1_error)

#line 827 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 827 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 827 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 66;

#line 827 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 827 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":828
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */

#line 828 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 828, __pyx_L1_error)

#line 828 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 828 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 828, __pyx_L1_error)

#line 828 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 828 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 828, __pyx_L1_error)

#line 828 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 828 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 828 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 0x68;

#line 828 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 828 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":829
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */

#line 829 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 829, __pyx_L1_error)

#line 829 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 829 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 829, __pyx_L1_error)

#line 829 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 829 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 829, __pyx_L1_error)

#line 829 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 829 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 829 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 72;

#line 829 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 829 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":830
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */

#line 830 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 830, __pyx_L1_error)

#line 830 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 830 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 830, __pyx_L1_error)

#line 830 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 830 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 830, __pyx_L1_error)

#line 830 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 830 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 830 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 0x69;

#line 830 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 830 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":831
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */

#line 831 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 831, __pyx_L1_error)

#line 831 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 831 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 831, __pyx_L1_error)

#line 831 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 831 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 831, __pyx_L1_error)

#line 831 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 831 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 831 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 73;

#line 831 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 831 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":832
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */

#line 832 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 832, __pyx_L1_error)

#line 832 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 832 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 832, __pyx_L1_error)

#line 832 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 832 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 832, __pyx_L1_error)

#line 832 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 832 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 832 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 0x6C;

#line 832 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 832 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":833
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */

#line 833 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 833, __pyx_L1_error)

#line 833 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 833 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 833, __pyx_L1_error)

#line 833 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 833 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 833, __pyx_L1_error)

#line 833 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 833 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 833 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 76;

#line 833 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 833 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":834
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */

#line 834 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 834, __pyx_L1_error)

#line 834 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 834 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 834, __pyx_L1_error)

#line 834 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 834 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 834, __pyx_L1_error)

#line 834 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 834 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 834 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 0x71;

#line 834 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 834 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":835
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */

#line 835 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 835, __pyx_L1_error)

#line 835 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 835 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 835, __pyx_L1_error)

#line 835 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 835 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 835, __pyx_L1_error)

#line 835 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 835 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 835 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 81;

#line 835 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 835 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":836
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */

#line 836 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 836, __pyx_L1_error)

#line 836 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 836 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 836, __pyx_L1_error)

#line 836 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 836 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 836, __pyx_L1_error)

#line 836 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 836 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 836 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 0x66;

#line 836 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 836 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":837
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */

#line 837 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 837, __pyx_L1_error)

#line 837 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 837 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 837, __pyx_L1_error)

#line 837 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 837 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 837, __pyx_L1_error)

#line 837 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 837 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 837 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 0x64;

#line 837 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 837 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":838
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */

#line 838 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 838, __pyx_L1_error)

#line 838 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 838 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 838, __pyx_L1_error)

#line 838 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 838 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 838, __pyx_L1_error)

#line 838 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 838 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 838 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 0x67;

#line 838 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 838 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":839
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 839, __pyx_L1_error)

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 839, __pyx_L1_error)

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 839, __pyx_L1_error)

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 90;

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[1]) = 0x66;

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __pyx_v_f = (__pyx_v_f + 1);

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 839 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":840
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 840, __pyx_L1_error)

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 840, __pyx_L1_error)

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 840, __pyx_L1_error)

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 90;

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[1]) = 0x64;

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __pyx_v_f = (__pyx_v_f + 1);

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 840 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":841
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 841, __pyx_L1_error)

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_3);

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 841, __pyx_L1_error)

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 841, __pyx_L1_error)

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 90;

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[1]) = 0x67;

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __pyx_v_f = (__pyx_v_f + 1);

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 841 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":842
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */

#line 842 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 842, __pyx_L1_error)

#line 842 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_4);

#line 842 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 842, __pyx_L1_error)

#line 842 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 842 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(1, 842, __pyx_L1_error)

#line 842 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 842 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__pyx_t_6) {

#line 842 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        (__pyx_v_f[0]) = 79;

#line 842 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        goto __pyx_L15;

#line 842 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":844
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      /*else*/ {

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 844, __pyx_L1_error)

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __Pyx_GOTREF(__pyx_t_3);

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 844, __pyx_L1_error)

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __Pyx_GOTREF(__pyx_t_4);

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __Pyx_GIVEREF(__pyx_t_3);

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __pyx_t_3 = 0;

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 844, __pyx_L1_error)

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __Pyx_GOTREF(__pyx_t_3);

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
        __PYX_ERR(1, 844, __pyx_L1_error)

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      }

#line 844 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_L15:;

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":845
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */

#line 845 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */

#line 820 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      goto __pyx_L13;

#line 820 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":849
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */

#line 849 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    /*else*/ {

#line 849 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == NULL)) __PYX_ERR(1, 849, __pyx_L1_error)

#line 849 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_v_f = __pyx_t_9;

#line 849 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 849 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L13:;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 794 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":850
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */

#line 850 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = __pyx_v_f;

#line 850 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_1);

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_3);

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_4);

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = NULL;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF((PyObject *)__pyx_v_child);

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_v_fields);

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_v_childname);

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_v_new_offset);

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_v_t);

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 785 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr
#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
;

#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_1;

#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_2;

#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */

#line 968 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = (__pyx_v_base == Py_None);

#line 968 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_2 = (__pyx_t_1 != 0);

#line 968 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_2) {

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":969
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */

#line 969 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_baseptr = NULL;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */

#line 968 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L3;

#line 968 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":971
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */

#line 971 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /*else*/ {

#line 971 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    Py_INCREF(__pyx_v_base);

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":972
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */

#line 972 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);

#line 972 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 972 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L3:;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":973
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */

#line 973 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  Py_XDECREF(__pyx_v_arr->base);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":974
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */

#line 974 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 966 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_r = NULL;

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_1;

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */

#line 977 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);

#line 977 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_t_1) {

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":978
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */

#line 978 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_r);

#line 978 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_INCREF(Py_None);

#line 978 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_r = Py_None;

#line 978 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L0;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */

#line 977 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":980
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 * 
 * 
 */

#line 980 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /*else*/ {

#line 980 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_r);

#line 980 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));

#line 980 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_r = ((PyObject *)__pyx_v_arr->base);

#line 980 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L0;

#line 980 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XGIVEREF(__pyx_r);

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 976 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":985
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_r;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_1 = NULL;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_2 = NULL;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_3 = NULL;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_4;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_5 = NULL;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_6 = NULL;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_7 = NULL;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_8 = NULL;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":986
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_declare

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_assign

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGOTREF(__pyx_t_1);

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGOTREF(__pyx_t_2);

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGOTREF(__pyx_t_3);

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    /*try:*/ {

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":987
 * cdef inline int import_array() except -1:
 *     try:
 *         _import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */

#line 987 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(1, 987, __pyx_L3_error)

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":986
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L10_try_end;

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L3_error:;

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_assign

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":988
 *     try:
 *         _import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */

#line 988 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));

#line 988 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_t_4) {

#line 988 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 988 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 988, __pyx_L5_except_error)

#line 988 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_5);

#line 988 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_6);

#line 988 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":989
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 989, __pyx_L5_except_error)

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_8);

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __PYX_ERR(1, 989, __pyx_L5_except_error)

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L5_except_error;

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L5_except_error:;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":986
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_assign

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGIVEREF(__pyx_t_1);

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGIVEREF(__pyx_t_2);

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGIVEREF(__pyx_t_3);

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L1_error;

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L10_try_end:;

#line 986 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":985
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = 0;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_5);

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_6);

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_7);

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_8);

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = -1;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 985 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":991
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_r;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_1 = NULL;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_2 = NULL;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_3 = NULL;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_4;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_5 = NULL;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_6 = NULL;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_7 = NULL;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_8 = NULL;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":992
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_declare

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_assign

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGOTREF(__pyx_t_1);

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGOTREF(__pyx_t_2);

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGOTREF(__pyx_t_3);

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    /*try:*/ {

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":993
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */

#line 993 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(1, 993, __pyx_L3_error)

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":992
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L10_try_end;

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L3_error:;

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_assign

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":994
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */

#line 994 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));

#line 994 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_t_4) {

#line 994 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 994 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 994, __pyx_L5_except_error)

#line 994 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_5);

#line 994 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_6);

#line 994 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":995
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 995, __pyx_L5_except_error)

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_8);

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __PYX_ERR(1, 995, __pyx_L5_except_error)

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L5_except_error;

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L5_except_error:;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":992
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_assign

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGIVEREF(__pyx_t_1);

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGIVEREF(__pyx_t_2);

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGIVEREF(__pyx_t_3);

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L1_error;

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L10_try_end:;

#line 992 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":991
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = 0;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_5);

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_6);

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_7);

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_8);

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = -1;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 991 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

/* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":997
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_r;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyDeclarations

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_1 = NULL;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_2 = NULL;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_3 = NULL;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int __pyx_t_4;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_5 = NULL;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_6 = NULL;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_7 = NULL;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *__pyx_t_8 = NULL;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":998
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_declare

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_assign

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGOTREF(__pyx_t_1);

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGOTREF(__pyx_t_2);

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGOTREF(__pyx_t_3);

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    /*try:*/ {

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":999
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */

#line 999 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(1, 999, __pyx_L3_error)

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":998
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L10_try_end;

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L3_error:;

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_assign

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":1000
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 */

#line 1000 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));

#line 1000 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_t_4) {

#line 1000 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 1000 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 1000, __pyx_L5_except_error)

#line 1000 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_5);

#line 1000 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_6);

#line 1000 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":1001
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 1001, __pyx_L5_except_error)

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_GOTREF(__pyx_t_8);

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __PYX_ERR(1, 1001, __pyx_L5_except_error)

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L5_except_error;

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L5_except_error:;

    /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":998
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_PyThreadState_assign

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGIVEREF(__pyx_t_1);

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGIVEREF(__pyx_t_2);

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_XGIVEREF(__pyx_t_3);

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    goto __pyx_L1_error;

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_L10_try_end:;

#line 998 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":997
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /* function exit code */

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = 0;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_5);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_6);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_7);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_8);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_r = -1;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_r;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static struct __pyx_vtabstruct_9_libpyjet_PyClusterSequence __pyx_vtable_9_libpyjet_PyClusterSequence;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_tp_new_9_libpyjet_PyClusterSequence(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  struct __pyx_obj_9_libpyjet_PyClusterSequence *p;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *o;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    o = (*t->tp_alloc)(t, 0);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  } else {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (unlikely(!o)) return 0;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  p = ((struct __pyx_obj_9_libpyjet_PyClusterSequence *)o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  p->__pyx_vtab = __pyx_vtabptr_9_libpyjet_PyClusterSequence;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return o;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static void __pyx_tp_dealloc_9_libpyjet_PyClusterSequence(PyObject *o) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_VERSION_HEX >= 0x030400a1

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (PyObject_CallFinalizerFromDealloc(o)) return;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    PyObject *etype, *eval, *etb;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    PyErr_Fetch(&etype, &eval, &etb);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    ++Py_REFCNT(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_pw_9_libpyjet_17PyClusterSequence_1__dealloc__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    --Py_REFCNT(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    PyErr_Restore(etype, eval, etb);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  (*Py_TYPE(o)->tp_free)(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyMethodDef __pyx_methods_9_libpyjet_PyClusterSequence[] = {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {"inclusive_jets", (PyCFunction)__pyx_pw_9_libpyjet_17PyClusterSequence_3inclusive_jets, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9_libpyjet_17PyClusterSequence_2inclusive_jets},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {0, 0, 0, 0}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
};

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyTypeObject __pyx_type_9_libpyjet_PyClusterSequence = {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyVarObject_HEAD_INIT(0, 0)

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  "_libpyjet.PyClusterSequence", /*tp_name*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  sizeof(struct __pyx_obj_9_libpyjet_PyClusterSequence), /*tp_basicsize*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_itemsize*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tp_dealloc_9_libpyjet_PyClusterSequence, /*tp_dealloc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_print*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_getattr*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_setattr*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_MAJOR_VERSION < 3

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_compare*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_MAJOR_VERSION >= 3

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_async*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_repr*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_number*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_sequence*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_mapping*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_hash*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_call*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_str*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_getattro*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_setattro*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_buffer*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  " Python wrapper class for fastjet::ClusterSequence\n    ", /*tp_doc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_traverse*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_clear*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_richcompare*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_weaklistoffset*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_iter*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_iternext*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_methods_9_libpyjet_PyClusterSequence, /*tp_methods*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_members*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_getset*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_base*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_dict*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_descr_get*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_descr_set*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_dictoffset*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_init*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_alloc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tp_new_9_libpyjet_PyClusterSequence, /*tp_new*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_free*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_is_gc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_bases*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_mro*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_cache*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_subclasses*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_weaklist*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_del*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_version_tag*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_VERSION_HEX >= 0x030400a1

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_finalize*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
};

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static struct __pyx_vtabstruct_9_libpyjet_PyPseudoJet __pyx_vtable_9_libpyjet_PyPseudoJet;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_tp_new_9_libpyjet_PyPseudoJet(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  struct __pyx_obj_9_libpyjet_PyPseudoJet *p;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *o;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    o = (*t->tp_alloc)(t, 0);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  } else {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (unlikely(!o)) return 0;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  p = ((struct __pyx_obj_9_libpyjet_PyPseudoJet *)o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  p->__pyx_vtab = __pyx_vtabptr_9_libpyjet_PyPseudoJet;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  new((void*)&(p->jet)) fastjet::PseudoJet();

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  new((void*)&(p->constits)) std::vector<fastjet::PseudoJet> ();

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return o;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static void __pyx_tp_dealloc_9_libpyjet_PyPseudoJet(PyObject *o) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  struct __pyx_obj_9_libpyjet_PyPseudoJet *p = (struct __pyx_obj_9_libpyjet_PyPseudoJet *)o;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_VERSION_HEX >= 0x030400a1

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (PyObject_CallFinalizerFromDealloc(o)) return;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_call_destructor(p->jet);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_call_destructor(p->constits);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  (*Py_TYPE(o)->tp_free)(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_tp_getattro_9_libpyjet_PyPseudoJet(PyObject *o, PyObject *n) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *v = PyObject_GenericGetAttr(o, n);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (!v && PyErr_ExceptionMatches(PyExc_AttributeError)) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    PyErr_Clear();

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    v = __pyx_pw_9_libpyjet_11PyPseudoJet_1__getattr__(o, n);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return v;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_getprop_9_libpyjet_11PyPseudoJet_info(PyObject *o, CYTHON_UNUSED void *x) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_pw_9_libpyjet_11PyPseudoJet_4info_1__get__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_getprop_9_libpyjet_11PyPseudoJet_pt(PyObject *o, CYTHON_UNUSED void *x) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_pw_9_libpyjet_11PyPseudoJet_2pt_1__get__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_getprop_9_libpyjet_11PyPseudoJet_eta(PyObject *o, CYTHON_UNUSED void *x) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_pw_9_libpyjet_11PyPseudoJet_3eta_1__get__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_getprop_9_libpyjet_11PyPseudoJet_phi(PyObject *o, CYTHON_UNUSED void *x) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_pw_9_libpyjet_11PyPseudoJet_3phi_1__get__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_getprop_9_libpyjet_11PyPseudoJet_mass(PyObject *o, CYTHON_UNUSED void *x) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_pw_9_libpyjet_11PyPseudoJet_4mass_1__get__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_getprop_9_libpyjet_11PyPseudoJet_e(PyObject *o, CYTHON_UNUSED void *x) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_pw_9_libpyjet_11PyPseudoJet_1e_1__get__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_getprop_9_libpyjet_11PyPseudoJet_et(PyObject *o, CYTHON_UNUSED void *x) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_pw_9_libpyjet_11PyPseudoJet_2et_1__get__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_getprop_9_libpyjet_11PyPseudoJet_px(PyObject *o, CYTHON_UNUSED void *x) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_pw_9_libpyjet_11PyPseudoJet_2px_1__get__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_getprop_9_libpyjet_11PyPseudoJet_py(PyObject *o, CYTHON_UNUSED void *x) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_pw_9_libpyjet_11PyPseudoJet_2py_1__get__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_getprop_9_libpyjet_11PyPseudoJet_pz(PyObject *o, CYTHON_UNUSED void *x) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_pw_9_libpyjet_11PyPseudoJet_2pz_1__get__(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyMethodDef __pyx_methods_9_libpyjet_PyPseudoJet[] = {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {"__getattr__", (PyCFunction)__pyx_pw_9_libpyjet_11PyPseudoJet_1__getattr__, METH_O|METH_COEXIST, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {"constituents", (PyCFunction)__pyx_pw_9_libpyjet_11PyPseudoJet_10constituents, METH_NOARGS, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {"constituents_array", (PyCFunction)__pyx_pw_9_libpyjet_11PyPseudoJet_12constituents_array, METH_VARARGS|METH_KEYWORDS, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {0, 0, 0, 0}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
};

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static struct PyGetSetDef __pyx_getsets_9_libpyjet_PyPseudoJet[] = {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {(char *)"info", __pyx_getprop_9_libpyjet_11PyPseudoJet_info, 0, (char *)0, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {(char *)"pt", __pyx_getprop_9_libpyjet_11PyPseudoJet_pt, 0, (char *)0, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {(char *)"eta", __pyx_getprop_9_libpyjet_11PyPseudoJet_eta, 0, (char *)0, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {(char *)"phi", __pyx_getprop_9_libpyjet_11PyPseudoJet_phi, 0, (char *)0, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {(char *)"mass", __pyx_getprop_9_libpyjet_11PyPseudoJet_mass, 0, (char *)0, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {(char *)"e", __pyx_getprop_9_libpyjet_11PyPseudoJet_e, 0, (char *)0, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {(char *)"et", __pyx_getprop_9_libpyjet_11PyPseudoJet_et, 0, (char *)0, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {(char *)"px", __pyx_getprop_9_libpyjet_11PyPseudoJet_px, 0, (char *)0, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {(char *)"py", __pyx_getprop_9_libpyjet_11PyPseudoJet_py, 0, (char *)0, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {(char *)"pz", __pyx_getprop_9_libpyjet_11PyPseudoJet_pz, 0, (char *)0, 0},

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {0, 0, 0, 0, 0}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
};

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PySequenceMethods __pyx_tp_as_sequence_PyPseudoJet = {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_pw_9_libpyjet_11PyPseudoJet_5__len__, /*sq_length*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*sq_concat*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*sq_repeat*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*sq_item*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*sq_slice*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*sq_ass_item*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*sq_ass_slice*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_pw_9_libpyjet_11PyPseudoJet_3__contains__, /*sq_contains*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*sq_inplace_concat*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*sq_inplace_repeat*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
};

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyMappingMethods __pyx_tp_as_mapping_PyPseudoJet = {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_pw_9_libpyjet_11PyPseudoJet_5__len__, /*mp_length*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*mp_subscript*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*mp_ass_subscript*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
};

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyTypeObject __pyx_type_9_libpyjet_PyPseudoJet = {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyVarObject_HEAD_INIT(0, 0)

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  "_libpyjet.PyPseudoJet", /*tp_name*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  sizeof(struct __pyx_obj_9_libpyjet_PyPseudoJet), /*tp_basicsize*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_itemsize*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tp_dealloc_9_libpyjet_PyPseudoJet, /*tp_dealloc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_print*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_getattr*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_setattr*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_MAJOR_VERSION < 3

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_compare*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_MAJOR_VERSION >= 3

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_async*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_pw_9_libpyjet_11PyPseudoJet_14__repr__, /*tp_repr*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_number*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  &__pyx_tp_as_sequence_PyPseudoJet, /*tp_as_sequence*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  &__pyx_tp_as_mapping_PyPseudoJet, /*tp_as_mapping*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_hash*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_call*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_str*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tp_getattro_9_libpyjet_PyPseudoJet, /*tp_getattro*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_setattro*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_buffer*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  " Python wrapper class for fastjet::PseudoJet\n    ", /*tp_doc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_traverse*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_clear*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_richcompare*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_weaklistoffset*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_pw_9_libpyjet_11PyPseudoJet_7__iter__, /*tp_iter*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_iternext*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_methods_9_libpyjet_PyPseudoJet, /*tp_methods*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_members*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_getsets_9_libpyjet_PyPseudoJet, /*tp_getset*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_base*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_dict*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_descr_get*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_descr_set*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_dictoffset*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_init*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_alloc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tp_new_9_libpyjet_PyPseudoJet, /*tp_new*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_free*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_is_gc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_bases*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_mro*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_cache*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_subclasses*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_weaklist*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_del*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_version_tag*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_VERSION_HEX >= 0x030400a1

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_finalize*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
};

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *__pyx_freelist_9_libpyjet___pyx_scope_struct____iter__[8];

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static int __pyx_freecount_9_libpyjet___pyx_scope_struct____iter__ = 0;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyObject *__pyx_tp_new_9_libpyjet___pyx_scope_struct____iter__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *p;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject *o;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_9_libpyjet___pyx_scope_struct____iter__ > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__)))) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    o = (PyObject*)__pyx_freelist_9_libpyjet___pyx_scope_struct____iter__[--__pyx_freecount_9_libpyjet___pyx_scope_struct____iter__];

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    memset(o, 0, sizeof(struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__));

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    (void) PyObject_INIT(o, t);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    PyObject_GC_Track(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  } else {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    o = (*t->tp_alloc)(t, 0);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (unlikely(!o)) return 0;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  p = ((struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *)o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  new((void*)&(p->__pyx_v_jet)) fastjet::PseudoJet();

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  new((void*)&(p->__pyx_t_0)) std::vector<fastjet::PseudoJet> ::iterator();

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return o;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static void __pyx_tp_dealloc_9_libpyjet___pyx_scope_struct____iter__(PyObject *o) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *p = (struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *)o;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject_GC_UnTrack(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_call_destructor(p->__pyx_v_jet);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_call_destructor(p->__pyx_t_0);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  Py_CLEAR(p->__pyx_v_self);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_9_libpyjet___pyx_scope_struct____iter__ < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__)))) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_freelist_9_libpyjet___pyx_scope_struct____iter__[__pyx_freecount_9_libpyjet___pyx_scope_struct____iter__++] = ((struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *)o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  } else {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    (*Py_TYPE(o)->tp_free)(o);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static int __pyx_tp_traverse_9_libpyjet___pyx_scope_struct____iter__(PyObject *o, visitproc v, void *a) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  int e;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *p = (struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *)o;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (p->__pyx_v_self) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return 0;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static int __pyx_tp_clear_9_libpyjet___pyx_scope_struct____iter__(PyObject *o) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyObject* tmp;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *p = (struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__ *)o;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  tmp = ((PyObject*)p->__pyx_v_self);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  p->__pyx_v_self = ((struct __pyx_obj_9_libpyjet_PyPseudoJet *)Py_None); Py_INCREF(Py_None);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  Py_XDECREF(tmp);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return 0;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyTypeObject __pyx_type_9_libpyjet___pyx_scope_struct____iter__ = {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  PyVarObject_HEAD_INIT(0, 0)

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  "_libpyjet.__pyx_scope_struct____iter__", /*tp_name*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  sizeof(struct __pyx_obj_9_libpyjet___pyx_scope_struct____iter__), /*tp_basicsize*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_itemsize*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tp_dealloc_9_libpyjet___pyx_scope_struct____iter__, /*tp_dealloc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_print*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_getattr*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_setattr*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_MAJOR_VERSION < 3

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_compare*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_MAJOR_VERSION >= 3

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_async*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_repr*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_number*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_sequence*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_mapping*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_hash*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_call*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_str*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_getattro*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_setattro*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_as_buffer*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_doc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tp_traverse_9_libpyjet___pyx_scope_struct____iter__, /*tp_traverse*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tp_clear_9_libpyjet___pyx_scope_struct____iter__, /*tp_clear*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_richcompare*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_weaklistoffset*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_iter*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_iternext*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_methods*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_members*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_getset*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_base*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_dict*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_descr_get*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_descr_set*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_dictoffset*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_init*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_alloc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tp_new_9_libpyjet___pyx_scope_struct____iter__, /*tp_new*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_free*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_is_gc*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_bases*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_mro*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_cache*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_subclasses*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_weaklist*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_del*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_version_tag*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_VERSION_HEX >= 0x030400a1

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  0, /*tp_finalize*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
};

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static PyMethodDef __pyx_methods[] = {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  {0, 0, 0, 0}

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
};

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
#if PY_MAJOR_VERSION >= 3

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
static struct PyModuleDef __pyx_moduledef = {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_VERSION_HEX < 0x03020000

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #else

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    PyModuleDef_HEAD_INIT,

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    "_libpyjet",

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    0, /* m_doc */

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    -1, /* m_size */

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    __pyx_methods /* m_methods */,

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    NULL, /* m_reload */

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    NULL, /* m_traverse */

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    NULL, /* m_clear */

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    NULL /* m_free */

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
};

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_DTYPE, __pyx_k_DTYPE, sizeof(__pyx_k_DTYPE), 0, 0, 1, 1},
  {&__pyx_n_s_DTYPE_EP, __pyx_k_DTYPE_EP, sizeof(__pyx_k_DTYPE_EP), 0, 0, 1, 1},
  {&__pyx_n_s_DTYPE_PTEPM, __pyx_k_DTYPE_PTEPM, sizeof(__pyx_k_DTYPE_PTEPM), 0, 0, 1, 1},
  {&__pyx_n_s_E, __pyx_k_E, sizeof(__pyx_k_E), 0, 0, 1, 1},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_n_s_KeyError, __pyx_k_KeyError, sizeof(__pyx_k_KeyError), 0, 0, 1, 1},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_n_s_PyPseudoJet___iter, __pyx_k_PyPseudoJet___iter, sizeof(__pyx_k_PyPseudoJet___iter), 0, 0, 1, 1},
  {&__pyx_kp_s_PyPseudoJet_pt_0_3f_eta_1_3f_phi, __pyx_k_PyPseudoJet_pt_0_3f_eta_1_3f_phi, sizeof(__pyx_k_PyPseudoJet_pt_0_3f_eta_1_3f_phi), 0, 0, 1, 0},
  {&__pyx_n_s_R, __pyx_k_R, sizeof(__pyx_k_R), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_cluster, __pyx_k_cluster, sizeof(__pyx_k_cluster), 0, 0, 1, 1},
  {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
  {&__pyx_n_s_empty, __pyx_k_empty, sizeof(__pyx_k_empty), 0, 0, 1, 1},
  {&__pyx_n_s_ep, __pyx_k_ep, sizeof(__pyx_k_ep), 0, 0, 1, 1},
  {&__pyx_n_s_eta, __pyx_k_eta, sizeof(__pyx_k_eta), 0, 0, 1, 1},
  {&__pyx_n_s_float64, __pyx_k_float64, sizeof(__pyx_k_float64), 0, 0, 1, 1},
  {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
  {&__pyx_n_s_getattribute, __pyx_k_getattribute, sizeof(__pyx_k_getattribute), 0, 0, 1, 1},
  {&__pyx_kp_s_home_endw_workspace_pyjet_pyjet, __pyx_k_home_endw_workspace_pyjet_pyjet, sizeof(__pyx_k_home_endw_workspace_pyjet_pyjet), 0, 0, 1, 0},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_info, __pyx_k_info, sizeof(__pyx_k_info), 0, 0, 1, 1},
  {&__pyx_n_s_itemsize, __pyx_k_itemsize, sizeof(__pyx_k_itemsize), 0, 0, 1, 1},
  {&__pyx_n_s_iter, __pyx_k_iter, sizeof(__pyx_k_iter), 0, 0, 1, 1},
  {&__pyx_n_s_jet, __pyx_k_jet, sizeof(__pyx_k_jet), 0, 0, 1, 1},
  {&__pyx_n_s_libpyjet, __pyx_k_libpyjet, sizeof(__pyx_k_libpyjet), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_mass, __pyx_k_mass, sizeof(__pyx_k_mass), 0, 0, 1, 1},
  {&__pyx_n_s_names, __pyx_k_names, sizeof(__pyx_k_names), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_kp_s_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 0, 1, 0},
  {&__pyx_kp_s_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 0, 1, 0},
  {&__pyx_kp_s_object_must_be_of_type_PyPseudoJ, __pyx_k_object_must_be_of_type_PyPseudoJ, sizeof(__pyx_k_object_must_be_of_type_PyPseudoJ), 0, 0, 1, 0},
  {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
  {&__pyx_n_s_pT, __pyx_k_pT, sizeof(__pyx_k_pT), 0, 0, 1, 1},
  {&__pyx_n_s_phi, __pyx_k_phi, sizeof(__pyx_k_phi), 0, 0, 1, 1},
  {&__pyx_n_s_pseudojets, __pyx_k_pseudojets, sizeof(__pyx_k_pseudojets), 0, 0, 1, 1},
  {&__pyx_n_s_pt, __pyx_k_pt, sizeof(__pyx_k_pt), 0, 0, 1, 1},
  {&__pyx_n_s_ptmin, __pyx_k_ptmin, sizeof(__pyx_k_ptmin), 0, 0, 1, 1},
  {&__pyx_n_s_px, __pyx_k_px, sizeof(__pyx_k_px), 0, 0, 1, 1},
  {&__pyx_n_s_py, __pyx_k_py, sizeof(__pyx_k_py), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_pz, __pyx_k_pz, sizeof(__pyx_k_pz), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
  {&__pyx_n_s_sequence, __pyx_k_sequence, sizeof(__pyx_k_sequence), 0, 0, 1, 1},
  {&__pyx_n_s_sort, __pyx_k_sort, sizeof(__pyx_k_sort), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_vectors, __pyx_k_vectors, sizeof(__pyx_k_vectors), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_KeyError = __Pyx_GetBuiltinName(__pyx_n_s_KeyError); if (!__pyx_builtin_KeyError) __PYX_ERR(0, 70, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(0, 77, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 146, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(1, 218, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(1, 799, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(1, 989, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "pyjet/src/FastJet.pyx":77
 *         cdef PseudoJet* jet = <PseudoJet*> PyCObject_AsVoidPtr(other.jet)
 *         if jet == NULL:
 *             raise TypeError("object must be of type PyPseudoJet")             # <<<<<<<<<<<<<<
 *         return self.jet.contains(deref(jet))
 * 
 */

#line 77 "pyjet/src/FastJet.pyx"
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_object_must_be_of_type_PyPseudoJ); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 77, __pyx_L1_error)

#line 77 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_tuple_);

#line 77 "pyjet/src/FastJet.pyx"
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "pyjet/src/FastJet.pyx":205
 *         if handle_userinfo:
 *             userinfo_dict = {}
 *             for field in fields[4:]:             # <<<<<<<<<<<<<<
 *                 userinfo_dict[field] = vectors[field][i]
 *             userinfo = new PseudoJetUserInfo(<PyObject*> userinfo_dict)
 */

#line 205 "pyjet/src/FastJet.pyx"
  __pyx_slice__2 = PySlice_New(__pyx_int_4, Py_None, Py_None); if (unlikely(!__pyx_slice__2)) __PYX_ERR(0, 205, __pyx_L1_error)

#line 205 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_slice__2);

#line 205 "pyjet/src/FastJet.pyx"
  __Pyx_GIVEREF(__pyx_slice__2);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */

#line 218 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(1, 218, __pyx_L1_error)

#line 218 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_tuple__3);

#line 218 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */

#line 222 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(1, 222, __pyx_L1_error)

#line 222 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_tuple__4);

#line 222 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */

#line 259 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(1, 259, __pyx_L1_error)

#line 259 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_tuple__5);

#line 259 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */

#line 799 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 799, __pyx_L1_error)

#line 799 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_tuple__6);

#line 799 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */

#line 803 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(1, 803, __pyx_L1_error)

#line 803 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_tuple__7);

#line 803 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */

#line 823 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(1, 823, __pyx_L1_error)

#line 823 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_tuple__8);

#line 823 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":989
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(1, 989, __pyx_L1_error)

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_tuple__9);

#line 989 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":995
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(1, 995, __pyx_L1_error)

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_tuple__10);

#line 995 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":1001
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(1, 1001, __pyx_L1_error)

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GOTREF(__pyx_tuple__11);

#line 1001 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "pyjet/src/FastJet.pyx":214
 * @cython.boundscheck(False)
 * @cython.wraparound(False)
 * def cluster(np.ndarray vectors, float R, int p, bool ep=False):             # <<<<<<<<<<<<<<
 *     """
 *     Perform jet clustering on a numpy array of 4-vectors in (pT, eta, phi,
 */

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_tuple__12 = PyTuple_Pack(6, __pyx_n_s_vectors, __pyx_n_s_R, __pyx_n_s_p, __pyx_n_s_ep, __pyx_n_s_pseudojets, __pyx_n_s_sequence); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 214, __pyx_L1_error)

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_tuple__12);

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_GIVEREF(__pyx_tuple__12);

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_codeobj__13 = (PyObject*)__Pyx_PyCode_New(4, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__12, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_endw_workspace_pyjet_pyjet, __pyx_n_s_cluster, 214, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__13)) __PYX_ERR(0, 214, __pyx_L1_error)

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 214 "pyjet/src/FastJet.pyx"
  return 0;

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_L1_error:;

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_RefNannyFinishContext();

#line 214 "pyjet/src/FastJet.pyx"
  return -1;

#line 214 "pyjet/src/FastJet.pyx"
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(2, 1, __pyx_L1_error);
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(2, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_libpyjet(void); /*proto*/
PyMODINIT_FUNC init_libpyjet(void)
#else
PyMODINIT_FUNC PyInit__libpyjet(void); /*proto*/
PyMODINIT_FUNC PyInit__libpyjet(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit__libpyjet(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(2, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(2, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(2, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("_libpyjet", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(2, 1, __pyx_L1_error)
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(2, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(2, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(2, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main__libpyjet) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(2, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "_libpyjet")) {
      if (unlikely(PyDict_SetItemString(modules, "_libpyjet", __pyx_m) < 0)) __PYX_ERR(2, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_9_libpyjet_PyClusterSequence = &__pyx_vtable_9_libpyjet_PyClusterSequence;
  __pyx_vtable_9_libpyjet_PyClusterSequence.wrap = (struct __pyx_obj_9_libpyjet_PyClusterSequence *(*)(fastjet::ClusterSequence *))__pyx_f_9_libpyjet_17PyClusterSequence_wrap;
  if (PyType_Ready(&__pyx_type_9_libpyjet_PyClusterSequence) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __pyx_type_9_libpyjet_PyClusterSequence.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9_libpyjet_PyClusterSequence.tp_dict, __pyx_vtabptr_9_libpyjet_PyClusterSequence) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "PyClusterSequence", (PyObject *)&__pyx_type_9_libpyjet_PyClusterSequence) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __pyx_ptype_9_libpyjet_PyClusterSequence = &__pyx_type_9_libpyjet_PyClusterSequence;
  __pyx_vtabptr_9_libpyjet_PyPseudoJet = &__pyx_vtable_9_libpyjet_PyPseudoJet;
  __pyx_vtable_9_libpyjet_PyPseudoJet.wrap = (struct __pyx_obj_9_libpyjet_PyPseudoJet *(*)(fastjet::PseudoJet &))__pyx_f_9_libpyjet_11PyPseudoJet_wrap;
  if (PyType_Ready(&__pyx_type_9_libpyjet_PyPseudoJet) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  __pyx_type_9_libpyjet_PyPseudoJet.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9_libpyjet_PyPseudoJet.tp_dict, __pyx_vtabptr_9_libpyjet_PyPseudoJet) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "PyPseudoJet", (PyObject *)&__pyx_type_9_libpyjet_PyPseudoJet) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  __pyx_ptype_9_libpyjet_PyPseudoJet = &__pyx_type_9_libpyjet_PyPseudoJet;
  if (PyType_Ready(&__pyx_type_9_libpyjet___pyx_scope_struct____iter__) < 0) __PYX_ERR(0, 83, __pyx_L1_error)
  __pyx_type_9_libpyjet___pyx_scope_struct____iter__.tp_print = 0;
  __pyx_ptype_9_libpyjet___pyx_scope_struct____iter__ = &__pyx_type_9_libpyjet___pyx_scope_struct____iter__;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) __PYX_ERR(3, 9, __pyx_L1_error)
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), 0); if (unlikely(!__pyx_ptype_7cpython_4bool_bool)) __PYX_ERR(4, 8, __pyx_L1_error)
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), 0); if (unlikely(!__pyx_ptype_7cpython_7complex_complex)) __PYX_ERR(5, 15, __pyx_L1_error)
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) __PYX_ERR(1, 155, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) __PYX_ERR(1, 168, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) __PYX_ERR(1, 172, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) __PYX_ERR(1, 181, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) __PYX_ERR(1, 861, __pyx_L1_error)
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  #endif

  /* "_libpyjet.pyx":5
 * from libc.stdlib cimport malloc, free
 * 
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * np.import_array()
 */

#line 5 "_libpyjet.pyx"
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 5, __pyx_L1_error)

#line 5 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 5 "_libpyjet.pyx"
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(2, 5, __pyx_L1_error)

#line 5 "_libpyjet.pyx"
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "_libpyjet.pyx":7
 * import numpy as np
 * cimport numpy as np
 * np.import_array()             # <<<<<<<<<<<<<<
 * 
 * cimport cython
 */

#line 7 "_libpyjet.pyx"
  __pyx_t_2 = __pyx_f_5numpy_import_array(); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(2, 7, __pyx_L1_error)

  /* "_libpyjet.pyx":25
 * 
 * from libcpp.memory cimport shared_ptr
 * DTYPE = np.float64             # <<<<<<<<<<<<<<
 * ctypedef np.float64_t DTYPE_t
 * 
 */

#line 25 "_libpyjet.pyx"
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 25, __pyx_L1_error)

#line 25 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 25 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_float64); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 25, __pyx_L1_error)

#line 25 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 25 "_libpyjet.pyx"
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

#line 25 "_libpyjet.pyx"
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DTYPE, __pyx_t_3) < 0) __PYX_ERR(2, 25, __pyx_L1_error)

#line 25 "_libpyjet.pyx"
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "_libpyjet.pyx":28
 * ctypedef np.float64_t DTYPE_t
 * 
 * DTYPE_PTEPM = np.dtype([('pT', DTYPE), ('eta', DTYPE), ('phi', DTYPE), ('mass', DTYPE)])             # <<<<<<<<<<<<<<
 * DTYPE_EP = np.dtype([('E', DTYPE), ('px', DTYPE), ('py', DTYPE), ('pz', DTYPE)])
 * 
 */

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_DTYPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 28 "_libpyjet.pyx"
  __Pyx_INCREF(__pyx_n_s_pT);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_n_s_pT);

#line 28 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_pT);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = 0;

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_DTYPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_4);

#line 28 "_libpyjet.pyx"
  __Pyx_INCREF(__pyx_n_s_eta);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_n_s_eta);

#line 28 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_eta);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = 0;

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_DTYPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_5);

#line 28 "_libpyjet.pyx"
  __Pyx_INCREF(__pyx_n_s_phi);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_n_s_phi);

#line 28 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_n_s_phi);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = 0;

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_DTYPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_6);

#line 28 "_libpyjet.pyx"
  __Pyx_INCREF(__pyx_n_s_mass);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_n_s_mass);

#line 28 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_n_s_mass);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_3);

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = 0;

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = PyList_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_1);

#line 28 "_libpyjet.pyx"
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_4);

#line 28 "_libpyjet.pyx"
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_5);

#line 28 "_libpyjet.pyx"
  PyList_SET_ITEM(__pyx_t_3, 2, __pyx_t_5);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_6);

#line 28 "_libpyjet.pyx"
  PyList_SET_ITEM(__pyx_t_3, 3, __pyx_t_6);

#line 28 "_libpyjet.pyx"
  __pyx_t_1 = 0;

#line 28 "_libpyjet.pyx"
  __pyx_t_4 = 0;

#line 28 "_libpyjet.pyx"
  __pyx_t_5 = 0;

#line 28 "_libpyjet.pyx"
  __pyx_t_6 = 0;

#line 28 "_libpyjet.pyx"
  __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_6);

#line 28 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = 0;

#line 28 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 28 "_libpyjet.pyx"
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

#line 28 "_libpyjet.pyx"
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DTYPE_PTEPM, __pyx_t_3) < 0) __PYX_ERR(2, 28, __pyx_L1_error)

#line 28 "_libpyjet.pyx"
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "_libpyjet.pyx":29
 * 
 * DTYPE_PTEPM = np.dtype([('pT', DTYPE), ('eta', DTYPE), ('phi', DTYPE), ('mass', DTYPE)])
 * DTYPE_EP = np.dtype([('E', DTYPE), ('px', DTYPE), ('py', DTYPE), ('pz', DTYPE)])             # <<<<<<<<<<<<<<
 * 
 * include "FastJet.pyx"
 */

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_DTYPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_6);

#line 29 "_libpyjet.pyx"
  __Pyx_INCREF(__pyx_n_s_E);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_n_s_E);

#line 29 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_n_s_E);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_3);

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = 0;

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_DTYPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_5);

#line 29 "_libpyjet.pyx"
  __Pyx_INCREF(__pyx_n_s_px);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_n_s_px);

#line 29 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_n_s_px);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = 0;

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_DTYPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_4);

#line 29 "_libpyjet.pyx"
  __Pyx_INCREF(__pyx_n_s_py);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_n_s_py);

#line 29 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_py);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = 0;

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_DTYPE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 29 "_libpyjet.pyx"
  __Pyx_INCREF(__pyx_n_s_pz);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_n_s_pz);

#line 29 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_pz);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = 0;

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = PyList_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_6);

#line 29 "_libpyjet.pyx"
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_5);

#line 29 "_libpyjet.pyx"
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_4);

#line 29 "_libpyjet.pyx"
  PyList_SET_ITEM(__pyx_t_3, 2, __pyx_t_4);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_1);

#line 29 "_libpyjet.pyx"
  PyList_SET_ITEM(__pyx_t_3, 3, __pyx_t_1);

#line 29 "_libpyjet.pyx"
  __pyx_t_6 = 0;

#line 29 "_libpyjet.pyx"
  __pyx_t_5 = 0;

#line 29 "_libpyjet.pyx"
  __pyx_t_4 = 0;

#line 29 "_libpyjet.pyx"
  __pyx_t_1 = 0;

#line 29 "_libpyjet.pyx"
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_1);

#line 29 "_libpyjet.pyx"
  __Pyx_GIVEREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = 0;

#line 29 "_libpyjet.pyx"
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_dtype), __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 29 "_libpyjet.pyx"
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

#line 29 "_libpyjet.pyx"
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DTYPE_EP, __pyx_t_3) < 0) __PYX_ERR(2, 29, __pyx_L1_error)

#line 29 "_libpyjet.pyx"
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pyjet/src/FastJet.pyx":214
 * @cython.boundscheck(False)
 * @cython.wraparound(False)
 * def cluster(np.ndarray vectors, float R, int p, bool ep=False):             # <<<<<<<<<<<<<<
 *     """
 *     Perform jet clustering on a numpy array of 4-vectors in (pT, eta, phi,
 */

#line 214 "pyjet/src/FastJet.pyx"
  __pyx_t_3 = PyCFunction_NewEx(&__pyx_mdef_9_libpyjet_1cluster, NULL, __pyx_n_s_libpyjet); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 214, __pyx_L1_error)

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 214 "pyjet/src/FastJet.pyx"
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_cluster, __pyx_t_3) < 0) __PYX_ERR(0, 214, __pyx_L1_error)

#line 214 "pyjet/src/FastJet.pyx"
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "_libpyjet.pyx":34
 * 
 * # hide the FastJet banner
 * silence()             # <<<<<<<<<<<<<<
 */

#line 34 "_libpyjet.pyx"
  silence();

  /* "_libpyjet.pyx":1
 * # cython: experimental_cpp_class_def=True, c_string_type=str, c_string_encoding=ascii             # <<<<<<<<<<<<<<
 * 
 * from libc.stdlib cimport malloc, free
 */

#line 1 "_libpyjet.pyx"
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 1, __pyx_L1_error)

#line 1 "_libpyjet.pyx"
  __Pyx_GOTREF(__pyx_t_3);

#line 1 "_libpyjet.pyx"
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_3) < 0) __PYX_ERR(2, 1, __pyx_L1_error)

#line 1 "_libpyjet.pyx"
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":997
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  /*--- Wrapped vars code ---*/

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"


#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  goto __pyx_L0;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L1_error:;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_1);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_3);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_4);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_5);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_XDECREF(__pyx_t_6);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  if (__pyx_m) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    if (__pyx_d) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
      __Pyx_AddTraceback("init _libpyjet", __pyx_clineno, __pyx_lineno, __pyx_filename);

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    Py_DECREF(__pyx_m); __pyx_m = 0;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  } else if (!PyErr_Occurred()) {

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
    PyErr_SetString(PyExc_ImportError, "init _libpyjet");

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  }

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __pyx_L0:;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  __Pyx_RefNannyFinishContext();

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #if PY_MAJOR_VERSION < 3

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #else

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  return __pyx_m;

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
  #endif

#line 997 "../../.local/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd"
}

#line 1 "cython_utility"

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    return PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    return (*((__Pyx_PyCFunctionFast)meth)) (self, args, nargs, NULL);
}
#endif  // CYTHON_FAST_PYCCALL

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
#include "frameobject.h"
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = PyThreadState_GET();
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = f->f_localsplus;
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif  // CPython < 3.6
#endif  // CYTHON_FAST_PYCALL

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* RaiseException */
  #if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* GetModuleGlobalName */
    static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

/* ExtTypeTest */
      static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* SliceObject */
      static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object is unsliceable", Py_TYPE(obj)->tp_name);
bad:
    return NULL;
}

/* GetItemInt */
      static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* WriteUnraisableException */
      static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* ArgTypeTest */
      static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

/* RaiseTooManyValuesToUnpack */
      static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
      static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* RaiseNoneIterError */
      static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* GetException */
      #if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
#endif
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* SetVTable */
        static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* Import */
        static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* CodeObjectCache */
        static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
        #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
        #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(unsigned int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned int),
                                     little, !is_unsigned);
    }
}

/* Declarations */
        #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
        #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0, -1);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
        #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
        #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0, -1);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
    const enum NPY_TYPES neg_one = (enum NPY_TYPES) -1, const_zero = (enum NPY_TYPES) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
        static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *x) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 2 * PyLong_SHIFT) {
                            return (unsigned int) (((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 3 * PyLong_SHIFT) {
                            return (unsigned int) (((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 4 * PyLong_SHIFT) {
                            return (unsigned int) (((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) ((((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned int) -1;
        }
    } else {
        unsigned int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (unsigned int) -1;
        val = __Pyx_PyInt_As_unsigned_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned int");
    return (unsigned int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned int");
    return (unsigned int) -1;
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
        static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FetchCommonType */
        static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* SwapException */
        #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* PyObjectCallMethod1 */
        static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto done;
#if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *args;
            PyObject *function = PyMethod_GET_FUNCTION(method);
            #if CYTHON_FAST_PYCALL
            if (PyFunction_Check(function)) {
                PyObject *args[2] = {self, arg};
                result = __Pyx_PyFunction_FastCall(function, args, 2);
                goto done;
            }
            #endif
            #if CYTHON_FAST_PYCCALL
            if (__Pyx_PyFastCFunction_Check(function)) {
                PyObject *args[2] = {self, arg};
                result = __Pyx_PyCFunction_FastCall(function, args, 2);
                goto done;
            }
            #endif
            args = PyTuple_New(2);
            if (unlikely(!args)) goto done;
            Py_INCREF(self);
            PyTuple_SET_ITEM(args, 0, self);
            Py_INCREF(arg);
            PyTuple_SET_ITEM(args, 1, arg);
            Py_INCREF(function);
            Py_DECREF(method); method = NULL;
            result = __Pyx_PyObject_Call(function, args, NULL);
            Py_DECREF(args);
            Py_DECREF(function);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallOneArg(method, arg);
done:
    Py_XDECREF(method);
    return result;
}

/* CoroutineBase */
        #include <structmember.h>
#include <frameobject.h>
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (!ev) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#if PY_VERSION_HEX >= 0x030300A0
        else if (Py_TYPE(ev) == (PyTypeObject*)PyExc_StopIteration) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
        }
#endif
        else if (unlikely(PyTuple_Check(ev))) {
            if (PyTuple_GET_SIZE(ev) >= 1) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                value = PyTuple_GET_ITEM(ev, 0);
                Py_INCREF(value);
#else
                value = PySequence_ITEM(ev, 0);
#endif
            } else {
                Py_INCREF(Py_None);
                value = Py_None;
            }
            Py_DECREF(ev);
        }
        else if (!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            value = ev;
        }
        if (likely(value)) {
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
    } else if (!PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
#endif
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__pyx_CoroutineObject *self) {
    PyObject *exc_type = self->exc_type;
    PyObject *exc_value = self->exc_value;
    PyObject *exc_traceback = self->exc_traceback;
    self->exc_type = NULL;
    self->exc_value = NULL;
    self->exc_traceback = NULL;
    Py_XDECREF(exc_type);
    Py_XDECREF(exc_value);
    Py_XDECREF(exc_traceback);
}
static CYTHON_INLINE
int __Pyx_Coroutine_CheckRunning(__pyx_CoroutineObject *gen) {
    if (unlikely(gen->is_running)) {
        PyErr_SetString(PyExc_ValueError,
                        "generator already executing");
        return 1;
    }
    return 0;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value) {
    PyObject *retval;
    __Pyx_PyThreadState_declare
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            PyErr_SetString(PyExc_TypeError,
                            "can't send non-None value to a "
                            "just-started generator");
            return NULL;
        }
    }
    if (unlikely(self->resume_label == -1)) {
        PyErr_SetNone(PyExc_StopIteration);
        return NULL;
    }
    __Pyx_PyThreadState_assign
    if (value) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
#else
        if (self->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(__pyx_tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = __pyx_tstate->frame;
        }
#endif
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(self);
    }
    self->is_running = 1;
    retval = self->body((PyObject *) self, value);
    self->is_running = 0;
    if (retval) {
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
#else
        if (self->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_CLEAR(f->f_back);
        }
#endif
    } else {
        __Pyx_Coroutine_ExceptionClear(self);
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(PyObject *retval) {
    if (unlikely(!retval && !PyErr_Occurred())) {
        PyErr_SetNone(PyExc_StopIteration);
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen_FetchStopIterationValue(&val);
    ret = __Pyx_Coroutine_SendEx(gen, val);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = Py_TYPE(yf)->tp_iternext(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value);
    }
    return __Pyx_Coroutine_MethodReturn(retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Next(yf);
        } else
        #endif
            ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL);
    if (retval) {
        Py_DECREF(retval);
        PyErr_SetString(PyExc_RuntimeError,
                        "generator ignored GeneratorExit");
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (!raised_exception
        || raised_exception == PyExc_StopIteration
        || raised_exception == PyExc_GeneratorExit
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_GeneratorExit)
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_StopIteration))
    {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *typ;
    PyObject *tb = NULL;
    PyObject *val = NULL;
    PyObject *yf = gen->yieldfrom;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit)) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(__Pyx_Coroutine_SendEx(gen, NULL));
            goto throw_here;
        }
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Throw(yf, args);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Throw(yf, args);
        } else
        #endif
        {
            PyObject *meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            ret = PyObject_CallObject(meth, args);
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(__Pyx_Coroutine_SendEx(gen, NULL));
}
static int __Pyx_Coroutine_traverse(PyObject *self, visitproc visit, void *arg) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    Py_VISIT(gen->exc_type);
    Py_VISIT(gen->exc_value);
    Py_VISIT(gen->exc_traceback);
    return 0;
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    Py_CLEAR(gen->exc_type);
    Py_CLEAR(gen->exc_value);
    Py_CLEAR(gen->exc_traceback);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label > 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1
        if (PyObject_CallFinalizerFromDealloc(self))
#else
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
    __Pyx_Coroutine_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *res;
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label <= 0)
        return ;
#if PY_VERSION_HEX < 0x030400a1
    assert(self->ob_refcnt == 0);
    self->ob_refcnt = 1;
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
    res = __Pyx_Coroutine_Close(self);
    if (res == NULL)
        PyErr_WriteUnraisable(self);
    else
        Py_DECREF(res);
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if PY_VERSION_HEX < 0x030400a1
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0) {
        return;
    }
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        self->ob_refcnt = refcnt;
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self)
{
    PyObject *name = self->gi_name;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_name;
    Py_INCREF(value);
    self->gi_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self)
{
    PyObject *name = self->gi_qualname;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_qualname;
    Py_INCREF(value);
    self->gi_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (gen == NULL)
        return NULL;
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->exc_type = NULL;
    gen->exc_value = NULL;
    gen->exc_traceback = NULL;
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    PyObject_GC_Track(gen);
    return gen;
}

/* PatchModuleWithCoroutine */
            static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
            #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (!abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_VERSION_HEX >= 0x03030000) ? "collections.abc" : "collections");
        if (!module) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_VERSION_HEX >= 0x03030000) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if (0) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Generator */
            static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {0, 0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if PY_VERSION_HEX >= 0x030400a1
    __Pyx_Coroutine_del,
#endif
};
static int __pyx_Generator_init(void) {
    __pyx_GeneratorType_type.tp_getattro = PyObject_GenericGetAttr;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

/* CheckBinaryVersion */
            static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* ModuleImport */
            #ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

/* TypeImport */
            #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

/* InitStrings */
            static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
  #else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
  #endif
#else
  res = PyNumber_Int(x);
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
